// this code is automatically generated by Stanley VJMPL



class solenoidPilotedPneumaticValve {

// --- structure --- 
ambientSource ambientSource;
pneumaticValve pvName;
orifice ofName;
_2In3WaySolenoidValve svName;
// --- inputs --- 
// pipe pvName.pipeIn;
// pipe pvName.actuationPipeIn;
// pipe ofName.pipeIn;
// _3WayCmd svName.valveCmdIn;
// pipe svName.pos1PipeIn;
// pipe svName.pos2PipeIn;
pipe pneumaticSourceIn;
_3WayCmd valveCmdIn;
pipe pipeIn;
// --- outputs --- 
pipe pipeOut;
// pipe ambientSource.pipeOut;
// pipe pvName.pipeOut;
// pipe ofName.pipeOut;
// pipe svName.pipeOut;
// --- attributes --- 
displayStateValues displayState;


// --- constructor --- 
/// A combination of a solenoid valve, an orifice, and a pneumatic valve.
{
// --- set parameter variable values --- 
ambientSource.ambientSource_setParams (pneumatics);
pvName.pneumaticValve_setParams (pneumatics);
ofName.orifice_setParams (pneumatics);
svName._2In3WaySolenoidValve_setParams (pneumatics);

// --- facts --- 
if ((pvName.mode = faulty) |
    (ofName.mode= faulty) |
    ((svName.mode = stuckInPosition1) |
     (svName.mode = stuckInPosition2) |
     (svName.mode = faulty)))
 displayState = failed;
else {
if (pvName.pvMode = open)
  displayState = open;
else {
if (pvName.pvMode = closed)
  displayState = closed;
 else
  displayState = unknown;
}};


// --- connections --- 
pipeIn = pvName.pipeIn; 
ofName.pipeOut = pvName.actuationPipeIn; 
svName.pipeOut = ofName.pipeIn; 
valveCmdIn = svName.valveCmdIn; 
ambientSource.pipeOut = svName.pos1PipeIn; 
pneumaticSourceIn = svName.pos2PipeIn; 
pvName.pipeOut = pipeOut; 
}
}

