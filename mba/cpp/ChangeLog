$Id: ChangeLog,v 1.1760 2006/05/02 00:04:55 taylor Exp $

2006-04-20  William Taylor  <william.m.taylor@nasa.gov>
	* RELEASE 2.7.8.2: tagged L2_2_7_8_1
	* src/livingstone/version.c : updated for 2.7.8.2
	* doc/index.html : modified - replace "skunkworks" with "l2tools"
	* doc/starting/skunkworks.hmtl : removed
	* doc/starting/l2tools.hmtl : added --
	* doc/starting/stanley.html : modified --
	* doc/starting/stanley-build.html : modified --
	* doc/starting/stanley-build-win32.html : modified --
	* doc/starting/stanley-schematic.html : modified --

	* include/livingstone/l2conf.h -- windows check for type def
	* include/mba-utils/array-allocator.h - change in L2_free_array for 
	  windows.

2005-08-02  William Taylor  <william.m.taylor@nasa.gov>
	* RELEASE 2.7.8.1: tagged L2Skunk_2_7_8_1
	* src/livingstone/version.c : updated for 2.7.8.1

2004-08-11 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change \n to endl in two uses of ostream::operator<<()
	* src/api/livingstone.cpp (read_file() and print_search_parameters()) :
	  changed \n to endl in uses of ostream::operator<<()

2004-06-04 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-partition in prune-and-search; PR2421
	* include/transition/tracker.h
	  (prune_and_search()) : call eraseCandidatePartition() before pruning
	  and call partition() after pruning

2004-05-27 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Another change to read_from_file() because ramdisk is 8.3 but not Win32
	* src/api/parameters.cpp
	  (read_from_file()) : avoid slash manipulation
	
2004-05-27 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	If file name contains an extension, try replacing it with '.par'
	* src/api/parameters.cpp
	  (read_from_file()) : if unable to open input file, try one name
	
2004-05-25 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Allow additional extensions to *.params file; PR2415
	* include/api/parameters.h
	  (read_from_file()) : Modified doc comment
	* src/api/livingstone.cpp
	  (read_file()) : Do not add ".params" extension before passing to
	   L2_parameters::read_from_file()
	* src/api/parameters.cpp
	  Try appending ".params" to file name. If that doesn't work, try
	  appending ".par". If that doesn't work, fail.

2004-04-01 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Return immediately if Candidate is empty; PR2322
	* src/api/livingstone.cpp
	  (get_failure()) : return immediately if Candidate is empty: size()
	  returns 1. Also, the for loop iterated over the size of data member
	  current_candidate_; I modified it to iterate over the size of
	  parameter candidate.

2004-02-23  Will Taylor  <william.m.taylor@nasa.gov>
	* RELEASE 2.7.8: tagged L2Skunk_2_7_8 
	* src/livingstone/version.c : update for 2.7.8

2004-02-23 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed excess TYPENAME tokens
	* include/mba_utils/hash_table.h
	  (typedef slist_iterator, begin(), end(), erase(), find(), insert(),
	   insert_duplicate()) : removed TYPENAME
	* include/mba_utils/slist.h
	  (operator<<()) : removed TYPENAME
	
2004-02-23 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change conditionalization of TYPENAME
	* include/livingstone/l2conf.h
	  (#define TYPENAME) : FOR GCC 3.0 and later, #define to be typename;
	   otherwise #define to be empty
	
2004-02-20 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change conditionalization of stringstream/strstream
	* src/debuggers/domain.cpp
	  (#include <s*stream>) : For GCC 3.0 and later, #include <sstream>;
	   otherwise #include <strstream.h>
	
2004-02-19 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Assure that VXWORKS is defined if VXWORKS531 is defined
	* include/livingstone/l2conf.h
	  (#define VXWORKS) : added if VXWORKS531 is defined and VXWORKS is not
	
2004-02-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed 3 assert() calls that were tautological
	* include/readers/common.h
	  (bonds_check_access(), bounds_check_access_friend()) : remove
	   assert(name == 0 || name != 0);
	
2004-02-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionally give argument to constructor intializer of Slist_item and
	conditionally add MBApair(int)
	* include/mba_utils/pair.h
	  (MBApair(int)) : conditionally added
	* include/mba_utils/slist_item.h
	  (Slist_item()) : conditionally give 0 argument to item() initializer

2004-02-17 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Use C stdio instead of streams in class L2_parameters; PR2275
	* src/api/parameters.cpp
	  (read_from_file()) : use FILE* instead of ifstream
	
2004-02-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Define TEMPLATE_OPERATOR dependent on CODETEST macro
	* include/mba_utils/slist.h
          (TEMPLATE_OPERATOR) : define conditionally
	
2004-02-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Unconditionally compile typedefs; PR2240
	* include/mba_utils/slist.h
	  (size_type, pointer, const_pointer, reference, const_reference,
	   iterator, const_iterator) : remove conditional compilation

2004-02-11 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed left-over definition of macro VXWORKS531
	* include/mba_utils/hash_table.h
	  (#define VXWORKS531) : removed

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionally named formal parameter to compile under VxWorks 5.3.1
	* src/mba_utils/array_allocator.cpp
	  (get_one_block_from_malloc()) : name formal parameter only if 
	   DISABLE_DYNAMIC_MEMORY is not defined

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unsigned > 0 tests to compile under VxWorks 5.3.1
	* include/readers/clause.h
	  (prop()) : removed 0 <= i
	* include/readers/transition.h
	  (clause() : removed 0 <= i
	* src/readers/clause.cpp
	  (L2rClause()) : removed 0 <= i
	* src/readers/transition.cpp
	  (L2rTransition()) : removed 0 <= i
	
2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Inserted !! before input.getline() to compile under VxWorks 5.3.1
	* src/api/parameters.cpp
	  (read_from_file()) : changed intput.getline() to !!input.getline()
	   since it is used as a boolean

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionally use formal parameter to compile under VxWorks 5.3.1
	* include/readers/common.h
  	  (bounds_check_access(), bounds_check_access_friend()) :
	   conditionally use formal parameter name

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast away const before streaming to compile under VxWorks 5.3.1
	* include/readers/enumeration.h
	  (isValidMember()) : cast away const before streaming

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed names of unused parameter to compile under VxWorks 5.3.1
	* include/api/livingstone.h
	  (init_tracker_created_writer()) : commented out the name of unused
	   formal parameter writer

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed NULL to 0 to compile under VxWorks 5.3.1
	* include/conflict_db/candidate.h
	  (get_assignment()) : change NULL to 0
	* include/readers/livingstone_reader.h
	  (get_file()) : change NULL to 0
	* include/transition/CandidateEqClass.h
	  (get()) : change NULL to 0
	* include/transition/T_system.h
	  (get_present_variable()) : change NULL to 0

2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast away const before deleting to compile under VxWorks 5.3.1
	* src/transition/transitioned.cpp
	  (~Transitioned()) : cast away const before deleting
	
2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed names of 2 unused parameters to compile under VxWorks 5.3.1
	* src/transition/T_system.cpp
	  (do_create_constraint()) : commented out the names of unused formal
	   parameters is_volatile and in_theory
	  
2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast away const before deleting to compile under VxWorks 5.3.1
	* src/transition/T_system.cpp
	  (~T_system(), truncate(), prune_inconsistent_candidates()) :
	   cast away const before deleting
	
2004-02-10 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionally define default constructor to compile under VxWorks 5.3.1
	* include/debuggers/trajectory.h
	  (Parts::Parts()) : conditionally added default constructor

2004-02-09 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast away const before deleting to compile under VxWorks 5.3.1
	* src/conflict_db/conflict_db.cpp
	  (~Conflict_db(), destroy_conflict(), eraseCandidates()) :
	   cast away const before deleting
	
2004-02-09 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionalized return value of Hash_table::insert()
	* include/mba_utils/hash_table.h
	  (insert()) : conditionalize return value: bool if VxWorks 5.3.1,
	   MBApair<iterator, bool> otherwise
	* src/readers/from_xmpl.cpp
	  (create_enum(), create_variable()) :
	   conditionalized call to Hash_table::insert()

2004-02-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded typedefs to compile under VxWorks 5.3.1
	* include/mba_utils/hash_table.h
	  (Hash_table()) : expand several macros inline to avoid both the
	   typedef value_type and the preprocessor
	
2004-02-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded typedefs to compile under VxWorks 5.3.1
	* include/mba_utils/hash_table.h
	  (erase(), find(), insert(), insert_duplicate(), begin(), end()) :
	   substitute Hash_table_iterator<Key,Type> for iterator

2004-02-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded typedefs to compile under VxWorks 5.3.1
	* include/mba_utils/hash_table.h
	  (size(), erase(), Hash_table()) : substitute HASH_TABLE_SIZE_TYPE
	   for size_type
	
2004-02-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded typedefs to compile under VxWorks 5.3.1
	* include/mba_utils/hash_table.h
	  (Hash_table_iterator::slist_iterator, Hash_table(), find(), insert(),
	   insert_duplicate()) : substitute MBApair<const Key, const Type> for
	   value_type

2004-02-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionalize item() initializer from constructor to compile under
	VxWorks 5.3.1
	* include/mba_utils/slist_item.h
	  (Slist_item()) : conditionally remove item() initializer

2004-02-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made hash function explicit to compile under VxWorks 5.3.1
	* include/mba_utils/hash_table.h
	  (Hash_table()) : conditionally compile
	* include/readers/from_xmpl.h
	  (from_xmpl()) : add enums_(hashpjw) and vars_(hashpjw) to
	   initializers; also initialize several other data members
	* include/readers/xlate_merge_eq_vars.h
	  (xlate_merge_eq_vars()) : add variableHashMap(hashpjw) to
	   initializers
	* src/debuggers/L2_string_map.cpp
	  (L2_string_map()) : add name2id(hashpjw) to initializers
	* src/debuggers/livingstone_debug.cpp
	  (Livingstone_debug()) : add variableHashMap(hashpjw) to initializers
	* src/debuggers/tracker_debug.cpp
	  (Tracker_debug()) : add ckpt_by_name(hashpjw) to initializers
	
2004-02-05 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded typedefs to compile under VxWorks 5.3.1
	* include/mba_utils/hash_table.h
	  (HASH_TABLE_SIZE_TYPE) : added
	  (iterator) : Subsituted HASH_TABLE_SIZE_TYPE in typedef
	  (begin(), end()) :
	   Substitute Hash_table_iterator<Key,Type> for
	   HashTable<Key,Type>::iterator
	  (erase(const Key&), erase(iterator&)) : Substitute
	   HASH_TABLE_SIZE_TYPE for HashTable<Key,Type>::size_type
	  (erase(iterator&)) : Substitute Hash_table_iterator<Key,Type> for
	   iterator
	  (find(), insert(), insert_duplicate()) : Substitute
	   Hash_table_iterator<Key,Type> for HashTable<Key,Type>::iterator
	
2004-02-05 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Specify usector Array template parameter to compile under VxWorks 5.3.1
	* include/api/livingstone.h
	  (reconfigure(), reconfigureAssign(), reconfigureResult()
	   setupInitialModes()) : specify usector Array template parameter
	* include/conflict_db/candidate.h
	  (get_weight(), sum_assignment_weights(), assignments) : specify
	   usector Array template parameter
	* include/debuggers/L2_string_map.h
	  (name_by_id, nowvar_by_id, readvar_by_id) : specify usector Array
	   template parameter
	* include/debuggers/T_system_debug.h
	  (candidate_details()) : specify usector Array template parameter
	* include/debuggers/livingstone_debug.h
	  (beginOptimizedAwayVariableNames(), endOptimizedAwayVariableNames(),
	   begainAllVariableNames(), endAllVariableNames(), allVariableNames,
	   optimizedAwayVariableNames) : specify usector Array template
	   parameter
	* include/mba_utils/algos.h
	  (sort()) : specify usector Array template parameter
	* include/mba_utils/array.h
	  (template class Array) : let usector default if not VxWorks 5.3.1
          (~Array()) : perform assignments if not VxWorks 5.3.1
	  (Array(), operator=()) : add usector template parameter to argument
	* include/readers/livingstone_reader.h
	  (optimize(), merge_eq_vars()) : specify usector Array template
	   parameter
	* include/readers/xlate_merge_eq_vars.h
	  (getOptimizedAwayVariableNames(), optimizedAwayVariableNames) :
	   specify usector Array template parameter
	* include/tms/proposition.h
	  (forward declaration) : conditionalize forward declaration
	* include/transition/T_system.h
	  (new_conflicts) : specify usector Array template parameter
	* src/api/livingstone.cpp
	  (reconfigureAssign(), reconfigureResult(), setupInitialModes(),
	   cleanupInitialModes(), reconfigure()) : specify usector Array
	   template parameter
	* src/checkpoint/checkpoint.cpp
	  (store_state_var(), InitialModeAssignments::iterator,
	   InitialModeAssignment::modes_,
	   CPCandidate::failure_iterator, CPCandidate::failures_,
	   CPConflict::iterator, CPConflict::asssignments_,
	   CPConflict::assign_iterator, CPConflict::cmds_obs_,
	   CPConflict::init_iterator, CPConflict::initial_modes_,
	   CPConflict::cand_iterator, CPConflict::candidates_,
	   CPConflict::conf_iterator, CPConflict::conflicts_
	   CPConflict::command_history, data::serialize(),
	   data::serializeStateVariables(),
	   data::serializeInitialModeAssignments()
	   data::serializeCandidates(), data::serializeCandidate(),
	   data::serializeConflicts(), data::serializeConflict(),
	   data::serializeCommandHistory()) : specify usector Array template
	   parameter
	* src/conflict_db/candidate.cpp
	   (Candidate(), operator=(), assign(), remove(), truncate(),
	    smallest_unresolved_conflict(), get_conflict_assignments(),
	    equivalent(), add_consistently(), superset_of(),
	    consistent_assignment(), contains(), get_weight(),
	    sum_assignment_weights()) : specify usector Array template
	   parameter
	* src/debuggers/T_system_debug.cpp
	  (candidate_details()) : specify usector Array template parameter
	* src/debuggers/livingstone_debug.cpp
	  (collectAllVariableNames()) : specify usector Array template
	   parameter
	* src/debuggers/tracker_debug.cpp
	  (list_checkpoints()) : specify usector Array template parameter
	* src/livdll/livdll.cpp
	  (Java_livdll_LivingstoneEngineJNI_mapOverCandidateAssignmentsJNI(),
	   Java_livdll_LivingstoneEngineJNI_mapOverAttributeAssignmentsJNI()) :
	   specify usector Array template parameter
	* src/readers/livingstone_reader.cpp
	  (merge_eq_vars()) : specify usector Array template parameter
	* src/readers/xlate_merge_eq_vars.cpp
	  (getOptimizedAwayVariableNames()) : specify usector Array template
	   parameter
	* src/transition/T_system.cpp
	  (summarize_conflict(), install_new_state()) : specify usector Array
	   template parameter
	
2004-02-04 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded typedefs to compile under VxWorks 5.3.1
	* include/mba_utils/slist.h
	  (insert.h()) : substituted "Slist_iterator<Type>" for "iterator"
	  (insert_before()) : substituted "Slist_iterator<Type>" for "iterator"
	  (erase()) : substituted "Slist_iterator<Type>" for "iterator"
	  (operator<<()) : remove class scope

2004-02-04 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionalized to compile under VxWorks 5.3.1
	* include/mba_utils/slist.h
	  (SLIST_SIZE_TYPE) : defined
	  (TEMPLATE_OPERATOR) : defined conditionally
	  (size_type) : substituted "SLIST_SIZE_TYPE" for "unsigned"
	  (size_type, pointer, const_pointer, reference, const_reference
	   iterator, const_iterator) : defined conditionally
	  (size()) : substituted "SLIST_SIZE_TYPE" for "size_type"
	  (insert_before()) : substituted "Slist_iterator<Type>" for "iterator"
	  (erase()) : substituted "Slist_iterator<Type>" for "iterator"
	  (remove_duplicates()) : substituted "SLIST_SIZE_TYPE" for "size_type"
	  (begin()) : substituted "Slist_iterator<Type>" for "iterator"
	  (begin()) : substituted "Slist_iterator<const Type>" for
	   "const_iterator"
	  (end()) : substituted "Slist_iterator<Type>" for "iterator"
	  (end()) : substituted "Slist_iterator<const Type>" for
	   "const_iterator"
	  (operator<<()) : inserted TEMPLATE_OPERATOR
	  (operator+()) : inserted TEMPLATE_OPERATOR
	  (length) : substituted "SLIST_SIZE_TYPE" for "unsigned"
	  (size()) : conditionalized return type
	  (insert()) : substituted "Slist_iterator<Type>" for "iterator"
	  (remove_duplicates()) :
	   conditionalized return type
	   substituted "SLIST_SIZE_TYPE" for "size_type"

2004-02-03 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed typedef const_reference and reference
	* include/mba_utils/slist.h (reference, const_reference) : removed
	
2004-02-03 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed typedef const_pointer and pointer
	* include/mba_utils/slist.h (pointer, const_pointer) : removed

2004-01-29 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed #if to include <sstream> only for MSVC++ and gcc version >= 3.2
	* src/debuggers/domain.cpp
	  (#include) Include <sstream> for MSVC++ and gcc 3.2 and higher;
	  include <sstream.h> for gcc higher than 2.95; else include
	  <strstream>
	
2004-01-29 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Define reset_memory_flag() and call instead of L2_alloc_reclaim();
	PR1548
	* include/mba_utils/array_allocator.h (reset_memory_flag()) : added
	* src/mba_utils/array_allocator.cpp (reset_memory_flag()) : added
	* src/readers/l2flight/l2flight.cpp
	  (main()) : call reset_memory_flag() before instantiating Livingstone
	* src/readers/l2test/l2test.cpp
	  (main()) : call reset_memory_flag() before instantiating
	  Livingstone_debug
	
2004-01-29 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Call L2_alloc_reclaim() immediately before instantiating Livingstone;
	* src/readers/l2flight/l2flight.cpp
	  (main()) : call L2_alloc_reclaim() before instantiating Livingstone
	* src/readers/l2test/l2test.cpp
	  (main()) : call L2_alloc_reclaim() before instantiating
	  Livingstone_debug

2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed ios::in parameter from ifstream definition
	* src/api/parameters.cpp (read_from_file()) : Removed ios::in
	  parameter from ifstream definition

2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Placed _STD_ before ostringstream and ostrstream
	* src/debuggers/domain.cpp

2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed ostream to _STD_ ostream
	* src/readers/proposition.cpp

2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change ::std to std:: in #define
	* include/livingstone/L2_stream.h : change ::std to std:: in #define
	
2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Add defined(_MSC_VER) to #if condition
	* include/livingstone/L2_stream.h: Add defined(_MSC_VER) to condition
	* include/livingstone/L2_fstream.h: Add defined(_MSC_VER) to condition
	* include/livingstone/L2_iostream.h: Add defined(_MSC_VER) to condition
	
2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Chanded "std::" to "_STD_ "
	* include/api/livingstone.h
	* include/checkpoint/checkpoint.h
	* include/conflict_db/assignable.h
	* include/debuggers/T_system_debug.h
	* include/debuggers/conflict_db_debug.h
	* include/debuggers/ltms_debug.h
	* include/livingstone/L2_assert.h
	* include/mba_utils/MBA_string.h
	* include/mba_utils/list_parser.h
	* include/mba_utils/pair.h
	* include/mba_utils/slist.h
	* include/mba_utils/slist_item.h
	* include/readers/L2_file_translator.h
	* include/readers/from_l2.h
	* include/readers/livingstone_reader.h
	* include/readers/options.h
	* include/readers/proposition.h
	* include/readers/to_graphviz.h
	* include/readers/variable.h
	* include/readers/varkind.h
	* src/api/livingstone.cpp
	* src/api/parameters.cpp
	* src/checkpoint/checkpoint.cpp
	* src/conflict_db/assignment.cpp
	* src/conflict_db/candidate.cpp
	* src/conflict_db/conflict.cpp
	* src/cover/cover.cpp
	* src/cover/cover_tracker.cpp
	* src/cover/cover_tracker_debug.cpp
	* src/debuggers/T_system_debug.cpp
	* src/debuggers/conflict_db_debug.cpp
	* src/debuggers/domain.cpp
	* src/debuggers/livingstone_debug.cpp
	* src/debuggers/ltms_debug.cpp
	* src/debuggers/tracker_debug.cpp
	* src/liv_utils/api_gen/api_gen.cpp
	* src/liv_utils/api_scr/api_scr.cpp
	* src/livdll/livdll.cpp
	* src/livingstone/L2_assert.cpp
	* src/mba_utils/array_allocator.cpp
	* src/mba_utils/list_parser.cpp
	* src/opsat/agenda_types.cpp
	* src/opsat/cbfs_tracker_debug.cpp
	* src/readers/from_any.cpp
	* src/readers/from_l2.cpp
	* src/readers/from_xmpl.cpp
	* src/readers/livingstone_reader.cpp
	* src/readers/options.cpp
	* src/readers/proposition.cpp
	* src/readers/to_graphviz.cpp
	* src/readers/to_l2.cpp
	* src/readers/to_t_system.cpp
	* src/readers/xlate_merge_eq_vars.cpp
	* src/readers/xlate_remove_duplicates.cpp
	* src/readers/l2flight/l2flight.cpp
	* src/readers/l2test/l2test.cpp
	* src/readers/names2ids/names2ids.cpp
	* src/readers/xmpl2l2/xmpl2l2.cpp
	* src/tms/clause.cpp
	* src/tms/ltms.cpp
	* src/tms/proposition.cpp
	* src/transition/T_system.cpp
	* src/transition/transitioned.cpp

2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made std::explict and replaced <*stream> with <livingstone/L2*stream.h>
	* include/api/livingstone.h
	* include/checkpoint/checkpoint.h
	* include/conflict_db/assignable.h
	* include/debuggers/T_system_debug.h
	* include/debuggers/conflict_db_debug.h
	* include/debuggers/ltms_debug.h
	* include/livingstone/L2_assert.h
	* include/mba_utils/MBA_string.h
	* include/mba_utils/list_parser.h
	* include/mba_utils/pair.h
	* include/mba_utils/slist.h
	* include/mba_utils/slist_item.h
	* include/readers/L2_file_translator.h
	* include/readers/from_l2.h
	* include/readers/livingstone_reader.h
	* include/readers/options.h
	* include/readers/proposition.h
	* include/readers/to_graphviz.h
	* include/readers/variable.h
	* include/readers/varkind.h
	* src/api/livingstone.cpp
	* src/api/parameters.cpp
	* src/checkpoint/checkpoint.cpp
	* src/conflict_db/assignment.cpp
	* src/conflict_db/candidate.cpp
	* src/conflict_db/conflict.cpp
	* src/cover/cover.cpp
	* src/cover/cover_tracker.cpp
	* src/cover/cover_tracker_debug.cpp
	* src/debuggers/T_system_debug.cpp
	* src/debuggers/conflict_db_debug.cpp
	* src/debuggers/domain.cpp
	* src/debuggers/livingstone_debug.cpp
	* src/debuggers/ltms_debug.cpp
	* src/debuggers/tracker_debug.cpp
	* src/liv_utils/api_gen/api_gen.cpp
	* src/liv_utils/api_scr/api_scr.cpp
	* src/livdll/livdll.cpp
	* src/livingstone/L2_assert.cpp
	* src/mba_utils/array_allocator.cpp
	* src/mba_utils/list_parser.cpp
	* src/opsat/agenda_types.cpp
	* src/opsat/cbfs_tracker_debug.cpp
	* src/readers/from_any.cpp
	* src/readers/from_l2.cpp
	* src/readers/from_xmpl.cpp
	* src/readers/livingstone_reader.cpp
	* src/readers/options.cpp
	* src/readers/proposition.cpp
	* src/readers/to_graphviz.cpp
	* src/readers/to_l2.cpp
	* src/readers/to_t_system.cpp
	* src/readers/xlate_merge_eq_vars.cpp
	* src/readers/xlate_remove_duplicates.cpp
	* src/readers/l2flight/l2flight.cpp
	* src/readers/l2test/l2test.cpp
	* src/readers/names2ids/names2ids.cpp
	* src/readers/xmpl2l2/xmpl2l2.cpp
	* src/tms/clause.cpp
	* src/tms/ltms.cpp
	* src/tms/proposition.cpp
	* src/transition/T_system.cpp
	* src/transition/transitioned.cpp

2004-01-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added L2_stream.h, L2_fstream.h, L2_iostream.h
	* include/livingstone/L2_stream.h : added
	* include/livingstone/L2_fstream.h : added
	* include/livingstone/L2_iostream.h : added

2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove redundant #include
	* include/api/parameters.h (all) : removed redundant #include
	* include/opsat/cbfs_tracker_debug.h (all) : removed redundant #include
	* src/readers/l2flight/l2flight.cpp (all) : removed redundant #include

2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove redundant #include
	* include/debuggers/livingstone_debug.h (all) : removed redundant
	  #include
	* src/readers/xlate_remove_duplicates.cpp (all) : removed redundant
	  #include
	* src/readers/xlate_merge_eq_vars.cpp (all) : removed redundant
	  #include
	* src/readers/names2ids/names2ids.cpp (all) : removed redundant
	  #include

2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove redundant #include
	* include/readers/clause.h (all) : removed redundant #include
	* include/readers/variable.h (all) : removed redundant #include
	* include/readers/proposition.h (all) : removed redundant #include
	* include/readers/to_l2.h (all) : removed redundant #include
	* include/readers/transition.h (all) : removed redundant #include
	* src/liv_utils/api_scr/api_scr.cpp (all) : removed redundant #include
	* src/readers//to_t_system.cpp (all) : removed redundant #include
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove redundant #include
	* include/api/livingstone.h (all) : removed redundant #include
	* include/cover/cover_tracker_debug.h (all) : removed redundant
	  #include
	* include/debuggers/conflict_db_debug.h (all) : removed redundant
	  #include
	* include/debuggers/tracker_debug.h (all) : removed redundant #include
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove redundant #include
	* src/debuggers/conflict_db_debug.cpp (all): remove redundant #include
	  
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove operator<<(ostream&, VarKind)
	* include/readers/varkind.h
	  (operator<<(ostream&, VarKind)) : remove

2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove operator<<(ostream&, const Assignment&)
	* include/conflict_db/assignment.h
	  (operator<<(ostream&, const Assignment&)) : remove
	* src/conflict_db/assignment.cpp
	  (operator<<(ostream&, const Assignment&)) : remove

2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delete commented-out code
	* include/conflict_db/candidate.h (all): deleted commented-out code
	* src/conflict_db/candidate.cpp (all): deleted commented-out code
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delete operator<<(ostream&, const Candidate&)
	* include/conflict_db/candidate.h
	  (operator<<(ostream&, const Candidate&)) : remove
	* src/conflict_db/candidate.cpp
  	  (operator<<(ostream&, const Candidate&)) : remove
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delete operator<<(ostream&, const Conflict&)
	* include/conflict_db/conflict.h
	  (operator<<(ostream&, const Conflict&)) : remove
	* src/conflict_db/conflict.cpp
	  (operator<<(ostream&, const Conflict&)) : remove
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delete operator<<(ostream&, const CBFSElement&)
	* include/opsat/agenda_types.h
	  (operator<<(ostream&, const CBFSElement&)) : remove
	* src/opsat/agenda_types.cpp
	  (operator<<(ostream&, const CBFSElement&)) : remove
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delete commented-out code
	* include/tms/clause.h (all): deleted commented-out code
	* src/tms/clause.cpp (all): deleted commented-out code
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
    	Remove operator<<(ostream&, const Clause&)
	* include/tms/clause.h
	  (operator<<(ostream&, const Clause&)) : remove
	* src/tms/clause.cpp
	  (operator<<(ostream&, const Clause&)) : remove
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove #include <iostream>
	* include/tms/proposition.h (#include <iostream>): remove
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delete commented-out code
	* include/tms/proposition.h (all): deleted commented-out code
	* src/tms/proposition.cpp (all): deleted commented-out code
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove operator<<(ostream&, const Proposition&)
	* include/tms/proposition.h
	  (operator<<(ostream&, const Proposition&)) : remove
	* src/tms/proposition.cpp
	  (operator<<(ostream&, const Proposition&)) : remove
	
2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove operator<<(ostream&, const T_system::Proto_assignment&)
	* include/transition/T_system.h
	  (operator<<(ostream&, const T_system::Proto_assignment&)) : remove
	* src/transition/T_system.cpp
	  (operator<<(ostream&, const T_system::Proto_assignment&)) : remove

2004-01-26 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove name of unusued parameter from placement new function signature
	* include/mba_utils/array_allocator.h
	  (operator new()) : removed name of unused parameter sz from signature

2004-01-21 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Undid previous change; it was not portable.
	
2004-01-21 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change do{...}while(0) to {...} in macros, saving 16 bytes per usage;
	PR2229
	* include/livingstone/L2_assert.h
	  (L2_throw(), L2_assert()) : change {...} to ({...}) in macros
	* src/conflict_db/conflict_db.cpp
	  (cdb_record()) : change do{...}while(0) to ({...})
	* src/readers/from_any.cpp
	  (verbose()) : change do{...}while(0) to ({...})
	* src/readers/from_l2.cpp
	  (verbose()) : change do{...}while(0) to ({...})
	* src/readers/from_xmpl.cpp
	  (verbose()) : change do{...}while(0) to ({...})
	* src/readers/L2_file.cpp
	  (verbose(), alloc_and_zero()) : change do{...}while(0) to ({...})
	* src/readers/livingstone_reader.cpp
	  (verbose()) : change do{...}while(0) to ({...})
	* src/readers/to_t_system.cpp
	  (verbose(), record()) : change do{...}while(0) to ({...})
	* src/readers/xlate_merge_eq_vars.cpp
	  (verbose()) : change do{...}while(0) to ({...})
	* src/readers/xlate_remove_duplicates.cpp
	  (verbose()) : change do{...}while(0) to ({...})
	* src/tms/ptheory.cpp
	  ptheory_record()) : change do{...}while(0) to ({...})
	* src/transition/T_system.cpp
	  (t_sys_record()) : change do{...}while(0) to ({...})
	* src/transition/tracker.cpp
	  (record()) : change do{...}while(0) to ({...})
	
2004-01-21 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove while(1); at the end of L2_throw with ENABLE_PRINT_ERROR
	* include/livingstone/L2_assert.h
	  (L2_throw()) : remove while(1); after abort() or exit(1)
	
2004-01-21 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change do{...}while(0) to {...} in macro, saving 16 bytes per usage
	* include/livingstone/L2_assert.h
	  (L2_throw()) : change do{...}while(0) to {...}
	  (NORETURN) : moved earlier in file
	
2004-01-20 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change do{...}while(0) to {...} in macro, saving 16 bytes per usage
	* include/livingstone/L2_assert.h
	  (L2_assert()) : change do{...}while(0) to {...}

2004-01-15 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change conditional on definition of macro NORETURN; PR2225
	* include/livingstone/L2_assert.h
	  (NORETURN) : modify to define NORETURN as emtpy if VXWORKS is defined

2004-01-15 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change 3 calls to abort() with calls to exit(1); PR2226
	* include/livingstone/L2_assert.h
	  (L2_throw()) : replace abort() with exit(1) if ENABLE_ABORT is not
	  defined
	* include/mba_utils/array_allocator.cpp
	  (get_one_block_from_malloc()) : replace abort() with exit(1) if
	  ENABLE_ABORT is not defined
	* src/livingstone/L2_assert.cpp
	  (L2_error_function()) : replace abort() with exit(1) if ENABLE_ABORT
	  is not defined

2004-01-15 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Initialize local variable to suppress compiler warning
	* src/readers/from_memory.cpp:
	  (read_one_variable()): initialize local variable kind

2004-01-14 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Clear cin before entry to main loop; PR2223
	* src/readers/l2flight/l2flight.cpp: clear cin before main loop
	
2004-01-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Use L2_alloc_array() and L2_free_array() instead of new[] and delete[]
	* src/transition/T_system.cpp: Modified ~T_system() and
	  start_new_trajectories_map() to use L2_alloc_array() and
	  L2_free_array() instead of new[] and delete[]
	
2004-01-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary class scope prefix from copy constructor
	* include/conflict_db/candidate.h: removed class scope prefix
	  "Candidate::" from copy constructor declaration
	
2004-01-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Make Livingstone_reader a public subclass of Pooled
	* include/reader/livingstone_reader.h: make Livingstone_reader a public
	  subclass of Pooled
	
2004-01-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Make Trajectory::Parts a public subclass of Pooled; PR2213
	* include/debuggers/trajectory.h: make Parts a public subclass of
	  Pooled
	
2004-01-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Make CandidateEqClass, Partition and Triple public subclasses of Pooled
	* include/readers/to_t_system.h: include mba_utils/pooled.h and make
	  Partition a public subclass of Pooled
	* include/transition/CandidateEqClass.h: include mba_utils/pooled.h
	  and make CandidateEqClass and Triple public subclasses of Pooled

2003-11-19  Will Taylor  <william.m.taylor@nasa.gov>
	* RELEASE 2.7.7: tagged L2Skunk_2_7_7 - tagged changes since 11-03
	* src/livingstone/version.c : update for 2.7.7 - updated to this date

2003-11-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change Conflict_db::size() to Conflict_db::candidates.size(); PR2174
	* src/conflict_db/conflict_db.cpp
	  getCandidate() : change size() to candidates.size()
	* src/transition/T_system.cpp
	  truncate() :  change size() to getCandidates().size()
	
2003-11-03  Will Taylor  <william.m.taylor@nasa.gov>
	* RELEASE 2.7.7: tagged L2Skunk_2_7_7
	* src/livingstone/version.c : update for 2.7.7

2003-10-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added 'using namespace std;'
	* src/readers/xmpl2l2/xmpl2l2.cpp (All): added 'using namespace std;'
	
2003-10-27 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Change <iostream.h> to <iostream> and <fstream.h> to <fstream> globally
	* include/api/livingstone.h
	* include/api/parameters.h
	* include/checkpoint/checkpoint.h
	* include/conflict_db/assignable.h
	* include/conflict_db/assignment.h
	* include/conflict_db/candidate.h
	* include/conflict_db/conflict.h
	* include/cover/cover_tracker_debug.h
	* include/debuggers/T_system_debug.h
	* include/debuggers/conflict_db_debug.h
	* include/debuggers/livingstone_debug.h
	* include/debuggers/ltms_debug.h
	* include/debuggers/tracker_debug.h
	* include/livingstone/L2_assert.h
	* include/mba_utils/MBA_string.h
	* include/mba_utils/pair.h
	* include/mba_utils/slist_item.h
	* include/opsat/agenda_types.h
	* include/opsat/cbfs_tracker_debug.h
	* include/readers/L2_file_translator.h
	* include/readers/clause.h
	* include/readers/enumeration.h
	* include/readers/livingstone_reader.h
	* include/readers/options.h
	* include/readers/proposition.h
	* include/readers/to_l2.h
	* include/readers/transition.h
	* include/readers/variable.h
	* include/readers/varkind.h
	* include/tms/clause.h
	* include/tms/proposition.h
	* include/transition/T_system.h
	* src/api/livingstone.cpp
	* src/api/parameters.cpp
	* src/checkpoint/checkpoint.cpp
	* src/conflict_db/assignment.cpp
	* src/conflict_db/candidate.cpp
	* src/conflict_db/conflict.cpp
	* src/cover/cover_tracker.cpp
	* src/cover/cover_tracker_debug.cpp
	* src/debuggers/L2_string_map.cpp
	* src/debuggers/T_system_debug.cpp
	* src/debuggers/conflict_db_debug.cpp
	* src/debuggers/domain.cpp
	* src/debuggers/livingstone_debug.cpp
	* src/debuggers/ltms_debug.cpp
	* src/debuggers/tracker_debug.cpp
	* src/liv_utils/api_gen/api_gen.cpp
	* src/liv_utils/api_scr/api_scr.cpp
	* src/livdll/livdll.cpp
	* src/mba_utils/array_allocator.cpp
	* src/opsat/agenda_types.cpp
	* src/opsat/cbfs_tracker_debug.cpp
	* src/readers/L2_file_translator.cpp
	* src/readers/from_any.cpp
	* src/readers/from_l2.cpp
	* src/readers/from_xmpl.cpp
	* src/readers/livingstone_reader.cpp
	* src/readers/options.cpp
	* src/readers/proposition.cpp
	* src/readers/to_l2.cpp
	* src/readers/to_t_system.cpp
	* src/readers/xlate_merge_eq_vars.cpp
	* src/readers/xlate_remove_duplicates.cpp
	* src/readers/l2flight/l2flight.cpp
	* src/readers/l2test/l2test.cpp
	* src/readers/names2ids/names2ids.cpp
	* src/tms/clause.cpp
	* src/tms/proposition.cpp
	* src/transition/T_system.cpp
	
2003-10-27 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fix preprocessor commands to prevent multiple placement new definition
	* include/mba_utils/array_allocator.h : modify conditional compilation
	  of code to #include <new> and to define operator new(size_t, void*)
	
2003-10-24 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionally insert keyword "typename" where g++ 3.2.2 requires
	* include/livingstone/l2conf.h (all) : conditionally define TYPENAME
	* include/mba_utils/algos.h (insert_sorted(), sort()) : added TYPENAME
	* include/mba_utils/hash_table.h (slist_iterator, begin(), end(),
	  erase(const Key&), erase(iterator&), find(), insert(),
	  insert_duplicate()) : added TYPENAME
	* include/mba_utils/slist.h (size(), remove_duplicates(),
	  operator<<()) : added TYPENAME

2003-05-14  Will Taylor  <william.m.taylor@nasa.gov>
	* RELEASE 2.7.6: tagged L2Skunk_2_7_6
	* src/livingstone/version.c : update for 2.7.6

2003-05-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Use flag to determine whether Clause is a transition Clause; PR1780
	* include/tms/clause.h
	  (enum bit_masks) : added TRANSITION = 1 << 7
	  (is_transition(), set_transition()) : added
	* include/transition/transitioned.h
	  (add_transition_clause()) : added call to Clause::set_transition()
	* src/checkpoint/checkpoint.cpp
	  (delete_outdated_constraints()) : replaced call to 
	  L2_checkpoint::data::hasTransitionClauseCounts() with call to
	  Clause::is-transition
	* src/transition/transitioned.cpp
	  (fixed typo in comment)
	
2003-05-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed incorrect argument in Transitioned::planner_transition(); PR1782
	* src/transition/transitioned.cpp (planner_transition()) : passed
	  incorrect value to instantiate_unindexed_clauses()

2003-03-17 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed apparently unnecessary double quotes from project pathname;
	PR1729
	* mba/mba.dsw

2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Deleted project dlltest from workspace
	* mba/mba.dsw
	  Deleted project dlltest
	
2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Bad project settings for api_scr in Release configuration
	* src/liv_utils/api_scr/api_scr.dsp
	  Modified object/library modules and additional library path for link
	
2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Bad project settings for api_gen in Release configuration
	* src/liv_utils/api_gen/api_gen.dsp
	  Modified additional library path for linking Release configuration
	
2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Bad project settings for realtime_api
	* src/realtime_api/realtime_api.dsp
	  Re-added livingstone_dispatcher.h, guardedqueue.cpp, livapi_rt.cpp,
	  livingstone_dispatcher.cpp, timeout_handlers.cpp
	
2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Neglected to make changes to two files in previous four checkins
	* include/realtime_api/win32/livapi_rt.h (what I intended)

2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Neglected to make changes to two files in previous three checkins
	* include/realtime_api/win32/livingstone_dispatcher.h (what I intended)

2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Neglected to make changes to two files in previous two checkins
	* include/realtime_api/userfcns.h (what I intended)

2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Neglected to make changes to two files in previous checkin
	* src/realtime_api/win32/livapi_rt.cpp (what I intended)
        * src/realtime_api/win32/livingstone_dispatcher.cpp (what I intended)

2003-03-13 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Many realtime_api modules had the wrong #include paths
	* include/realtime_api/userfcns.h
	  (ReportTransitions()) : changed type of parameter from Tracker_debug*
	  to Tracker*
	* include/realtime_api/win32/livapi_rt.h
	  (all) changed #include <realtime_api/guardedqueue.h> to
	  #include <realtime_api/win32/guardedqueue.h>
	  changed #include <realtime_api/livingstone_dispatcher.h> to
	  #include <realtime_api/win32/livingstone_dispatcher.h>
	* include/realtime_api/win32/livingstone_dispatcher.h
	  (all) changed #include <realtime_api/guardedqueue.h> to
	  #include <realtime_api/win32/guardedqueue.h>
	* src/realtime_api/win32/guardedqueue.cpp
	  (all) removed #include <realtime_api/guardedqueue.h> and added
	  #include <realtime_api/win32/guardedqueue.h> and
	  #include <realtime_api/posix/guardedqueue.h>
	* src/realtime_api/win32/livapi_rt.cpp
	  (all) changed #include <realtime_api/livapi_rt.h> to
	  #include <realtime_api/win32/livapi_rt.h>
	  Changed #include <test/time_delays.h> to
	  #include <../src/test/time_delays.h>
	* src/realtime_api/src/win32/livingstone_dispatcher.cpp
	  (all) changed #include <realtime_api/livingstone_dispatcher.h> to
	  (LivingstoneDispatcher()) : in initializer for report_func, deleted
	   first argument to constructor ReportTransitions()
	  #include <realtime_api/win32/livingstone_dispatcher.h>
	* src/realtime_api/win32/timeout_handlers.cpp
	  (all) changed #include <realtime_api/livapi_rt.h> to
	  #include <realtime_api/win32/timeout_handlers.cpp
	* src/test/time_delays.h
	  (all) changed #include <enumapi.h> to #include "./enumapi.h"

2003-03-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Bad project settings for api_scr
	* src/liv_utils/api_scr/api_scr.dsp
	  Removed str_convert.cpp from the project
	  Added api_scr.cpp to the project
	  Added apid.lib, debuggersd.lib, livingstone.lib and readers.lib to
	  the link list
	  No longer ignoring LIBCMTD

2003-03-11 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Restored nominal transition clauses all had horizon time step; PR1713
	* include/transition/transitioned.h
	  (Proto_transition::instantiate()) : added parameter fromTimeStep and
	  renamed parameter timestep to toTimeStep
	  (instantiate_unindexed_clauses()) : added parameter fromTimeStep and
	  renamed parameter time_step to toTimeStep
	* src/transition/transitioned.cpp
	  (Proto_transition::instantiate()) : added parameter fromTimeStep and
	  renamed parameter timestep to toTimeStep; fixed assignment to
	  pTransition
	  (instantiate_unindexed_clauses()) : added parameter fromTimeStep and
	  renamed parameter time_step to toTimeStep
	  (instantiate_clauses(), add_commanded_transitions(),
	   planner_transition()) : added argument in call to
	   instantiate_unindexed_clauses()
	  (instantiate_indexed_clauses(), instantiate_autonomous_clauses(),
	   instantiate_unindexed_clauses(), instantiate_all_indexed_clauses()):
	   added argument in call to Proto_transition::instantiate()
	  (planner_transition()) : renamed parameter timestep to toTimeStep
	
2003-03-07 Will Taylor <william.m.taylor@nasa.gov>
	Changed arg list of throw_error: 2nd arg type jobject => jclass.
	All JNI methods whose second call arg is object, now
	call throw_error with a second arg of env->GetObjectClass(self),
	rather than self
	* src/livdll/livdll.cpp
	
2003-03-07 Will Taylor <william.m.taylor@nasa.gov>
	Terminate fully-qualified signature class names for
	createNativeException with a ;
	* src/livdll/livdll.cpp
	  (throw_error)
	  (variableValueAtTimeJNI)
	  (variableExogenousAtTimeJNI)
	
2003-03-07 Will Taylor <william.m.taylor@nasa.gov>
	Update MSVC++ project file for changed header file locations
	* src/livdll/livdll.dsp
	  header files are included from include/livdll, rather
	  than src/livdll
	
2003-03-07 Will Taylor <william.m.taylor@nasa.gov>
	Reorder include statements
	* src/livdll/livdll.cpp
	  #include <livdll/LivingstoneEngineJNI.h>
	  now preceeds all other src/include statements.
	  Extra #include <jni.h> removed
	* src/livdll/Makefile.in
	  jdk1.3 => jdk1.4

2003-03-07 Will Taylor <william.m.taylor@nasa.gov>
	Added Java include files for JDK 1.4
	* include/jdk1.4/jawt.h  jni.h  jvmdi.h  jvmpi.h
	* include/jdk1.4/linux/jawt_md.h  jni_md.h  
	* include/jdk1.4/solaris/jawt_md.h  jni_md.h  
	* include/jdk1.4/win32/jawt_md.h  jni_md.h  

2003-03-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rename parameters in progress methods to clarify their role
	* include/transition/transitioned.h
	  (add_idle_transitions(unsigned, const Transition*)) : changed
	   timeStep to fromTimeStep and changed a pointer to a reference
	  (add_commanded_transitions(), instantiate_clauses()) : renamed
	   parameters
	  (instantiate_indexed_clauses()) : renamed timeStep to toTimeStep and
	   added parameter fromTimeStep
	* src/checkpoint/checkpoint.cpp
	  (restore_unindexed_clauses()) : changed timeStep to toTimeStep
	  (restore_indexed_clauses()) : renamed parameters; changed one
	   parameter from pointer to reference; rewrote so as not to modify
	   parameter
	  (restore_command_constraints()) : renamed local variables
	* src/transition/transitioned.cpp
	  (instantiate_clauses(), add_commanded_transitions()): renamed
	   parameters and added fromTimeStep argument in call to
	   instantiate_indexed_clauses()
	  (instantiate_indexed_clauses()) : changed timeStep to toTimeStep and
	   added parameter fromTimeStep
	  (add_idle_transitions(unsigned, const Transition*)) : changed
	   timeStep to fromTimeStep and changed pointer to reference
	  (Proto_transition::instantiate()) : changed timeStep to toTimeStep

2003-02-19 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Include LivingstoneEngineJNI.h from include/livdll directory
	* src/livdll/livdll.cpp (#include) : include LivingstoneEngineJNI.h
	  from include/livdll directory
	
2003-02-19 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed make_pair to make_MBApair to avoid conflicting with STL
	* include/mba_utils/pair.h (make_pair()): renamed make_MBApair
	
2003-02-19 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed class pair to MBApair to avoid conflicting with STL
	* include/api/livingstone.h
	  (reconfigure(), reconfigureAssign(), setupInitialModes(),
	   cleanupInitialModes()): changed class name pair to MBApair
	* include/debuggers/L2_string_map.h
	  (prop2varval, get_assignment_of_prop()): changed class name pair to
	   MBApair
	* include/mba_utils/hash_table.h
	  (value_type, insert(), table), insert(const Key&, const Type&):
	   changed class name pair to MBApair
	* include/mba_utils/pair.h
	  (everywhere): changed class name pair to MBApair
	* include/transition/T_system.h
	  (Proto_assignment): changed class name pair to MBApair
	* include/transition/transitioned.h
	  (Entry_type): changed class name pair to MBApair
	* src/api/livingstone.cpp
	  (reconfigureAssign(), setupInitialModes(), cleanupInitialModes(),
	   reconfigure()) : changed class name pair to MBApair
	* src/checkpoint/checkpoint.cpp
	  (store_command_history(), restore_command_constraints(), CPConflict,
	   handleStartCommand(), serializeCommandHistory()): changed class
	   name pair to MBApair
	* src/debuggers/L2_string_map.cpp
	  (add_variable(), get_assignment_of_prop()): changed class name pair
	   to MBApair

2003-02-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed __attributes__ arguments in header for throw_error
	* src/livdll/livdll.cpp
	
2003-02-18 Steve Wragg  <swragg@maily.arc.nasa.gov>
	?
	* src/livdll/livdll.cpp

2003-02-18 Steve Wragg  <swragg@maily.arc.nasa.gov>
	Folded livdll2 into livdll
	* src/livdll/livdll.cpp

2003-02-05 Ray Garcia <rgarcia@email.arc.nasa.gov>
        Added Skunkworks accessor method for Discrepancy Reporting
        * src/livdll/livdll.cpp
          (findDiscrepancysJNI)
        * src/livdll/LivingstoneEngine.h

2003-01-30 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Call eraseCandidatePartition() in body of Tracker::~Tracker; PR1682
	* include/transition/tracker.h
	  (~Tracker()) : call eraseCandidatePartition() in body

2003-01-24  Will Taylor  <taylor@email.arc.nasa.gov>
	* RELEASE 2.7.5: tagged L2Skunk_2_7_5
	* src/livingstone/version.c : update for 2.7.5

2003-01-22 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Choose to use livdll or livdll2 as a configure option; PR1677
	* Makefile.in (rule to make liblivdll.so) : changed "livdll" in target
	  from a literal to a variable
	* configure (all) : changed when configure.in changed
	* configure.in
	  (enable-livdll2) : added definition of configure option and
	   conditional assignment of L2LIB
	  (FEATURE_DIRS) : changed "livdll" from a literal to a variable
	* src/liv_utils/api_gen/Makefile.in (DEPS_L) : changed "livdll" from a
	  literal to a variable
	* src/liv_utils/api_scr/Makefile.in (DEPS_L) : changed "livdll" from a
	  literal to a variable
	* src/livdll2/Makefile.in (all) : new file

2003-01-16 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	find_discrepant_observations() and find_discrepant_commands() passing
	wrong predicate on Clauses; PR1674
	* include/conflict_db/conflict_db.h
	  (is_command(), is_observable()) : added
	* src/conflict_db/conflict_db.cpp
	  (is_command(), is_observable()) : added
	* src/debuggers/T_system_debug.cpp
	  (true_for_all_clauses()) : removed unused method
	  (find_discrepant_observations(), find_discrepant_commands()) :
	   replaced second argument in call to LTMS::last_conflict()

2003-01-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fix typo in if-condition
	* src/transition/CandidateEqClass.cpp
	  (isEquivalent (const Slist<const Triple*>&,
	   const Slist<const Triple*>&) const) : fixed typo in second conjunct
	
2003-01-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast away const from a const pointer before deleting
	* src/transition/CandidateEqClass.cpp (deleteTriples()) : cast
	  const Triple* to Triple* efore deleting
	
2003-01-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed parameter from call to Tracker::partition()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_getCandidateClassCountJNI()) : removed
	  parameter from call to Tracker::partition()
	
2003-01-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Opsat_CBFS::supersetWithState() mis-handled State Variables
	* src/opsat/opsat.cpp (supersetWithState()) : removed one line that
	  shouldn't have been there
	
2003-01-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Equivalence test did not expand State Variables (PR1669)
	* include/transition/CandidateEqClass.h
	  (belongs()) : Removed parameter transitive; added parameter t_system
	* include/transition/tracker.h
	  (equivalenceClassIndex(), partition()) : removed parameter transitive
	* src/debuggers/tracker_debug.cpp
	  (doPrintClasses()) : removed parameter from call to
	   Tracker::partition()
	* src/opsat/opsat.cpp
	  (find_consistent_candidates()) : removed second parameter from call
	   to Tracker::equivalenceClassIndex()
	* src/transition/CandidateEqClass.cpp
	  (belongs()) : Removed parameter transitive; added parameter t_system
	* src/transition/tracker.cpp
	  (equivalenceClassIndex(), partition()) : removed parameter transitive

2002-12-05 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Add T_system::get_transition()
	* include/transition/T_system.h (get_transition()) : added declaration
	* src/transition/T_system.cpp (get_transition()) : added definition
	
2002-12-05  Will Taylor  <taylor@email.arc.nasa.gov>
	* RELEASE 2.7.4: tagged L2Skunk_2_7_4
	* src/livingstone/version.c : update for 2.7.4

2002-12-05 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Finish revising
	* doc/L2_refman/L2Parameters.html (all) : revised for Candidate classes
	
2002-12-05 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added --cbfs-candidate-classes as command-line option; doc updates
	* doc/L2_refman/Doxyfile (PROJECT_NUMBER) : changed to 2.7.4
	* doc/L2_refman/L2Parameters.html (all) : revised for Candidate classes
	* src/readers/l2test/l2test.cpp
	  (OPT_CBFS_CANDIDATE_CLASSES) : added
	  (options) : added an initializer for max Candidate classes
	  (processOptions()) : added case clause for OPT_CBFS_CANDIDATE_CLASSES

2002-12-03 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed compilation problems with untested macros
	* include/api/livingstone.h (optimize()) : compile only if
	  DISABLE_OPTIMIZER is not defined
	* include/debuggers/livingstone_debug.h (optimize()) : compile only if
	  DISABLE_OPTIMIZER is not defined
	* include/transition/T_system.h (set_progress_uses_full()) : changed
	  "puf" to "progress_uses_full" in conditionally-compiled L2_assert()
	
2002-12-03 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Do not delete Livingstone_reader if recovery is enabled
	* src/api/livingstone.cpp (initialize_tracker()) : delete
	  pLivingstone_reader only if ENABLE_RECOVERY is not defined
	* l2-regress/base/cb-recovery.led8-on-cbfs-5-1000-1.out
	* l2-regress/base/cb-recovery.led178-on-cbfs-5-1000-1.out
	
2002-11-18 Will Taylor <taylor@email.arc.nasa.gov>
	Modified Skunkworks engine params setter for candidate classes
	* src/livdll/livdll.cpp
	  (setCBFSEngineParamsJNI) : arg max_candidate_classes added 
	Added Skunkworks accessor methods for candidate classes
	* src/livdll/livdll.cpp
	  (getCandidateClassCountJNI)
	  (getCandidateClassPointerJNI)
	* src/livdll/LivingstoneEngine.h
	
2002-11-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed wording of identifying tag
	* src/api/parameters.cpp (print()) : changed "Max unique candidates" to
	  "Max candidate classes"
	* l2-regress/base/cb-cbfs.5-1000-0.out
	* l2-regress/base/cb-cbfs.5-1000-2.out
	* l2-regress/base/cb-cbfs.min-5-1000-0.out
	* l2-regress/base/cb-cbfs.min-5-1000-2.out
	* l2-regress/base/cb-cbfs.truncate-visibility.out
	* l2-regress/base/cb-stripped.cbfs-5-1000-2.out
	* l2-regress/base/misc.AngleSensor.out
	* l2-regress/base/x37.nominal-full-3.out
	* l2-regress/base/x37.nominal-min-3.out
	* l2-regress/base/x37.rvdtfail-full-1.out
	* l2-regress/base/x37.rvdtfail-min-0.out
	* l2-regress/base/x37.rvdtfail-min-1.out
	
2002-11-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reduce calls to register_new_variable
	* src/transition/T_system.cpp
	  (create_state_var(), create_cmd_assumption_in_past()) : guard call
	   to register_new_variable()
	  (register_new_variable()) : turn guard into assertions
	  (create_mode_transition()) : removed call to register_new_variable()

2002-11-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed debugging code
	* src/transition/T_system.cpp
	  (install_new_state()) : removed debugging code
	  (prune_inconsistent_candidates*()) : removed
	
2002-11-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove list of new Transitions in *progress member functions
	* include/transition/T_system.h
	  (full_progress(Transition::ListOfTransition&, Assignment*),
	   minimal_progress(Transition::ListOfTransition&, Assignment*),
	   full_progress_copy_variables()) :
	   removed first parameter
	* include/transition/tracker.h
	  (full_progress(const Assignment*),
	   full_progress(unsigned, unsigned),
	   full_progress(Command&, unsigned),
	   minimal_progress(Assignment*)
	   minimal_progress(unsigned, unsigned)
	   minimal_progress(Command&, unsigned)) : modified to not pass a list
	    of Transition*
	* src/debuggers/tracker_debug.cpp
	  (minimal_progress(), full_progress()) : modified to not pass a list
	   of Transition
	* src/transition/T_system.cpp
	  (progress()) : modified to not pass a list of Transition*
	  (full_progress(Transition::ListOfTransition&, Assignment*),
	   full_progress_copy_variables(),
	   minimal_progress(Transition::ListOfTransition&, Assignment*) :
	   removed first parameter
	
2002-11-18 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unneeded member functions
	* include/transition/T_system.h
	  (minimal_progress(Command&, unsigned, Transition::ListOfTransition&),
	   minimal_progress(unsigned, unsigned, Transition::ListOfTransition&),
	   full_progress(Command&, unsigned, Transition::ListOfTransition&),
	   full_progress(unsigned, unsigned, Transition::ListOfTransition&),
	   progress(Command&, unsigned),
	   progress(unsigned, unsigned)) : removed
	* include/transition/tracker.h
	  (progress(Command&, unsigned)
	   progress(unsigned, unsigned)) : modified to call
	   T_system::progress(Assignment*)
	  (full_progress(Command&, unsigned)
	   full_progress(unsigned, unsigned)): modified to call
	   T_system::full_progress(Transition::ListOfTransition&,
	   Assignment*)
	  (minimal_progress(Command&, unsigned),
	   minimal_progress(unsigned, unsigned)) : modified to call
	   T_system::minimal_progress(Transition::ListOfTransition&,
	   Assignment*)
	* src/api/livingstone.cpp
	  (command(unsigned, unsigned)) : modified to call
	   T_system::progress(Assignment*)
	* src/transition/T_system.cpp
	  (progress(Command&, unsigned),
	  (progress(unsigned, unsigned)) : removed
	
2002-11-14 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unneeded member functions
	* include/transition/T_system.h
	  (create_horizon_transition()) : removed; syntactic sugar
	  (find_previous_variable()) : removed; unused
	* src/transition/transitioned.cpp (Transitioned()) : modified to call
	  T_sysetm::create_mode_transition() instead of
	  T_system::create_horizon_transition()
	
2002-11-14 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed T_system::find_previous_variable(); no callers
	* include/transition/T_system.h
	
2002-11-14 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Different termination string if terminated by exceeding max classes
	* include/transition/tracker.h
	  (get_candidate_partition() const) : added
	* src/opsat/cbfs_tracker_debug.cpp
	  (search_termination()) : new case: excedeing max classes

2002-11-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Initialize L2_parameters::cbfs_max_candidate_classes_ in constructor
	* src/api/parameters.cpp (L2_parameters()) : added initializer for
	  L2_parameters::cbfs_max_candidate_classes_
	
2002-11-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revise project file to include CandidateEqClass.cpp
	* src/transition/transition.dsp (all) : add CandidateEqClass.cpp to the
	  project.:
	
2002-11-12 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed meaning of equivalence
	* src/debuggers/tracker_debug.cpp (doPrintClasses()) : changed argument
	  to true in call to Tracker::partition()
	* src/transition/CandidateEqClass.cpp (isEquivalent()) : changed
	  behavior

2002-11-08 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Initialize T_system::pTracker
	* include/transition/T_system.h (T_system()) : initialize pTracker
	
2002-11-08 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Call Tracker::prune_and_search() before progressing
	* src/api/livingstone.cpp (command(), idle()) : call
	  Tracker::prune_and_search() before T_system::*progress()
	* src/debuggers/tracker_debug.cpp
	  (minimal_progress(Assignment*), full_progress(Assignment*),
	   progress(Assignment*)) : call Tracker::prune_and_search() before
	   T_system::*progress()
	
2002-11-08 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	In listing partition, give Candidates their original indices
	* include/conflict_db/conflict_db.h (getIndex()) : added
	* src/conflict_db/conflict_db.cpp (getIndex()) : added
	* src/debuggers/tracker_debug.cpp (doPrintClasses()) : modified to
	  print original index

2002-11-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised regression tests that broke with previous checkin
	* l2-regress/base/cb-cbfs.5-1000-0.out
	* l2-regress/base/cb-cbfs.5-1000-2.out
	* l2-regress/base/cb-cbfs.min-5-1000-0.out
	* l2-regress/base/cb-cbfs.min-5-1000-2.out
	* l2-regress/base/cb-cbfs.truncate-visibility.out
	* l2-regress/base/cb-stripped.cbfs-5-1000-2.out
	* l2-regress/base/misc.AngleSensor.out
	* l2-regress/base/x37.nominal-full-3.out
	* l2-regress/base/x37.nominal-min-3.out
	* l2-regress/base/x37.rvdtfail-full-1.out
	* l2-regress/base/x37.rvdtfail-min-0.out
	* l2-regress/base/x37.rvdtfail-min-1.out

2002-11-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Implemented CBFS search termination by candidatePartition size; PR1516
	* include/opsat/cbfs_tracker.h
	  (get_max_candidate_classes()) : added
	* include/transition/tracker.h
	  (eraseCandidatePartition()) : made public
	* src/api/parameters.cpp
	  (print()) : modified to print line for "Max unique candidates"
	* src/checkpoint/checkpoint.cpp
	  (restore_candidates()) : modified to clear the candidatePartition
	* src/opsat/cbfs_tracker.cpp
	  (extend_candidates()) : modified to clear the candidatePartition
	* src/opsat/opsat.cpp
	  (all) : added #include <opsat/cbfs_tracker.h> and
	   #include <transition/CandidateEqClass.h>
	  (find_consistent_candidates()) : modified to terminate when
	   candidatePartition size reaches a threshold
	
2002-11-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added command to list Candidate equivalence classes
	* include/debuggers/tracker_debug.h
	  (doPrintClasses()) : added
	* include/transition/tracker.h
	  (partition()) : made public
	* src/debuggers/tracker_debug.cpp
	  (doPrintClasses()) : added
	  (parse_cmd()) : added condition for command "classes"
	  (listener_usage()) : added line for command "classes"
	
2002-11-07 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Add candidatePartition data structures and methods to Tracker
	* include/transition/tracker.h
	  (all) #include <transition/CandidateEqClass.h> added
	  (getCandidatePartition(), equivalenceClassIndex(), partition(),
	   eraseCandidatePartition(), candidatePartition) : added
	* src/transition/tracker.cpp
	  (eraseCandidatePartition(), equivalenceClassIndex(), partition()) :
	   added
	
2002-11-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Checked in CandidateEqClass files
	* include/transition/CandidateEqClass.h (all) : checked in
	* src/transition/CandidateEqClass.cpp (all) : checked in
	* src/transition/Makefile.in (OBJECTS) : added CandidateEqClass.o
	
2002-11-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added command to write a *.ini file from the current state; PR1654
	* include/debuggers/T_system_debug.h
	  (doExportIniFile()) : added
	* src/debuggers/T_system_debug.cpp
	  (doExportIniFile()) : added
	  (parse_cmd()) : added condition for command "export-ini-file"
	
2002-11-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added CBFS_tracker attribute max_candidate_classes
	* include/api/livingstone.h
	  (get_cbfs_max_candidate_classes()) : made const
	* include/opsat/cbfs_tracker.h
	  (enum public_constants) : added DEFAULT_MAXIMUM_CANDIDATE_CLASSES
	  (CBFS_tracker()) : added formal parameter max_class
	  (maxClassCount)) : added
	* src/api/livingstone.cpp
	  (create_tracker()) : added cbfs_max_candidate_classes argument in
	   call to CBFS_tracker constructor
	* src/opsat/cbfs_tracker.cpp
	  (CBFS_tracker()) : addef formal parameter max_class and initializer
	   for it
	
2002-11-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Livingstone parameter "cbfs_max_candidate_classes"
	* include/api/livingstone.h
	  (get_cbfs_max_candidate_classes(), set_cbfs_max_candidate_classes()):
	   added
	* include/api/parameters.h
	  (get_cbfs_max_candidate_classes(), set_cbfs_max_candidate_classes()),
	   cbfs_max_candidate_classes_) : added
	* src/api/parameters.cpp
	  (read_from_file()) : added condition for setting
	   L2MaxCBFSCandidateClasses
	
2002-11-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Completion of previous
	* src/tms/ltms.cpp
	  (operator<<(ostream&, const Clause&)) : moved to clause.cpp
	   operator<<(ostream&, const Proposition&)) : moved to proposition.cpp
	
2002-11-06 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved operator<<(ostream&, const Proposition&) and operator<<(ostream&,
	const Clause&) from class LTMS to their respective classes
	* include/tms/clause.h
	  (operator<<(ostream&, const Clause&)) : added declaration
	* include/tms/proposition.h
	  (operator<<(ostream&, const Proposition&)) : added declaration
	* src/tms/clause.cpp
	  (operator<<(ostream&, const Clause&)) : moved from ltms.cpp
	* src/tms/proposition.cpp
	  (operator<<(ostream&, const Proposition&)) : moved from ltms.cpp

2002-11-04 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made compilation unconditional for Tracker as Strategy design pattern
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : removed #ifdef
	* include/opsat/cbfs_tracker.h
	  (CBFS_tracker()) : removed #ifdef
	* include/transtition/tracker.h
	  (#define LSB29OCT2002) : removed
	  (Tracker(), t_system) : removed #ifdec
	* src/api/livingstone.cpp
	  (create_tracker()) : removed #ifdef
	* src/opsat/cbfs_tracker.cpp
	  (CBFS_tracker()) : removed #ifdef
	* src/transition/tracker.cpp
	  (Tracker()) : removed #ifdef
	
2002-11-04 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Allocate Livinstone_reader dynamically and delete at Tracker initialize
	PR1653
	* include/api/livingstone.h
	  (Livingstone()) : allocate Livingstone_reader dynamically in body 
	  (optimize(), set_verbosity(), set_filename(), get_filename(),
	   set_filetype(), get_filetype(), get_use_optimizer(),
	   set_use_optimizer()) : get Livingstone_reader via accessor
	  (getReader()) : return dereferenced pointer and include assertion
	  (livingstone_reader) : changed to a pointer named pLivingstone_reader
	* src/api/livingstone.cpp
	  (~Livingstone()) : modified to delete pLivingstone_reader
	  (read_file(), initialize_tracker(), print_search_parameters(),
	   reconfigure()) : get Livingstone_reader via accessor
	  (initialize_tracker()) : modified to delete pLivingstone_reader

2002-11-01 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved optimized Variable map from Livingstone_reader to
	Livingstone_debug
	* include/api/livingstone.h
	  (optimize()) : added
	* include/debuggers/livingstone_debug.h
	  (optimize()) : added
	  (getVariableMapping(), getRepresentativeVariable(),
	   beginOptimizedAwayVariableNames(), endOptimizedAwayVariableNames(),
	   variableHashMap, optimizedAwayVariableNames) : moved from
	   livingstone_reader.h
	* include/readers/livingstone_reader.h
	  (optimize()) : moved definition from livingstone_reader.cpp for
	   inlining
	  (optimize(Hash_table<MBA_string&, MBA_string>&,
	   Array<MBA_string>&), merge_eq_vars(Hash_table<MBA_string,
	   MBA_string>&, Array<MBA_string>&) : added
	  (getVariableMapping(), getRepresentativeVariable(),
	   beginOptimizedAwayVariableNames(), endOptimizedAwayVariableNames(),
	   variableHashMap, optimizedAwayVariableNames) : moved to
	   livingstone_debug.h
	* src/debuggers/livingstone_debug.cpp
	  (getRepresentativeVariable(), getVariableMapping()) : moved from
	   livingstone_reader.cpp
	  (collectAllVariableNames(), getRepresentative()) : changed object on
	   which moved method is called
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_loadModelJNI()) : make local reference to
	   Livingstone_reader object
	* src/readers/livingstone_reader.cpp
	  (merge_eq_vars()) : removed optimized-Variable operations
	  (merge_eq_vars(Hash_table<MBA_string, MBA_string>&,
	   Array<MBA_string>&)) : added
	  (optimize()) : moved definition to livingstone_reader.h for inlining

2002-10-31 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made local variables const
	* include/tms/clause.h
	  (is_destroying()) : made const
	* src/transition/transitioned.cpp
	  (~Transitioned(), create_transition_variable(),
	   remove_transition_clauses(), remove_all_transition_clauses(),
	   set_mode(), add_commanded_transitions(), add_failure_prototype(),
	   add_commanded_prototype(), set_initial_mode(),
	   instantiate_indexed_clauses(), instantiate_autonomous_clauses(),
	   instantiate_unindexed_clauses(), add_idle_transitions(),
	   add_idle_transitions(unsigned, const Transition*),
	   set_andecedants(), instantiate(), remove_destroyed_clauses(),
	   instantiate_all_indexed_clauses()) : made local variables const

2002-10-31 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made local variables const
	* include/transition/T_system.h
	  (minimal_progress(unsigned, unsigned, Transition::ListOfTransition&),
	   full_progress(Command&, unsigned, Transition::ListOfTransition&),
	   full_progress(unsigned, unsigned, Transition::ListOfTransition&),
	   observe(), set_oldest_timestep()) : made local variables const
	* src/transition/T_system.cpp
	  (Proto_constraint(), ~T_system(),
	   minimal_progress(Transition::ListOfTransition&, Assignment*),
	   full_progress_copy_variables(), full_progress_create_constraints(),
	   copy_in_past(Dependent&), copy_in_past(Assignable&),
	   copy_in_past(Command&), copy_in_past(Observable&),
	   conflict_is_old(), remove_old_variables(), create_state_var(),
	   truncate(), map_over_observations(), summarize_variables(),
	   summarize_conflict(), install_new_state(), register_new_variable(),
	   create_past_command(), create_mode_transition(),
	   create_state_variable(), create_transition(), create_constraint(),
	   do_create_constraint(), get_command(), get_observable(),
	   get_transitioned(), planner_progress(),
	   create_cmd_assumption_in_past(), set_trajectory(),
	   put_candidate_in_trajectory(),
	   operator<<(ostream&, const T_system::Proto_assignment&)) : made
	   local variables const
	  
2002-10-31 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Merged initializeObservations() into createInitialState()
	* include/readers/to_t_system.h
	  (initializeObservations()) : removed
	* src/api/livingstone.cpp
	  (initialize_tracker()) : removed call to initializeObservations()
	* src/readers/to_t_system.cpp
	  (createInitialState()) : added inner loop of initializeObservations()
	  to vk_observed case
	  (initializeObservations()) : removed
	
2002-10-31 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Turned data member pointers into references and made data members const
	* include/transition/transitioned.h
	  (Proto_transition(unsigned, Transitioned&, unsigned) : initialize
	   mode_var with reference
	  (Proto_transition::consequent, Proto_transition::command_assignment,
	   Proto_transition::transition_value) : made const
	  (Proto_transition::mode_var) : changed from pointer to reference
	  (t_system) : changed from pointer to reference
	  (ntransitions) : made const
	* src/transition/transitioned.cpp
	  (Transitioned()) : initialize t_system with reference
	  (Transitioned(), create_transition_variable(),
	   add_commanded_transitions(), set_initial_mode(),
	   instantiate_indexed_clauses(), instantiate_autonomous_clauses(),
	   instantiate_unindexed_clauses(), add_idle_transitions(),
	   Proto_transition::instantiate(), instantiate_all_indexed_clauses()):
	   change pointer access to reference access
	  (Proto_transition(unsigned, Transitioned&, unsigned,
	   const Slist<T_system::Proto_assignment>&,
	   const Slist<T_system::Proto_assignment>&,
	   int) : initialize mode_var with reference; dereference mode_var in
	   Proto_assignment constructor
	
2002-10-31 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed call to initialize() from autonomous Proto_transition ctor
	* include/transition/transitioned.h
	  (Proto_transition(unsigned, Transitioned&, unsigned)) : moved from
	   transitioned.cpp for inlining
	  (initialize()) : removed
	  (findCommandAssignment()) : added
	* src/transition/transitioned.cpp
	  (Proto_transition(unsigned, Transitioned&, unsigned)) : removed call
	   to initialize(); moved to transitioned.h for inlining
	  (Proto_transition(unsigned, Transitioned&, unsigned,
	   const Slist<T_system::Proto_assignment>&,
	   const Slist<T_system::Proto_assignment>&, int) : inlined body of
	   initialize(); assign command_assignment from initializer
	  (initialize()) : removed
	  (findCommandAssignment()) : added

2002-10-30 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delay lookup of Mode until known to be needed
	* src/readers/to_t_system.cpp
	  (createInitialState()) : delay call to findVar(); changed constants
	   to literals
	
2002-10-30 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Delay lookup of Observable until known to be needed
	* src/readers/to_t_system.cpp
	  (initializeObservations()) : delay call to findVar(); combine nested
	   if conditions
	
2002-10-30 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Test L2rVariable for kind before calling createTransitions()
	* src/readers/to_t_system.cpp
	  (write()) : move type test from createTransitions()
	  (createTransitions()) : move type test to write(); combine cast and
	   Variable lookup; remove unnecessary curly braces; move increment
	   count of failure transitions from for loop to createTransition()
	   call
	
2002-10-30 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Move T_system from Tracker to Livingstone
	* include/api/livingstone.h
	  (Livingstone()) : added arguments to t_system initializer
	  (nfailures(unsigned), get_failure(unsigned, unsigned)) : removed
	   indirection
	  (get_t_system(), t_system) : added
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : added parameter t_system and initializer
	* include/debuggers/tracker_debug.h
	  (get_ostream()) : added
	  (all data members) : made private
	  (t_system) : added
	* include/opsat/cbfs_tracker.h
	  (CBFS_tracker()) : added parameter t_system
	* include/transition/T_system.h
	  (get_tracker(), set_tracker(), pTracker) : added
	* include/transition/tracker.h
	  (Tracker()) : added parameter t_system and initializer
	  (t_system) : modified to be a reference
	* src/api/livingstone.cpp
	  (create_tracker()) : added t_system argument in constructors to
	   CBFS_tracker and Cover_tracker; added call to
	   T_system::set_tracker(); removed indirection in calls to T_system
	   mutators
	  (initialize_tracker(), observe(), command(), idle(), diagnose(),
	   ncandidates(), install(), get_value(), nfailures(), get_failure()
	   reconfigureResult(), reconfigure()) : removed indirection
	* src/cover/cover_tracker_debug.cpp
	  (parse_cmd()) : store reference to T_system in local variable
	  (listener_usage()) : modified to get ostream via accessor
	* src/debuggers/livingstone_debug.cpp
	  (collectAllVariableNames()) : removed indirection
	* src/debuggers/tracker_debug.cpp
	  (Tracker_debug()) : added initializer
	  (doProgressStyle(), doPrintCandidates(), doInstall(), doTruncate(),
	   doAddAssumption(), print_stats(), minimal_progress(),
	   full_progress(), progress(), print_candidates(),
	   start_find_candidates(), end_find_candidates(),
	   create_checkpoint()) : removed indirection
	* src/opsat/cbfs_tracker.cpp
	  (CBFS_tracker()) : added parameter t_system and initializer
	* src/opsat/cbfs_tracker_debug.cpp
	  (parse_cmd(), listener_usage(), search_termniation()) : modified to
	   get ostream and Tracker via accessors
	* src/transition/T_system.cpp
	  (prune_inconsistent_candidates_debug3()) : removed indirection
	* src/transition/tracker.cpp
	  (Tracker()) : added parameter t_system and initializer

2002-10-29 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Remove assertion that the number of Var1=Var2 props <= 1
	* src/readers/to_t_system.cpp (expandClause()) : remove L2_assert()
	
2002-10-29 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Generalize expandClause() to handle multiple Var1=Var2 propos; PR1651
	* include/readers/to_t_system.h (class Partition) : added
	* src/readers/to_t_system.cpp
	  (expandClause()) : modifiied to call expandClauseEquality()
	   unconditionally
	  (expandClauseEquality()) : create stack of Partition and iterate for
	   each Var1=Var2 Proposition

2002-10-28 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added operator<<() functions
	* include/readers/proposition.h (operator<<()) : added
	* include/transition/T_system.h (operator<<()) : added
	* src/readers/proposition.cpp (operator<<()) : added
	* src/transition/T_system.cpp (operator<<()) : added
	
2002-10-24 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Represent L2rPropVarVar in Clause as a (singleton) list
	* include/readers/to_t_system.h
	  (expandClauseEquality()) : made first parameter a list
	* src/readers/to_t_system.cpp
	  (expandClauseEquality()) : made first parameter a list
	  (expandClause()) : made L2rPropVarVar a (singleton) list

2002-10-24 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundancy
	* include/conflict_db/conflict_db.h (friend class Assignable) : removed
	  unnecessary friend declaration
	* include/conflict_db/variable.h (Variable()) : renamed parameter
	* src/conflict_db/variable.cpp (Variable()) : renamed parameters and
	  local variables; removed redundant friend access to db.solver 
	
2002-10-24 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Move member functions to assignable.h for inlining
	* include/conflict_db/assignable.h
	  (assign(unsigned), assign(const Assignable&)) : moved definitions
	   from assignable.cpp for inlining
	* src/conflict_db/assignable.cpp
	  (assign(unsigned), assign(const Assignable&)) : moved definitions to
	   assignable.h for inlining
	
2002-10-24 Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Use name emptyPropositionList if guaranteed to be empty
	* src/conflict_db/assignable.cpp
	  (Assignable()) : renamed negPropositions emptyPropositionList
	* src/conflict_db/variable.cpp
	  (Variable()) : renamed posPropositions emptyPropositionList
	* src/transition/transitioned.cpp
	  (set_mode()) : renamed negPropositions emptyPropositionList
	
2002-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Assignable::assign(const Assignment&)
	* include/conflict_db/assignable.h
	  (assign(const Assignment&)) : removed
	  (restore_initial_default()) : changed assign(const Assignment&) to
	   assign(const Assignment*)
	* src/conflict_db/assignable.cpp
	  (assign(unsigned)) : changed assign(const Assignment&) to
	   assign(const Assignment*)
	* src/conflict_db/assignment.cpp
	  (assign()) : changed assign(const Assignment&) to
	   assign(const Assignment*)
	* src/debuggers/conflict_db_debug.cpp
	  (assign(Assignable&, const MBA_string&)) : changed
	   assign(const Assignment&) to assign(const Assignment*)
	
2002-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved Assignable::set_weight() for inlining
	* include/conflict_db/assignable.h
	  (set_weight()) : moved definition from assignable.cpp for inlining
	* src/conflict_db/assignable.cpp
	  (set_weight()) : moved definition to assignable.h for inlining
	
2002-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-implemented Assignable::assign(unsigned)
	* include/conflict_db/assignable.h
	  (assign()) : renamed formal parameter
	* src/conflict_db/assignable.cpp
	  (assign()) : re-implemented using get_assignment()
	
2002-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Do not store Assignment::other_values; PR 1649
	* include/conflict_db/assignment.h
	  (get_other_values(), set_other_values(), other_values) : removed
	  (append_other_values()) : added
	* src/conflict_db/assignable.cpp
	  (Assignable()) : remove loop that calls set_other_values()
	* src/conflict_db/assignment.cpp
	  (add_conflict()) : rewrote loop to not use other_values
	  (append_other_values()) : added
	* src/conflict_db/conflict.cpp
	  (resolving_assignments()) : rewrote loop to use
	  Assignment::append_other_values(), not Assignment::get_other_values()

2002-10-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved cleanup of Candidates from ~Tracker() to ~Conflict_db()
	* include/transition/tracker.h
	  (~Tracker()) : moved call to eraseCandidates() to ~Conflict_db()
	* src/conflict_db/conflict_db.cpp
	  (~Conflict_db()) : moved call to eraseCandidates() from ~Tracker()
	
2002-10-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed T_system parameters from Tracker constructors
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : removed T_system parameters and initializer
	* include/opsat/cbfs_tracker.h
	  (CBFS_tracker()) : removed T_system parameters
	* include/transition/T_system.h
	  (set_max_history_length(), set_max_truncated_candidates()) : added
	* include/transition/tracker.h
	  (Tracker()) : removed all three T_system parameters
	* src/api/livingstone.cpp
	  (create_tracker()) : removed T_system arguments from operator new on
	   Cover_tracker and CBFS_tracker. Called mutators to establish
	   T_system parameters.
	* src/opsat/cbfs_tracker.cpp
	  (CBFS_tracker()) : removed T_system parameters and initializer
	* src/transition/tracker.cpp
	  (Tracker()) : removed T_system parameters and initializer; get
	   max_history_length from accessor

2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved enums and static variables from tracker.h to T_system.h
	* include/api/livinsgtone.h
	  (get_progress_style(), set_progress_style(),
	   get_use_full_progress()) : changed Tracker::Progress_style to
	   T_system::Progress_style
	* include/api/parameters.h
	  (get_progress_style(), set_progress_style(), progress_style_) :
	   changed Tracker::Progress_style to T_system::Progress_style
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : changed Tracker::Progress_style to
	   T_system::Progress_style
	* include/opsat/cbfs_tracker.h
	  (CBFS_Tracker()) : changed Tracker::Progress_style to
	   T_system::Progress_style
	* include/transition/T_system.h
	  (enum Progress_style, DEFAULT_PROGRESS_STYLE,
	   DEFAULT_PROGRESS_USES_FULL) : moved from tracker.h
	* include/transition/tracker.h
	  (enum Progress_style, DEFAULT_PROGRESS_STYLE,
	   DEFAULT_PROGRESS_USES_FULL) : moved to T_system.h
	* src/api/livingstone.cpp
	  (read_file()) : changed Tracker::Progress_style to
	   T_system::Progress_style
	* src/api/parameters.cpp
	  (progress_dict, get_progress_style(), L2_parameters()) :
	   changed Tracker::Progress_style to T_system::Progress_style
	* src/transition/T_system.cpp
	  (DEFAULT_PROGRESS_STYLE, DEFAULT_PROGRESS_USES_FULL) : moved from
	   tracker.cpp
	* src/transition/tracker.cpp
	  (DEFAULT_PROGRESS_STYLE, DEFAULT_PROGRESS_USES_FULL) : moved to
	   T_system.cpp
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved macros from tracker.h to T_system.h
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : changed Tracker::DEFAULT_HISTORY_LENGTH,
	   Tracker::DEFAULT_NUM_HISTORIES and
	   Tracker::DEFAULT_PROGRESS_USES_FULL to 
	   T_system::DEFAULT_HISTORY_LENGTH,
	   T_system::DEFAULT_NUM_HISTORIES and
	   T_system::DEFAULT_PROGRESS_USES_FULL
	* include/opsat/cbfs_tracker.h
	  (Cover_tracker()) : changed Tracker::DEFAULT_HISTORY_LENGTH,
	   Tracker::DEFAULT_NUM_HISTORIES and
	   Tracker::MIN_HISTORY_LENGTH to 
	   T_system::DEFAULT_HISTORY_LENGTH,
	   T_system::DEFAULT_NUM_HISTORIES and
	   T_system::MIN_HISTORY_LENGTH
	* include/transition/T_system.h
	  (public_constants) : moved before constructor/destructor; moved
	   DEFAULT_HISTORY_LENGTH, DEFAULT_NUM_HISTORIES and MIN_HISTORY_LENGTH
	   from Tracker.h
	* include/transition/tracker.h
	  (public_constants) : moved DEFAULT_HISTORY_LENGTH,
	   DEFAULT_NUM_HISTORIES and MIN_HISTORY_LENGTH to T_system.h
	* src/api/parameters.cpp
	  (L2_parameters()) : changed Tracker::DEFAULT_HISTORY_LENGTH,
	   Tracker::DEFAULT_NUM_HISTORIES to
	   T_system::DEFAULT_HISTORY_LENGTH and
	   T_system::DEFAULT_NUM_HISTORIES
	* src/transition/tracker.cpp
	  (Tracker()) : changed Tracker::MIN_HISTORY_LENGTH to
	   T_system::MIN_HISTORY_LENGTH
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::erase(), Tracker::get_candidate(),
	Tracker::add_assumption() and Tracker::add_candidate()
	* include/api/livingstone.h
	  (get_failure(), nfailures()) : rewrote call to
	   Tracker::get_candidate()
	* include/tracker/tracker.h
	  (~Tracker()) : rewrote call to Tracker::erase()
	* src/api/livingstone.cpp
	  (install()) : rewrote call to Tracker::get_candidate()
	* src/checkpoint/checkpoint.cpp
	  (create_in_tracker()) : rewrote call to Tracker::add_candidate()
	  (restore_candidates()) : rewrote call to Tracker::erase()
	* src/debuggers/tracker_debug.cpp
	  (doAddAssumption()) : rewrote call to Tracker::add_assumption()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_addAssumptionJNI()) : rewrote call to
	   Tracker::add_assumption()
	* src/opsat/cbfs_tracker.cpp
	  (find_fresh_candidates(), extend_candidates()) : rewrote call to
	   Tracker::erase()
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::begin() and Tracker::end()
	* src/api/livingstone.cpp
	  (reconfigureResult()) : rewrote call to Tracker::begin()
	* src/checkpoint/checkpoint.cpp
	  (store_candidates()) : rewrote calls to Tracker::begin() and
	* src/debuggers/tracker_debug.cpp
	  (print_candidates()) : rewrote calls to Tracker::begin() and
	   Tracker::end()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_getCandidatePointerJNI()) :
	   rewrote calls to Tracker::begin() and Tracker::end()
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::get_time_step()
	* src/debuggers/tracker_debug()
	  (end_find_candidates()) : rewrote call to Tracker::get_time_step()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverCandidateAssignmentsJNI(),
	   Java_LivingstoneEngine_mapOverAttributeAssignmentsJNI(),
	   Java_LivingstoneEngine_getTimeStepJNI(),
	   Java_LivingstoneEngine_variableValueAtTimeJNI(),
	   Java_LivingstoneEngine_variableExogenousAtTimeJNI()) : 
	  rewrote call to Tracker::get_time_step()
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::*progress()
	* src/api/livingstone.cpp
	  (command(), idle()) : rewrote call to Tracker::progress()
	* src/debuggers/tracker_debug.cpp
	  (minimal_progress(Assignment*) : rewrote call to
	  Tracker::minimal_progress()
	  (full_progress(Assignment*) : rewrote call to
	  Tracker::full_progress()
	  (progress(Assignment*)) : rewrote call to Tracker::progress()
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::get_conflicts()
	* src/opsat/cover_tracker_debug.cpp
	  (parse_cmd()) : rewrote call to Tracker::get_conflicts()
	* src/transition/T_system.cpp
	  (prune_inconsistent_candidates_debug3()) : rewrote call to
	   Tracker::get_conflicts()
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Completion of previous
	* src/debuggers/tracker_debug.cpp
	  (doPrintCandidates(), doInstall(), print_stats(),
	   end_find_candidates()) : rewrote call to Tracker::size()
	
2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::size()
	* include/transition/tracker.h
	  (const T_system& get_t_system() const) : added
	* src/api/livingstone.cpp
	  (diagnose(), ncandidates(), reconfigureResult()) : rewrote call to
	   Tracker::size()
	* src/checkpoint/checkpoint.cpp
	  (restore(), doInstall(), end_find_candidates()) : rewrote call to
	   Tracker::size()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_getCandidateCountJNI()) : rewrote call to
	   Tracker::size()
	* src/opsat/cbfs_tracker_debug.cpp
	  (search_termination()) : rewrote call to Tracker::size()

2002-10-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed all uses of Tracker::empty()
	* include/transition/tracker.h
	  (prune_and_search()) : rewrote call to Tracker::empty()
	* src/cover/cover_tracker.cpp
	  (find_candidates()) : rewrote call to Tracker::empty()
	* src/cover/cover_tracker_debug.cpp
	  (parse_cmd()) : rewrote call to Tracker::empty()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_pruneAndSearchJNI()) : rewrote call to
	  Tracker::empty() 
	  (Java_LivingstoneEngine_findFreshJNI()) : rewrote call to
	  Tracker::empty() 
	  (Java_LivingstoneEngine_extendJNI()) : rewrote call to
	  Tracker::empty() 
	  (Java_LivingstoneEngine_getSearchTerminationJNI()) : rewrote call to
	  Tracker::empty()
	  (Java_LivingstoneEngine_findCandidatesJNI()) : rewrote call to
	  Tracker::empty()
	
2002-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Got rid of magic numbers in class L2_parameters
	* include/api/livingstone.h
	  (set_search_style(L2_parameters::Search_style),
	   get_use_cbfs_tracker()) : changed L2_parameters::Search_style to
	   Tracker::Search_style
	  (get_progress_style(),
	   set_progress_style(L2_parameters::Progress_style),
	   get_use_full_progress()) : changed L2_parameters::Progress_style to
	   Tracker::Progress_style
	* include/api/parameters.h
	  (enum Search_style) : moved to tracker.h
	  (get_search_style(), set_search_style(L2_parameters::Search_style()),
	   get_search_style(L2_parameters::Search_style),
	   get_search_style(const MBA_string&), search_style_, Search_item) :
	   changed L2_parameters::Search_style to Tracker::Search_style
	  (enum Progress_style) : moved to tracker.h
	  (get_progress_style(),
	   set_progress_style(L2_parameters::Progress_style)
	   get_progress_style(L2_parameters::Progress_style),
	   get_progress_style(const MBA_string&), progress_style_,
	   Progress_item) : changed L2_parameters::Progress_style to
	   Tracker::Progress_style
	* include/cover/cover_tracker.h
	  (enum public_constants) : added
	  (Cover_tracker()) : changed DEFAULT_PROGRESS_STYLE to
	   Tracker::DEFAULT_PROGRESS_USES_FULL
	* include/opsat/cbfs_tracker.h
	  (DEFAULT_MAXIMUM_CANDIDATE_COUNT) : changed value from 2 to 5
	  (DEFAULT_MAXIMUM_SEARCH): changed value from 100 to 1000
	  (CBFS_tracker()) : changed DEFAULT_PROGRESS_STYLE to
	   Tracker::DEFAULT_PROGRESS_USES_FULL
	* include/transition/tracker.h 
	  (enum Progress_style, enum Search_style) : moved from parameters.h
	  (DEFAULT_PROGRESS_STYLE) : renamed to DEFAULT_PROGRESS_USES_FULL
	  (DEFAULT_PROGRESS_STYLE, DEFAULT_SEARCH_STYLE) : moved from
	   parameters.h and changed from macro to static const
	* src/api/livingstone.cpp
	  (read_file()) : changed L2_parameters::min to Tracker::min
	* src/api/parameters.cpp
	  (#include <cover/cover_tracker.h>, #include <opsat/cbfs_tracker.h) :
	   added
	  (search_dict) : changed L2_parmeters::Search_style to
	   Tracker::search_style)
	  (progress_dict) : changed L2_parameters::Progress_style to
	   Tracker::progress_style)
	  (get_search_style(L2_parameters::Search_style),
	   get_search_style(const MBA_string&)) : changed
	   L2_parameters::Search_style to Tracker::Search_style
	  (get_progress_style(L2_parameters::Progress_style),
	   get_progress_style(const MBA_string&)) : changed
	   L2_parameters::Progress_style to Tracker::Progress_style
	  (DEFAULT_SEARCH_STYLE, DEFAULT_PROGRESS_STYLE) : moved to tracker.h
	   and changed from macro to static const
	  (L2_parameters()) : changed magic numbers to symbolic constants
	  (print()) : changed L2_parameters::Search_style to
	   Tracker::search_style
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_setCBFSEngineParamsJNI(),
	   Java_LivingstoneEngine_allocateCBFSEngineJNI()) : changed
	   L2_parameters::cbfs to Tracker::cbfs
	  (Java_LivingstoneEngine_setCoverEngineParamsJNI(),
           Java_LivingstoneEngine_allocateCoverEngineJNI)) : changed
	   L2_parameters::cover to Tracker::cover
	* src/readers/l2test/l2test.cpp
	  (processOptions()) : changed L2_parameters::cbfs to Tracker::cbfs and
	   L2_parameters::cover to Tracker::cover	  
	* src/transition/tracker.cpp
	  (DEFAULT_PROGRESS_STYLE) : renamed DEFAULT_PROGRESS_USES_FULL
	  (DEFAULT_SEARCH_STYLE) : moved from parameters.h and changed from
	   macro to static const
	
2002-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved file name, file type and optimize flag Livingstone_reader
	* include/api/livingstone.h
	  (Livingstone()) : removed initializer for use_optimizer_
	  (set_filename(), get_filename(), set_filetype(), get_filetype(),
	   get_use_optimizer(), set_use_optimizer(), set_progress_style()) :
	   modified to forward to Livingstone_reader
	  (filename_, filetype_, use_optimizer_) : moved to
	   livingstone_reader.h
	* include/readers/livingstone_reader.h
	  (getFilename(), setFilename(), setFiletype(), getFiletype(),
	   getUseOptimizer(), setUseOptimizer()) : added
	  (read_file()) : added
	  (filename_, filetype_) : moved from livingstone.h
	* src/api/livingstone.cpp
	  (read_file()) : modified to get file name from Livingstone_reader and
	   to call parameterless Livingstone_reader::read_file()
	  (print_search_parameters()) : modified to get file type from
	   Livingstone_reader
	* src/readers/livingstone_reader.cpp
	  (Livingstone_reader()) : added initializer for use_optimizer_

2002-10-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Livingstone_debug use Livingstone_reader (completion of previous)
	* src/debuggers/livingstone_debug.cpp
	  (init_tracker_created_writer(), collectAllVariableNames(),
	   getRepresentative()) : call member functions on
	   Livingstone::livingstone_reader rather than on class Livingstone
	
2002-10-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Livingstone_reader a member of Livingstone, not a superclass
	* include/api/livingstone.h
	  (class Livingstone) : no longer derived from Livingstone_reader
	  (set_verbosity()) : forward to data member livingstone_reader
	  (getReader(), livingstone_reader) : added
	* src/api/livingstone.cpp
	  (read_file(), initialize_tracker(), reconfigure()) : forward to data
	   member livingstone_reader
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_loadModelJNI()) : call member functions on
	   Livingstone::livingstone_reader rather than on class Livingstone
	* src/readers/l2test/l2test.cpp
	  (doVerbose(), main()) : call member functions on
	   Livingstone::livingstone_reader rather than on class Livingstone
	
2002-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Tracker::t_system private
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : modified to get t_system via accessor
	* include/transition/tracker.h
	  (t_system) : made private
	* src/cover/cover_tracker.cpp
	  (find_fresh_candidates(), find_candidates()) : modified to get
	   t_system via accessor
	* src/opsat/cbfs_tracker.cpp
	  (CBFS_tracker(), find_fresh_candidates(), extend_candidates()) :
	  modified to get t_system via accessor
	
2002-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Copied progress() methods from Tracker to T_system
	* include/transition/T_system.h
	  (progress(Assignment*), progress(unsigned, unsigned),
	   progress(Command&, unsigned)) : copied from tracker.h
	* include/transition/tracker.h
	  (progress(Assignment*), progress(unsigned, unsigned),
	   progress(Command&, unsigned)) : re-implement as pass-through
	  (prune_and_search()) : moved definition from tracker.cpp for inlining
	* src/transition/T_system.cpp
	  (progress(Assignment*), progress(unsigned, unsigned),
	   progress(Command&, unsigned)) : moved from tracker.cpp 
	* src/transition/tracker.cpp
	  (progress(Assignment*), progress(unsigned, unsigned),
	   progress(Command&, unsigned)) : moved to T_system.cpp 
	  (prune_and_search()) : moved definition to tracker.h for inlining
	
2002-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved truncation from Tracker to T_system; PR1645
	* include/transition/T_system.h
	  (T_system()) : added parameters max_truncated_candidates and
	   progress_uses_full
	  (get_progress_uses_full(), set_progress_uses_full()) : moved from
	   tracker.h and tracker.cpp
	  (truncate_if_needed(), truncate(), prune_inconsistent_candidates(),
	   max_truncated_candidates, progress_uses_full) : moved from tracker.h
	* include/transition/tracker.h
	  (get_progress_uses_full(), set_progress_uses_full()) : moved to
	   T_system.h
	  (full_progress(const Assignment*), full_progress(unsigned, unsigned),
	   full_progress(Command&, unsigned), minimal_progress(const
	   Assignment*), minimal_progress(unsigned, unsigned),
	   minimal_progress(Command&, unsigned)) : re-implemented as
	   pass-through
	  (prune_inconsistent_candidates(), truncate(), truncate_if_needed(),
	   max_truncated_candidates, progress_uses_full) : moved to T_system.h
	* src/cover/cover_tracker.cpp
	  (prune_inconsistent_candidates()) : modified to call
	   T_system::prune_inconsistent_candidates(), not
	   Tracker::prune_inconsistent_candidates()
	* src/debuggers/tracker_debug.cpp
	  (doProgressStyle()) : modified to call
	   T_system::set_progress_uses_full(), not
	   Tracker::set_progress_uses_full()
	  (doTruncate()) : modified to call T_system::truncate_if_needed() and
	   T_system::truncate(), not Tracker::truncate_if_needed() and
	   Tracker::truncate(); also streamlined calls to timing functions
	  (create_checkpoint()) : modified to call
	   T_system::tet_progress_uses_full(), not
	   Tracker::get_progress_uses_full()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_minProgressJNI,
	   Java_LivingstoneEngine_fullProgressJNI) : modified to call 
	   T_system::get_progress_uses_full(), not
	   Tracker::get_progress_uses_full()
	  (Java_LivingstoneEngine_pruneAndSearchJNI,
	   Java_LivingstoneEngine_findCandidatesJNI) : modified to call
	   T_system::prune_inconsistent_candidates(), not
	   Tracker::prune_inconsistent_candidates()
	* src/transition/T_system.cpp
	  (minimal_progress(Transition::ListOfTransition&, Assignment*)
	   full_progress(Transition::ListOfTransition&, const Assignment*)) :
	   moved call to truncate_if_needed() from Tracker::*_progress(*)
	  (truncate(), prune_inconsistent_candidates_debug1(),
	   prune_inconsistent_candidates_debug2(),
	   prune_inconsistent_candidates_debug3(),
	   prune_inconsistent_candidates()) : moved from Tracker.cpp
	* src/transition/tracker.cpp
	  (Tracker()) : added arguments in initializer to data member t_system;
	   moved call to progress_uses_full mutator to T_system constructor
	  (get_progress_uses_full(), set_progress_uses_full()) : moved to
	   T_system.h
	  (progress(Assignment*), progress(unsigned, unsigned),
	   progress(Command&, unigned)) : modified to call 
	   T_system::get_progress_uses_full(), not
	   Tracker::get_progress_uses_full()
	  (full_progress(unsigned, unsigned), full_progress(Command, unsigned),
	   full_progress(const Assignment*), minimal_progress(unsigned,
	   unsigned), minimal_progress(Command&, unsigned),
	   minimal_progress(Assignment*)) : moved to T_system.h
	  (truncate(), prune_inconsisten_candidates_debug1(),
	   prune_inconsistent_candidates_debug2(),
	   prune_inconsistent_candidates_debug3(),
	   prune_inconsistent_candidates()) : moved to T_system.cpp

2002-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Move map_over_observations() from Tracker to T_system
	* include/transition/T_system.h
	  (map_command, map_over_observations()) : moved from tracker.h
	* include/transition/tracker.h
	  (map_command, map_over_observations()) : moved to T_system.h
	* src/transition/T_system.cpp
	  (map_over_observations()) : moved from tracker.cpp
	* src/transition/tracker.cpp
	  (map_over_observations()) : moved to T_system.cpp
	  (truncate()) : modified to call T_system::map_over_observations(),
	   not Tracker::map_over_observations()
	
2002-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Move install() from Tracker to Conflict_db
	* include/conflict_db/conflict_db.h
	  (install(const Candidate&, bool), install(unsigned, bool)) : moved
	   from tracker.h
	* include/transition/tracker.h
  	  (install(const Candidate&, bool), install(unsigned, bool)) : moved
	   to conflict_db.h
	* src/api/livingstone.cpp
	  (install()) : modified to call Conflict_db::install(), not
	   Tracker::install()
	* src/checkpoint/checkpoint.cpp
	  (restore()) : modified to call Conflict_db::install(), not
	   Tracker::install()
	* src/conflict_db/conflict_db.cpp
	  (install(const Candidate&, bool)) : moved from tracker.cpp
	* src/debuggers/tracker_debug.cpp
	  (doInstall()) : modified to call Conflict_db::install(), not
	   Tracker::install()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_installCandidateJNI) : modified to call
	   Conflict_db::install(), not Tracker::install()
	* src/transition/tracker.cpp
	  (install(const Candidate&, bool)) : moved to conflict_db.cpp
	  (truncate(), prune_inconsistent_candidates()) : modified to call
	   Conflict_db::install(), not Tracker::install()
	
2002-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Move list of Candidates from Tracker to Conflict_db
	* include/conflict_db/conflict_db.h
	  (getCandidates(), getCandidates() const) : added
	  (getCandidate(unsigned), getCandidate(unsigned) const,
	   addCandidate(), addAssumption(), eraseCandidates()) : copied from
	   tracker.h with name changes
	  (candidates) : moved from tracker.h
	* include/cover/cover_tracker.h
	  (Cover_tracker()) : use accessor to get list of Candidates 
	* include/transition/tracker.h
	  (empty(), size(), install(), begin(), end()) : use accessor to get
	   list of Candidates
	  (get_candidate(unsigned), get_candidate(unsigned) const, erase(),
	   add_candidate(), add_assumption()) : forwarded to corresponding
	   member function in class Conflict_db
	  (candidates) : moved to Conflict_db.h
	* src/conflict_db/conflict_db.cpp
	  (getCandidate(unsigned), getCandidate(unsigned) const,
	   eraseCandidates(), addCandidate(), addAssumption()) : moved from
	   Tracker.cpp, with name changes
	* src/cover/cover_tracker.cpp
	  (find_fresh_candidates()) : use accessor to get list of Candidates
	* src/opsat/cbfs_tracker.cpp
	  (find_fresh_candidates(), extend_candidates()) : use accessor to get
	   list of Candidates
	* src/transition/tracker.cpp
	  (get_candidate(unsigned), get_candidate(unsigned) const, erase(),
	   add_candidate(), add_assumption()) : moved to Conflict_db.cpp 
	  (truncate(), prune_inconsistent_candidates()) : use accessor to get
	   list of Candidates

2002-10-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed T_system::observe(Observable, int) to Observable::observe(int)
	* include/conflict_db/observable.h
	  (observe(unsigned)) : Moved from T_system::observe(Observable&,
	   unsigned) in T_system.h
	* include/transition/T_system.h
	  (observe(unsigned, unsigned) : modified to call
	   Observable::observe(int)
	  (observe(Observable, int) : moved to
	   Observable::observe(unsigned) in T_system.h
	* include/transition/tracker.h
	  (observe(Observable&, int) : modified to call
	   Observable::observe(int)
	* src/api/livingstone.cpp
	  (observe(unsigned, int) : modified to call
	   Observable::observe(int)
	  (reconfigureAssign() : modified to call
	   Observable::observe(int)
	* src/readers/to_t_system.cpp
	  (initializeObservations()) : modified to call
	   Observable->observe(int)
	
2002-10-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Corrected comment about usage of OptionFinder (this time for sure)
	* include/readers/options.h (comment) : made code conform to usage
	
2002-10-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Corrected comment about usage of OptionFinder; PR1643
	* include/readers/options.h (comment) : changed while(0) to while(1)
	
2002-10-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised regression tests that broke with previous checkin; same ones as
	changed on 2002-09-17
	* l2-regress/base/cb-cbfs.5-1000-2.out
	* l2-regress/base/cb-cbfs.min-5-1000-2.out
	* l2-regress/base/cb-stripped.cbfs-5-1000-2.out
	
2002-10-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Transition modes after copying non-modes in past; PR1642
	* src/transition/T_system.cpp (full_progress_copy_variables()) :
	  operations on non modes must complete before operations on modes, so
	  two loops are necessary
	
2002-10-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Allow erasing of conflicts since beginning of time step; PR1472
	* include/conflict_db/conflict.h
	  (Conflict(Assignment::ListOfAssignment&)) : added parameter tag
	  (getTag(), tag) : added
	* include/conflict_db/conflict_db.h
	  (conflict()) : added parameter tag
	  (getConflicts()) : added
	  (add_conflict()) : added parameter tag
	* include/transition/T_system.h
	  (deleteNewestConflicts()) : added declaration
	* src/conflict_db/conflict.cpp
	  (Conflict(Assignment::ListOfAssignment&)) : added parameter tag;
	  added initializer for data member tag
	* src/conflict_db/conflict_db.cpp
	  (add_conflict()) : added parameter tag; added tag argument in call
	  to Conflict::Conflict(Assignment::ListOfAssignment&)
	  (conflict()) : added parameter tag
	* src/debuggers/T_system_debug.cpp
	  (parse_cmd()) : added handler for opcode "reset-conflicts"
	* src/opsat/opsat.cpp
	  (next_consistent_candidate()) : added time_step parameter in
	  call to T_system::conflict()
	* src/transition/T_system.cpp
	  (deleteNewestConflicts()) : added definition
	* src/transition/tracker.cpp
	  (prune_inconsistent_candidates()) : added time_step argument in
	  call to T_system::conflict()

2001-10-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revise project file to include cbfs_agenda.cpp
	* src/opsat/opsat.dsp (all) : add cbfs_agenda.cpp to the project. Note
	  that two other flags were changed: /Ze in ADD and /FA<none> in
	  SUBTRACT

2002-10-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed default argument from definition; g++ accepts it but not MSVC++
	* src/opsat/cbfs_agenda.cpp (CBFSAgenda()) : removed default argument
	
2002-10-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added operator<<() methods
	* include/conflict_db/assignment.h (operator<<()) : added
	* include/conflict_db/candidate.h  (operator<<()) : added
	* include/conflict_db/conflict.h   (operator<<()) : added
	* include/opsat/agenda_types.h     (operator<<()) : added
	  (get_current_assignment(), get_remaining_assignments()) : added
	* src/conflict_db/assignment.cpp   (operator<<()) : added
	* src/conflict_db/candidate.cpp    (operator<<()) : added
	* src/conflict_db/conflict.cpp     (operator<<()) : added
	* src/opsat/agenda_types.cpp       (operator<<()) : added
	* src/opsat/cbfs_tracker.cpp
	  (CVS id tag) : added

2002-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	De-templatized CBFSAgenda and made various minor cleanups
	* include/opsat/agenda_types.h
	  (#include <conflict_db/candidate.h>) : added
	  (pop_useless_assignments()) : removed redundant member function; use
	   CBFSAgenda::pop_useless_assignments()
	  (compute_element_weight()) : made const; no longer has side effect of
	   setting CBFSElement::weight
	  (generate_candidate()) : made const; moved definition from
	   agenda_types.cpp
	  (get_prefix(), get_remaining_assignments()) : added
	* include/opsat/cbfs_agenda.h
	  (class CBFSAgenda) : de-templatized
	  (pop_useless_assignments(), get_new_assignments()) : made const
	  (insert()) : modified to call CBFSElement::set_weight(), since
	   CBFSElement::computer_element_weight() no longer does that
	  (last_popped_element) : de-templatized the type and made private
	  (CBFSAgenda(), initialize_agenda(), expand_element(),
	   pop_candidate(), get_new_assignments(), pop_useless_assignments()) :
	   de-templatized and moved definitions to cbfs_agenda.cpp
	* include/opsat/opsat.h
	  (agenda) : de-templatized type
	* src/opsat/Makefile.in
	  (OBJECTS) : added cbfs_agenda.o
	* src/opsat/agenda_types.cpp
	  (#include <math.h>, #include <opsat/cbfs_agenda.h>) : removed
	  (#include <opsat/agenda_types.h>) : added
	  (generate_candidate()) : moved definition to agenda_types.h
	  (pop_useless_items()) : removed redundant member function; use
	   CBFSAgenda::pop_useless_assignments()
	* src/opsat/cbfs_agenda.cpp
	  (all) : new file
	  (CBFSAgenda(), initialize_agenda(), expand_element(),
	   pop_candidate(), get_new_assignments(), pop_useless_assignments()) :
	   de-templatized and moved definitions from cbfs_agenda.h
	* src/opsat/opsat.cpp
	  (find_consistent_candidates()) : removed consistentCandidateCount;
	   use consistentCandidates.size()
	  (terminate_search()) : made nonzero tests more explicit

2002-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Don't generate indistinguishable Candidates; PR1456
	* include/opsat/opsat.h
	  (#include <conflict_db/conflict_db.h>) : changed to
	   #include <transition/T_system.h>
	  (Opsat_CBFS()) : changed first parameter from Conflict_db* to
	   T_system*
	  (set_conflict_db()) : changed to set_t_system()
	  (subsumes(), supersetWithState(), getStateVariableAssignment()) :
	   added
	  (conflict_db) : changed to pT_system
	* src/opsat/cbfs_tracker.cpp
	  (extend_candidates()) : changed call to Opsat_CBFS::set_conflict_db()
	   to Opsate_CBFS::set_t_system()
	* src/opsat/opsat.cpp
	  (Opsat_CBFS()) : changed first parameter from Conflict_db* to
	   T_system*
          (next_consistent_candidate()) : changed calls on conflict_db to calls
	   on pT_system
	  (subsumes(), supersetWithState(), getStateVariableAssignment()) :
	   added
	  (superset_candidate()) : modified to call supersetWithState()
	
2002-09-23  Will Taylor  <taylor@email.arc.nasa.gov>
	* RELEASE 2.7.3: tagged L2Skunk_2_7_3
	* src/livingstone/version.c : update for 2.7.3

2002-09-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Make Livingstone::print_search_parameters() not require file input;
	PR1451
	* src/api/livingstone.cpp (print_search_parameters()) : conditionalize
	  parts that use get_filetype() and get_filename()
	
2002-09-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Clean up configuration macros
	* configure (rebuilt from changed configure.in)
	* configure.in (AC_DEFINE(SUMMARIZE_CONFLICTS)) : changed to
	  AC_DEFINE(ENABLE_SUMMARIZE_CONFLICTS)
	* include/livingstone/gnu_conf.h.in
	  (#undef ENABLE_MODEL_FILES, #undef ENABLE_SUMMARIZE_CONFLICTS) :
	   added
	* include/transition/T_system.h
	  (SUMMARIZE_CONFLICTS) : removed macro definition; changed
	   #ifdef SUMMARIZE_CONFLICTS to #ifdef ENABLE_SUMMARIZE_CONFLICTS
	* src/transition/T_system.cpp
	  (#ifdef SUMMARIZE_CONFLICTS) : changed to
	   #ifdef ENABLE_SUMMARIZE_CONFLICTS
	* src/transition/tracker.cpp
	  (#ifdef SUMMARIZE_CONFLICTS) : changed to
	   #ifdef ENABLE_SUMMARIZE_CONFLICTS

2002-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Account for background bit in Wch; PR1427
	* src/readers/to_bin.cpp (write_header()) : make Wch 
	  width_of_int(largest<<1) to account for background bit
	
2002-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added doc comments to to_bin
	* include/readers/to_bin.h (All) : added doc comments
	
2002-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Add Candidate parameter to nfailures() and get_failure() so install is
	not required; PR1637
	* include/api/livingstone.h
	  (nfailures(unsigned), nfailures(const Candidate&),
	   get_failure(unsigned), get_failure(const Candidate&, unsigned) :
	   added
	  (nfailures()) : implemented using nfailures(const Candidate&)
	  (get_candidate(unsigned)) : implemented using get_candidate(const
	   Candidate&, unsigned)
	* include/transition/tracker.h
	  (const Candidate* get_candidate(unsigned) const) : added declaration
	* src/api/livingstone.cpp
	  (nfailures(), get_failure(unsigned)) : moved definition to
	   Livingstone.h
	  (nfailures(const Candidate&), get_failure(const Candidate(),
	   unsigned) : added
	* src/transition/tracker.cpp
	  (const Candidate* get_candidate(unsigned) const) : added definition

2002-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralize Conflict::subsumes() and Conflcit::subsumedBy(); PR1638
	* include/conflict_db/conflict.h
	  (subsumes(), subsumed_by()) : added declarations
	* src/conflict_db/conflict.cpp
	  (subsumes(), subsumed_by()) : added definitions
	* src/conflict_db/conflict_db.cpp
	  (find_sumsuming_conflict()) : proceduralized Conflict_db::subsumes()
	
2002-09-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rewrite T_system::summarize_conflicts(), configure, regression; PR1535
	* configure (rebuilt from changed configure.in)
	* configure.in
	  (--disable-summarize-conflicts) : added argument definition
	* include/debuggers/trajectory.h (Trajectory::Partsoperator==(),
	  Trajectory::contains(), Trajectory::subsumes()) : added
	* include/transition/T_system.h
	  (summarize()) : removed
	  (summarize_variables()) : made public and augmented doc comment
	  (summarize_conflicts()) : made public, changed parameters, changed
	   doc comment
	  (summarizes(), covers(), consistent_with(), summarize_conflict()) :
	   added
	* src/transition/T_system.cpp
	  (conflict_has_old_active_assignments()) : made local variable const
	  (covers(), consistent_with(), summarizes(), splitConflict(),
	   summarize_conflict()) : added
	  (summarize_conflicts()) : changed parameters and re-wrote
	* src/transition/tracker.cpp
	  (truncate()) : replaced call to T_system::summarize() with call to
	  T_system::summarize_variables(); inserted call to
	  T_system::summarize_conflicts()
	* l2-regress/base/cb-cbfs.5-1000-2.out (revised)
	* l2-regress/base/cb-cbfs.min-5-1000-2.out (revised)
	* l2-regress/base/cb-stripped.cbfs-5-1000-2.out (revised)

2002-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parse_cmd() const in all debuggers; PR1636
	* include/debuggers/T_system_debug.h
	  (parse_cmd(), doStateVariableStyle(), doDiscrepancy(),
	   doTransitions(), doValues(), doTimes(), doOldestTime(),
	   doCommands(), doObservables(), doTransitioned(), doPlanSteps()) :
	   made both arguments const
	* include/debuggers/conflict_db_debug.h
	  (parse_cmd(), assign()) : made all arguments const
	* include/debuggers/ltms_debug.h
	  (parse_cmd()) : made both arguments const
	* include/debuggers/tracker_debug.h
	  (parse_cmd(), getCommandAssignment(), doProgressStyle(),
	   doPrintCandidates(), doInstall(), doTruncate(),
	   doFindCandidatesStyle(), doFindCandidates(), doPruneAndSearch(),
	   doFindFreshCandidates(), doPrintAllStats(), doAddAssumption()) :
	   made all arguments const
	* include/opsat/cbfs_tracker_debug.h
	  (parse_cmd()) : made both arguments const
	* include/transition/T_system.h (summarize()) : augmented doc comment
	* include/transition/transitioned.h (set_initial_mode()) : augmented
	  doc comment
	* src/debuggers/T_system_debug.cpp
	  (parse_cmd(), doStateVariableStyle(), doDiscrepancy(),
	   doTransitions(), doValues(), doTimes(), doOldestTime(),
	   doCommands(), doObservables(), doTransitioned(), doPlanSteps()) :
	   made both arguments const
	* src/debuggers/conflict_db_debug.cpp
	  (isAllWhiteSpace(), assign(), parse_cmd()) : made all arguments
	   const; in assign(), this required copying the argument
	* src/debuggers/ltms_debug.cpp
	  (parse_cmd()) : made both arguments const
	* src/debuggers/tracker_debug.cpp
	  (parse_cmd(), getCommandAssignment(), doProgressStyle(),
	   doPrintCandidates(), doInstall(), doTruncate(),
	   doFindCandidatesStyle(), doFindCandidates(), doPruneAndSearch(),
	   doFindFreshCandidates(), doPrintAllStats(), doAddAssumption()) :
	   made all arguments const
	* src/opsat/cbfs_tracker_debug.cpp
	  (parse_cmd()) : made both arguments const
	
2002-09-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Everywhere made horizon of type Theory::time_step_t
	* include/debuggers/T_system_debug.h (print_start_state_assignment()) :
	  augmented doc comment
	* include/debuggers/conflict_db_debug.h (print_conflict(ostream&,
	  const Conflict&) : named first formal parameter and augmented doc
	  comment
	* include/transition/T_system.h (create_state_var(), summarize(),
	  put_candidate_in_trajectory(), summarize_variables(),
	  summarize_conflicts()) : made formal parameter horizon of type
	  Theory::time_step_t
	* include/transition/transitioned.h (set_initial_mode(), 
	  remove_old_mode_transition()) : made formal parameter horizon of
	  type Theory::time_step_t
	* src/transition/T_system.cpp (conflict_is_old(),
	   Old_variable_acceptor(), create_state_var(), summarize_variables(),
	   conflict_has_old_active_assignments(), summarize_conflicts(),
	   put_candidate_in_trajectory()) : made
	  formal parameter horizon of type Theory::time_step_t
	* src/transition/tracker.cpp (truncate()) : added comments
	* src/transition/transitioned.cpp (set_initial_mode(),
	  remove_old_mode_transition()) : made formal parameter horizon of
	  type Theory::time_step_t

2002-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added const to L2_string_map
	* include/debuggers/L2_string_map.h
	  (get_variable_name(const Variable&), get_variable_name(const
	   Variable&, unsigned), get_model_variable(),
	   get_variable_values(const L2rVariable*), get_variable_values(const
	   Variable&), get_variable_domain(const Variable&),
	   get_variable_domain(const L2rVariable*)) : made const
	  (remove_variable(), get_prop_by_name()) : made parameter const
	* src/debuggers/L2_string_map.cpp
	  (get_variable_name(const Variable&), get_variable_name(const
	   Variable&, unsigned), get_model_variable(),
	   get_variable_values(const L2rVariable*), get_variable_values(const
	   Variable&), get_variable_domain(const Variable&),
	   get_variable_domain(const L2rVariable*)) : made const
	  (get_element_for_key(), remove_variable(), get_prop_by_name()) :
	   made parameter const
	  (get_variable_name(const Variable&), get_variable_name(const
	   Variable&, unsigned), get_variable_by_name(), remove_variable(),
	   get_name_of_prop(), get_prop_by_name()) : made local variables const
	
2002-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made unchanged local variable static; removed redundant local variable
	* src/conflict_db/assignable.cpp
	  (Assignable()) : made local variable negPropositions static; removed
	   redundant local variable index
	
2002-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed *_enums_to_assignment from API. Beware: there may be clients.
	* include/transition/T_system.h
	  (minimal_progress(Command&, unsigned, Transition::ListOfTransition&),
	   minimal_progress(unsigned, unsigned, Transition::ListOfTransition&),
	   full_progress(Command&, unsigned, Transition::ListOfTransition&),
	   full_progress(unsigned, unsigned, Transition::ListOfTransition&)) :
	   inlined calls to cmd_enums_to_assignment()
	  (cmd_enums_to_assignment(unsigned, unsigned),
	   cmd_enums_to_assignment(Command&, unsigned),
	   obs_enums_to_assignment(unsigned, unsigned)) : removed
	* src/transition/transitioned.cpp
	  (add_commanded_transitions()) : inlined call to
	   cmd_enums_to_assignment()
	
2002-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made member functions protected; renamed formal parameters; augmented
	doc comments
	* include/transition/transitioned.h
	  (instantiate_clauses(), remove_transition_clauses()) : made
	   protected
	  (instantiate_clauses(), remove_transition_clauses(),
	   has_indexed_transitions(), instantiate indexed_clauses()) : renamed
	   formal parameter; augmented doc comments
	* src/transition/transitioned.cpp
	  (instantiate_clauses(), instantiate_indexed_clauses()) : renamed
	   formal parameter
	
2002-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added const to conditionally-compiled debug functions
	* src/transition/tracker.cpp
	  (prune_inconsistent_candidates_debug1()) : made local variables const
	  (prune_inconsistent_candidates_debug3()) : mode formal parameter
	  const
	
2002-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed MSVC++ incompatibilities; renamed parameters and variables;
	augmented doc comments
	* include/transition/transitioned.h
	  (instantiate(), get_command_assignment(), set_antecedants(),
	   instantiate_autonomous_clauses(), instantiate_unindexed_clauses(),
	   create_transition_variable()) : renamed formal parameters and
	   augmented doc comments
	* src/conflict_db/conflict_db.cpp (Variable()) : (is_assumption()) :
	  fixed 
	* src/conflict_db/variable.cpp (Variable()) : put for loops in
	  blocks because loop variable is not local to loop in MSVC++
	* src/transition/transitioned.cpp
	  (add_transition_prototype_to_table(), find_transition_prototypes()
	  instantiate_autonomous_clauses(), instantiate_unindexed_clauses()) :
	   renamed formal parameters and local variables
	  (remove_destroyed_clauses()) : put for loops in blocks because loop
	   variable is not local to loop in MSVC++
	
2002-08-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Augmented doc comments in transitioned.h
	* include/transition/transitioned.h (Transitioned(), 
	  add_commanded_prototype(), add_failure_prototype(), 
	  add_idle_prototype()) : augmented doc comments
	  
2002-08-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Transition const when returned by transition() and idle()
	* include/conflict_db/transition.h (ListOfTransition) modified it to be
	  Slist<const Transition*>
	* include/transition/transitioned.h (transition(), idle()) : modified
	  to return const Transition*; augmented doc comments
	* src/transition/T_system.cpp (minimal_progress(),
	  full_progress_copy_variables()) : modified local variable pTransition
	  to be const Transition*
	* src/transition/transitioned.cpp
	  (transition(), idle()) : modified to return const Transition*
	  (transition(), instantiate_clauses()) : renamed formal parameter

2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified prop_closest_* to make more const
	* include/transition/transitioned.h
	  (prop_closest_before(), prop_closest_after()) : modified parameter
	   assign to be a const reference
	* src/transition/transitioned.cpp
	  (prop_closest_before(), prop_closest_after()) : modified parameter
	   assign to be a const reference; made local variables const
	
2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Proto_transition::initialize() to return after finding first
	Command Assignment
	* src/transition/transitioned.cpp (Proto_transition::initialize()) :
	  modified to return after finding first Command Assignment
	
2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Proto_assignment list parameters const
	* include/transition/transitioned.h
	  (add_commanded_prototype()) : made parameters pos and neg const
	  (add_idle_prototype()) : made local variable empty static and const
	   because it's the same thing every time; no need to allocate on stack
	* src/transition/transitioned.cpp
	  (add_commanded_prototype()) : made parameters pos and neg const
	
2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved get_command_assignment to transitioned.h for inlining and made
	const
	* include/transition/transitioned.h
	  (get_command_assignment()) : moved definition from transitioned.cpp,
	  made const and augmented doc comment
	* src/transition/transitioned.cpp
	  (get_command_assignment()) : moved definition to transitioned.h
	
2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Proto_transition constructors to use initializer lists
	* include/transition/transitioned.h
	  (Proto_transition::Proto_transition()) : removed unused default
	   constructor
	  (Proto_transition(T_system&, unsigned, Transitioned&, unsigned),
	   Proto_transition(T_system&, unsigned, Transitioned&, unsigned,
	   Slist<T_system::Proto_assignment>&,
 	   Slist<T_system::Proto_assignment>&, int)) : removed unused parameter
  	   t_system
	  (Proto_transition::initialize()) : removed unused parameter system;
	   removed parameters to_value, pos, neg, transition_value, var;
	   renamed current_value to fromModeIndex; added doc comment
	* src/transition/transitioned.cpp
	  (add_failure_prototype(), add_commanded_prototype()) : removed
	   argument t_system in new Proto_transition
	  (Proto_transition(T_system&, unsigned, Transitioned&, unsigned),
	   Proto_transition(T_system&, unsigned, Transitioned&, unsigned,
	   Slist<T_system::Proto_assignment>&,
 	   Slist<T_system::Proto_assignment>&, int)) : removed unused
	   parameter t_system, modified to use initializer list
	  (Proto_transition::initialize()) : removed unused parameter system;
	   removed parameters to_value, pos, neg, transition_value, var;
	   renamed current_value to fromModeIndex
	
2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added const 
	* include/conflict_db/variable.h (get_prop()): made const
	* include/transition/T_system.h
	  (observe()) : augmented doc comment
	  (find_previous_variable()) : made const and augmented doc comment
	* src/conflict_db/variable.cpp (get_prop()): made const

2002-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed variables and augmented comments
	* include/transition/T_system.h (sumarize_variables()) : augmented doc
	  comment
	* include/transition/transitioned.h (set_initial_mode()) : renamed
	  variable and augmented doc comment
	* src/transition/T_system.cpp (summarize_variables(),
	  summarize_conflicts()) : renamed variables and augmented comments
	* src/transition/transitioned.cpp (set_initial_mode()) : renamed
	  variables and augmented comments

2002-08-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed declarations of member functions never defined
	* include/transition/tracker.h
	  (add_to_candidates(), truncate_candidate()) : removed
	
2002-08-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Make Livingstone::current_candidate_ const
	* include/api/livingstone.h (current_candidate_) : made const
	
2002-08-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Compile with flag -fno-rtti when exceptions are disabled; PR1634
	-fno-rtti will make the code smaller and faster, but with gcc earlier
	than 3.0, this flag breaks exception handling.
	To make sure that exception handling and rtti are mutually exclusive,
	ALL exception handling has been conditionally compiled.
	* configure re-created from configure.in
	* configure.in
	  (--disable-exceptions) add -fno-rtti to CXXFLAGS and print a message
	* src/checkpoint/checkpoint.cpp
	  (L2_checkpoint::data::deserialize()) : replaced try with "L2_TRY"
	  and surrounded all catch() clauses with #ifdef
	  ENABLE_EXCEPTIONS...#endif
	* src/cover/cover_tracker_debug.cpp
	  (parse_cmd()) : replaced try with "L2_TRY" and surrounded all
	  catch() clauses with #ifdef ENABLE_EXCEPTIONS...#endif
	* src/debuggers/livingstone_debug.cpp 
	  (run()) :  replaced try with "L2_TRY" and surrounded all catch()
	  clauses with #ifdef ENABLE_EXCEPTIONS...#endif
	* src/livdll/livdll.cpp
	  (all) replaced try with "L2_TRY" and surrounded all catch() clauses
	  with #ifdef ENABLE_EXCEPTIONS...#endif
	* src/readers/from_xmpl.cpp
	  (read()) :  replaced try with "L2_TRY" and surrounded all catch()
	  clauses with #ifdef ENABLE_EXCEPTIONS...#endif

2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Simplified loop in T_system::splice()
	* src/transition/T_system.cpp (splice()) : simplified loop
	
2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parameters and local variables const
	* include/conflict_db/assumption.h (Assumption()) : made ListOfWeight&
	  parameter const
	* include/conflict_db/past_command.h (Past_command()) : made
	  ListOfWeight& parameter const
	* include/conflict_db/state_variable.h (State_variable()) : made
	  ListOfWeight& parameter const
	* include/conflict_db/transition.h (Transition()) : made
	  ListOfWeight& parameter const
	* include/transition/T_system.h
	  (full_progress(Command&, unsigned, Transition::ListOfTransition)) :
	   made local varaible pAssignment const
	  (full_progress(unsigned, unsigned, Transition::ListOfTransition)) :
	   made local varaible pAssignment const
	  (create_horizon_transition(), create_mode_transition(),
	   create_past_command(), create_state_variable(),
	   create_transition()) : made Assignment::ListOfWeights& parameter
	   const
	* src/conflict_db/assumption.cpp (Assumption()) : made ListOfWeight&
	  parameter const
	* src/transition/T_system.cpp (create_past_command(),
	  create_mode_transition(), create_state_variable(),
	  create_transition()) : made Assignment::ListOfWeights& parameter
	  const

2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parameters and methods const
	* include/conflict_db/candidate.h
	  (add_consistently()) : made parameter const
	  (assign()) : made const
	* include/transition/tracker.h
	  (add_assumption()) : made parameter const
	  (full_progress(Assignment*)) : made parameter const
	  (install()) : made Candidate parameter const
	* src/conflict_db/candidate.cpp
	  (add_consistently()) : made parameter const
	  (assign()) : made const
	* src/transition/tracker.cpp
	  (add_assumption()) : made parameter const
	  (full_progress(Assignment*)) : made parameter const
	  (install()) : made Candidate parameter const
	
2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved factories from conflict_db.cpp to conflict_db.h for inlining
	* include/conflict_db/conflict_db.h (create_assignable(),
	  create_command(), create_dependent(), create_observable()) : moved
	  from conflict_db.cpp
	* src/conflict_db/conflict_db.cpp (create_assignable(),
	  create_command(), create_dependent(), create_observable()) : moved
	  to conflict_db.h
	
2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved propagate() from conflict_db.cpp to conflict_db.h for inlining
	* include/conflict_db/conflict_db.h (propagate()) : moved from
	  conflict_db.cpp
	* src/conflict_db/conflict_db.cpp (propagate()) : moved to
	  conflict_db.h
	
2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed T_system::is_*(unsigned variableID) methods
	* include/transition/T_system.h (is_command(), is_observable(),
	  is_transitioned()) : removed
	* src/debuggers/T_system_debug.cpp (assign_mode()) : query whether
	  a Variable is a Transitioned from the Variable, not the T_system

2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made predicates on Clause const
	* include/conflict_db/conflict_db.h (is_assumption()) : made parameter
	  const
	* include/tms/ltms.h (get_clause_support(),
	  get_proposition_support(), last_conflict()) : made Clause parameter
	  const
	* src/conflict_db/conflict_db.cpp (is_assumption()) : made parameter
	  and local variables const
	* src/debuggers/ltms_debug.cpp (always_true()) : made parameter const
	* src/debuggers/T_system_debug.cpp (true_for_all_clauses()) : made
	  parameter const
	* src/tms/ltms.cpp (get_clause_support(), last_conflict()) : made
	  Clause parameter const
	
2002-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Inlined T_system::create_present_*() methods
	* include/transition/T_system.h (create_present_command(),
	  create_present_dependent(), create_present_observable() and
	  create_present_transitioned()) : removed, inlined into
	  to_t_system::createVariable();
	* src/readers/to_t_system.cpp (createVariable()) : inlined calls to
	  create_present_command(), create_present_dependent(),
	  create_present_observable() and create_present_transitioned()
	* src/transition/T_system.cpp (create_present_command(),
	  create_present_dependent(), create_present_observable() and
	  create_present_transitioned()) : removed, inlined into
	  to_t_system::createVariable();

2002-08-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Supplied isTrue(), isFalse() and isUnknown() to class Proposition
	* include/tms/proposition.h (isTrue(), isFalse()) : added
	* src/conflict_db/variable.cpp (get_value(), get_value_index(()) :
	  modified to use Proposition::isTrue()
	* src/debuggers/ltms_debug.cpp (cprops(), print_proposition()) :
	  modified to use Proposition::isTrue() and Proposition::isFalse()
	* src/livdll/livdll.cpp (jni_print_proposition(),
	  Java_LivingstoneEngine_getPropValueJNI()) : modified to use
	  Proposition::isTrue() and Proposition::isFalse()
	* src/tms/clause.cpp
	  (find_satisfying_prop()) : modified to use
	   Proposition::isTrue() and Proposition::isFalse()
	  (get_unassigned_literal(), count_unassigned()) : modified to use
	   Proposition::isUnknown()
	* src/tms/ltms.cpp
	  (unassign()) : modified to use Proposition::isTrue() and
	   Proposition::isUnknown()
	  (move_support()) : modified to use Proposition::isFalse()
	
2002-08-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed Variable's sequence of Propositions from Slist to Array
	* include/conflict_db/variable.h
	  (get_nvalues()) : changed to get size from member propositions
	  (prop_iterator, begin_props(), end_props(), all_props) : removed
	  (propositions) : added
	* include/tms/proposition.h (ArrayOfProposition) : added
	* src/conflict_db/assignable.cpp (Assignable()) : modified to iterate
	  over Array propositions instead of Slist all_props
	* src/conflict_db/variable.cpp
	  (Variable()) : added local variable all_props; modified to add each
	   Proposition to both all_props and Variable::propositions; changed
	   nested loops to iterate over Variable::propositions
	  (~Variable()) : modified to iterate over Variable::propositions and
	   not to remove elements from Variable::propositions
	  (get_prop()) : modified to do array lookup
	  (get_value(), get_value_index()) : modified to iterate over
	   Variable::propositions
	* src/debuggers/L2_string_map.cpp (add_variable()) : modified to use
	  array access instead of iterator
	* src/transition/T_system.cpp (splice()) : modified to use array access
	  instead of iterator
	
2002-07-31  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Assignment::is_assumption() and made members const
	* include/conflict_db/assignment.h
	  (is_assumption(const Clause&)) : removed; unused and redundant with
	   Conflict_db::is_assumption(Clause&)
	  (variable) : made const pointer
	  (index) : made const
	* src/conflict_db/assignment.cpp
	  (add_conflict(), remove_conflict()) : renamed formal parameter
	  (is_assumption(const Clause&)) : removed; unused and redundant with
	   Conflict_db::is_assumption(Clause&)
	* src/conflict_db/conflict_db.cpp
	  (is_assumption()) : moved comment from Assignment::is_assumption()

2002-07-31  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added some const to Livingstone_debug and its clients
	* include/debuggers/livingstone_debug.h
	  (search_termination_string()) : modified to return a const
	   MBA_string
	  (get_representative()) : modified to return a const Variable* and
	   to have a const input parameter
	* include/readers/livingstone_reader.h
	  (getVariableMapping() : modified to return a const MBA_string and to
	   have a const input parameter
	  (getRepresentativeVariable()) : modified to return a const MBA_string
	   and to have a const input parameter
	* src/debuggers/livingstone_debug.cpp 
	  (get_representative()) : modified to return a const Variable* and
	   to have a const input parameter; made local variable const
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverAttributeAssignmentsJNI) : made local
	   variables const

2002-07-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved planning flag from LTMS to T_system; PR1629
	* include/tms/ltms.h
	  (isPlanning(), setPlanning(), planning) : moved to T_system.h
	* include/transition/T_system.h
	  (T_system()) : added planning to initializer list
	  (isPlanning(), setPlanning(), planning) : moved from ltms.h
	* src/api/livingstone.cpp (reconfigure()) : changed call to
	  LTMS::setPlanning() to T_system::setPlanning()
	* src/readers/l2test/l2test.cpp (main()) : changed call to
	  LTMS::isPlanning to T_system::isPlanning()
	* src/readers/to_t_system.cpp (createTransitions()) : changed call to
	  LTMS::isPlanning to T_system::isPlanning()
	* src/transition/transitioned.cpp
	  (create_transition_variable(), set_initial_mode(),
	   Proto_transition::instantiate()) : changed call to
	  LTMS::isPlanning to T_system::isPlanning()
	
2002-07-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved definitions from clause.h to clause.cpp
	* include/tms/clause.h (initialize(), set_supports(), get_supports(),
	  contains(), count_unassigned()) : moved definition to clause.cpp
	* src/tms/clause.cpp (initialize(), set_supports(), get_supports(),
	  contains(), count_unassigned()) : moved definition from clause.h

2002-07-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made constructor Clause::Clause() private; PR1627
	* include/tms/clause.h (Clause()) : made private

2002-07-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant iterator accessors from class Proposition
	* include/tms/proposition.h (friend_begin_positive(),
	  friend_end_positive(), friend_begin_negative(),
	  friend_end_negative()) : removed
	* src/tms/proposition.cpp (set_destroying()) : changed friend_begin_*()
	  and friend_end_*() accessors to begin_*() and end_*() accessors

2002-07-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made constructor Proposition::Proposition() private
	* include/tms/proposition.h (Proposition()) : made private

2002-07-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cleaned up handling of Clause::satisfying_prop
	* include/tms/clause.h
	  (find_and_set_satisfying_prop()) : removed
	  (find_satisfying_prop()) : added
	* src/tms/clause.cpp
	  (find_and_set_satisfying_prop()) : removed
	  (find_satisfying_prop()) : added
	* src/tms/ltms.cpp (unassignUpdateSameSense()) : modified to use
	  find_satisfying_prop() and set_satisfying_prop() rather than
	  find_and_set_satisfying_prop()
	* src/tms/ptheory.cpp (add()) : modified to use find_satisfying_prop(),
	  set_satisfying_prop(), count_unassigned(), and set_unassigned_count()
	
2002-07-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made members const; updated comments and changed variable names
	* include/conflict_db/assignable.h
	  (is_current(), assign(const Assignable&), assign(const Assignment&),
	   set_weight()) : renamed formal parameter
	  (save(), restore()) : modified doc comment
	  (tms) : changed from pointer to reference
	* include/conflict_db/assumption.h
	  (default_assignment) : made const
	* include/conflict_db/variable.h
	  (id) : made const
	* include/tms/clause.h
	  (contains()) : renamed formal parameter
	  (cast_to_Clause_p()) : removed
	* include/tms/ltms.h (get_proposition_support()) : modified to cache
	  result of Proposition::get_supported_by()
	* include/tms/ptheory.h (add(), remove()) : renamed formal parameter
	  and augmented doc comment
	* src/conflict_db/assignable.cpp
	  (Assignable()) : revised comments; inlined local variables
	  (assign(const Assignable&)) : made if condition more explicit
	  (unassign()) : changed 0 to NULL
	  (set_weight()) : renamed formal parameter
	* src/conflict_db/assumption.cpp (Assumption()) : moved initialization
	  of default_assignment from body to initializer list
	* src/conflict_db/candidate.cpp (consistent_assignment()) : renamed
	  formal parameter
	
2002-07-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored LTMS::move_support() and made several other minor changes
	* include/conflict_db/conflict_db.h (is_assumption()) : changed doc
	  comment
	* include/tms/ltms.h
	  (last_conflict()) : changed doc comment
	  (transfer_clauses()) : added; extracted from move_support()
	* include/tms/proposition.h (supported_by, set_supported_by()) : changed
	  doc comment
	* src/conflict_db/conflict_db.cpp
	  (is_assumption()) : renamed formal parameter, renamed local variable
	  and added comments
	  (find_subsuming_conflict()) : removed parentheses from return
	  statement and added comments
	  (conflict()) : renamed local variables, reformatted and added comments
	* src/tms/ltms.cpp
	  (add()) : removed unnessary cast
	  (get_clause_support()) : removed unused local variables, reformatted,
	   added comments
	  (last_conflict_debug1(), last_conflict_debug2()) : reformatted and
	   added doc comment
	  (last_conflict()) : renamed local variables, added comments
	  (transfer_clauses()) : added; extracted from move_support()
	  (move_support()) : extracted transfer_clauses(), extensive rewriting
	   to partition it into 3 cases

2002-07-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Extracted methods from LTMS::assign() and LTMS::unassign()
	* include/tms/clause.h
	  (find_and_set_satisfying_prop(), get_satisfying_prop(),
	   set_satisfying_prop(), satisfying_prop) : modified Proposition* to
	   be const
	* include/tms/ltms.h
	  (assignUpdateSameSense(), assignUpdateOppositeSense()) : added;
	   extracted from LTMS::assign()
	  (unassignUpdateSameSense(), unassignUpdateOppositeSense()) : added;
	   extracted from LTMS::unassign()
	* src/debuggers/ltms_debug.cpp (explain_clause()) : modified
	  pSatisfyingProposition to be const
	* src/tms/clause.cpp (find_and_set_satisfying_prop()) : modified
	  Proposition* to be const
	* src/tms/ltms.cpp
	  (assignUpdateSameSense(), assignUpdateOppositeSense()) : added;
	   extracted from LTMS::assign()
	  (assign()) : extracted assignUpdateSameSense() and
	   assignUpdateOppositeSense()
	  (unassignUpdateSameSense(), unassignUpdateOppositeSense()) : added;
	   extracted from LTMS::unassign()
	  (unassign()) : extracted unassignUpdateSameSense() and
	   unassignUpdateOppositeSense()
	
2002-07-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Ptheory::cast_to_Ptheory()
	* include/tms/ptheory.h (cast_to_Ptheory()) : removed
	
2002-07-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Inlined Ptheory::insert_clause() into Ptheory::create_clause()
	* include/tms/ptheory.h 
	  (create_clause()) : moved definition into Ptheory.cpp
	  (insert_clause()) : removed; inlined into create_clause()
	* src/tms/ptheory.cpp
	  (create_clause()) : moved definition from Ptheory.h and inlined
	  insert_clause()
	  (insert_clause()) : removed; inlined into create_clause()	  
	
2002-07-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Untangled LTMS re-initialization
	* include/tms/clause.h (initialize()) : added
	* include/tms/ltms.h
	  (initialize_clause(), initialize_prop()) : removed
	  (initialize()_self()) : renamed initialize()
	* include/tms/proposition.h (initialize()) : added()
	* include/tms/ptheory.h
	  (initialize_clause(), initialize_prop(), initialize_self()) : removed
	* src/tms/ltms.cpp (initialize_clause(), initialize_prop()) : removed
	  (initialize_self()) : renamed initialize()
	* src/tms/ptheory.cpp (initialize()) : modified to call
	  Clause::initialize() and Proposition::initialize() and not to call
	  initialize_self()

2002-07-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Corrected misspelling of OBSERVABLE_H in observable.h
	* include/conflict_db/observable.h (#define) : corrected misspelling of
	  OBSERVABLE_H

2002-07-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed macro DISABLE_LISTEN to DISABLE_TRACKER_LISTEN in Tracker
	* include/transition/tracker.h (class Tracker_listener,
	  add_listener(), remove_listener(), listeners_) : changed
	  macro in conditional from DISABLE_LISTEN to DISABLE_TRACKER_LISTENER
	* src/transition/tracker.cpp (macro record()) :  changed
	  macro in conditional from DISABLE_LISTEN to DISABLE_TRACKER_LISTENER
	
2002-07-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed conditional compilation of functions needed unconditionally
	With --disable-verbose, Domain::Domain(const L2rMode*) wouldn't
	compile because it used L2rTransition::printTo(), but the latter wasn't
	being compiled.
	* include/readers/enumeration.h (printMember()) : modified to compile
	  unconditonally
	* include/readers/transition.h (printTo()) : modified to copile
	  unconditionally
	
2002-07-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed inclusion of L2_string_map.h in trajectory.cpp
	This caused Conflict_db to depend on debugger code
	* src/debuggers/trajectory.cpp ($include debuggers/L2_string_map.h) :
	  removed
	
2002-07-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Allowed disabling model files readers; PR1451
	* configure (all) : created from modified configure.in
	* configure.in (--enable-model-files) : added
	* include/api/livingstone.h (read_file(), set_filename(),
	  get_filename(), set_filetype(), get_filetype()) : compile if
	  DISABLE_MODEL_FILES is not defined
	* include/readers/livingstone_reader.h (read_file()) : compile if
          DISABLE_MODEL_FILES is not defined
	* src/api/livingstone.cpp (read_file()) : compile if
          DISABLE_MODEL_FILES is not defined
	* src/readers/livingstone_reader.cpp (read_file()) : compile if
	  DISABLE_MODEL_FILES is not defined

2002-07-15  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised base files for regression tests to handle change of 2002-07-02
	* l2-regress/base/cb-cbfs.5-1000-2.out,
	  l2-regress/base/cb-cbfs.min-5-1000-2.out,
	  l2-regress/base/cb-stripped.cbfs-5-1000-2.out :
	  Revised because asterisks now appear for truncated horizon
	  transitions and the number searched changed
	
2002-07-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Truncate horizon Transition Assignments; PR1544
	* include/debuggers/trajectory.h (get_parts_count()) : added
	* src/conflict_db/candidate.cpp
	  (truncate()) : added disjunct to if condition for wehther the
	   Assignment's time step is T_system::BEFORE_HORIZON. Since the
	   Conflict_db shouldn't know about the T_system, define own constant.
	* src/debuggers/T_system_debug.cpp
	  (print_start_state_assignment()) : added conditionally-compiled code
	   to print State Variable value, Trajector parts count and weight
	* src/debuggers/tracker_debug.cpp
	  (print_candidates()) : added conditionally-compiled code to
	   print Candidate's weight after its number
	* src/transition/T_system.cpp
	  (put_candidate_in_trajectory()) : added disjunct to if condition for
	   whether the Assigment's time step is BEFORE_HORIZON
	
2002-07-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed get_candidate_count() and removed zero_candidate_count()
	* include/opsat/cbfs_tracker.h
	  (get_candidate_count()) : renamed "get_candidates_considered()";
	  changed "Opsat_CBFS::get_candidate_count()" to
	  "Opsat_CBFS::get_candidates_considered()"
	  (zero_candidate_count()) : removed
	* include/opsat/opsat.h
	  (get_candidate_count()) : removed
	* src/opsat/cbfs_tracker_debug.cpp
	  (search_termination()) : changed "get_candidate_count()" to
	   "get_candidates_considered()" (3 times)
	* src/opsat/opsat.cpp
	  (find_consistent_candidates()) : changed call to
	  "zero_candidate_count() to an assignment
	
2002-07-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed variables and parameters and augmented doc comments
	* include/opsat/agenda_types.h
	  (pop_useless_items()) : renamed "pop_useless_assignments()"
	  (shift_item()) : renamed "shift_assignment()"
	* include/opsat/cbfs_agenda.h
	  (pop_useless_items()) : renamed "pop_useless_assignments()";
	  changed "new_items" to "assignments"; changed "subCandidate" to
	  "candidate"
	  (get_new_items()) : renamed "get_new_assignments()";
	   changed "new_items" to "assignments"; changed "subCandidate" to
	   "candidate"; changed "pCandidateConflict" to "pConflict"; changed
	   "pop_useless_items()" to "pop_useless_assignments()"
	  (expand_element()) : changed "new_items" to "assignments";
	   changed "pop_useless_elements()" to "pop_useless_assignments()";
	    changed "shift_item()" to "shift_assignment()"; changed
	    "new_element" to "pElement"
	* src/opsat/agenda_types.cpp 
	  (pop_useless_items()) : renamed "pop_useless_assignments()"
	* src/opsat/opsat.cpp
	  (Opsat_CBFS()) : changed "cdb" to "pConflict_db"
	  (initialize_search()) : changed "agenda_inits" to "seedCandidates";
	   changed "count" to "consistentCandidateCount"; changed
	   "consistent_candidates" to "consistentCandidates"; changed "found"
	    to "pCandidate"
	  (next_consistent_candidate()) : augmented doc comment; changed
	   "candidate_conflict" to "pConflict"
	
2002-07-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed the template variable in CBFSAgenda::expand_element()
	* include/opsat/cbfs_agenda.h (expand_element()) : changed the template
	  variable from T to CBFSElementType
	
2002-07-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Extracted is_assignment_useful() from pop_useless_items()
	* include/opsat/agenda_types.h (is_assignment_useful()) : added
	* include/opsat/cbfs_agenda.h (pop_useless_items()) : modified to call
	  CBFSElement::is_assignment_useful()
	* src/opsat/agenda_types.cpp (pop_useless_items()) : modified to call
 	  CBFSElement::is_assignment_useful()

2002-07-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cleaned up API for Opsat_CBFS
	* include/opsat/opsat.h
	  (friend declarations) : removed
	  (superset_candidate()) : made private
	  (get_conflict_db()) : removed
	  (set_conflict_db()) : added
	* src/opsat/cbfs_tracker.cpp (extend_candidates()) : modified to call
	  Opsat_CBFS::set_conflict_db()

2002-07-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made CBFSElement::get_emepty_element_weight() const
	* include/opsat/agenda_types.h (get_empty_element_weight()) : made
	  const

2002-06-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made members of CBFSElement const
	* include/opsat/agenda_types.h
	  (CBFSElement()) : made pAssignment argument const
	  (remaining_assignments_empty()) : made const
	  (pCurrentAssignment) : made const
	
2002-06-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parameter to Candidate::add() const
	* include/conflict_db/candidate.h (add()) : made parameter const
	
2002-06-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parameter to set_empty_element_weight() a non-reference
	* include/opsat/agenda_types.h (set_empty_element_weight()) : made
	  parameter (a primitive type) a non-reference
	
2002-06-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised doc comments
	* include/opsat/agenda_types.h (doc comments) : revised
	* include/opsat/binaryheap.h (doc comments) : revised
	* include/opsat/opsat.h (doc comments) : revised
	
2002-06-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Opsat_CBFS to have a CBFSAgenda, not be a CBFSAgenda
	* include/opsat/opsat.h
	  (Opsat_CBFS) : do not inherit from CBFSAgenda<CBFSElement>
	  (agenda) : added
	* src/opsat/opsat.cpp
	  (Opsat_CBFS()) : initialize member rather than superclass
	  (initialize_search(), next_consistent_candidate(),
	   terminate_search()) : forward to Opsat_CBFS::agenda
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant call to compute_item_weight() from expand_element()
	* include/opsat/cbfs_agenda.h (expand_element()) : removed redundant
	  call to compute_item_weight(); insert() already does this
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made subCandidate a const reference
	* include/opsat/cbfs_agenda.h
	  (pop_useless_items(), get_new_items()) : made subCandidate a const
	   reference
	  (top_weight()) : modified to call get_weight()
	  (get_new_items()) : changed to pass reference rather than pointer
	   to pop_useless_items
	  (pop_useless_items()) : changed -> to .
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made all data members of CBFSElement private and supplied accessors
	* include/opsat/agenda_types.h
	  (get_weight(), set_weight()) : added
	  (empty_element_weight, candidate_prefix, pCurrentAssignment,
	   remainingAssignments, weight) : made private

2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Inlined CBFSElement::compute_partial_weight()
	* include/opsat/agenda_types.h
	  (compute_element_weight()) : inlined compute_partial_weight()
	  (compute_partial_weight()) : removed
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made CBFSElement::candidate_prefix const
	* include/opsat/agenda_types.h (candidate_prefix) : made const
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made CBFS_traker::get_number_tracked() return unsigned
	* include/opsat/cbfs_tracker.h
	  (get_number_tracked()) : changed to return unsigned
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made CBFS_tracker::number_tracked a const unsigned
	* include/opsat/cbfs_tracker.h
	  (number_tracked) : changed from int to const unsigned
	
2002-06-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced magic numbers with symbolic constants
	* include/opsat/cbfs_tracker.h
	  (public_constants) : added DEFAULT_MAXIMUM_CANDIDATE_COUNT and
	  DEFAULT_MAXIMUM_SEARCH
	  (CBFS_tracker()) : replaced magic numbers with symbolic constants

2002-06-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed "item" members to specify that they are Assignments
	* include/opsat/agenda_types.h
	  (CBFSElement(), CBFSElement(Candidate&),
	   CBFSElement(const Candidate&, Assignment*, const
	   Assignment::ListOfAssignment), shift_item(),
	   compute_element_weight(), compute_partial_weight(), item) :
	   changed item to pCurrentAssignment
	  (shift_item(), remaining_items_empty(), remaining_items) :
	   changed remaining_items to remainingAssignments
	  (remaining_items_empty()) : changed to remaining_assignments_empty()
	* include/opsat/cbfs_agenda.h (expand_element()) : changed
	  remaining_items_empty() to remaining_assignments_empty()
	* src/opsat/agenda_types.cpp
	  (generate_candidate(), pop_useless_items()) : changed item to
	   pCurrentAssignment
	  (pop_useless_items()) : changed remaining_items to
	  remainingAssignments
	
2002-06-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made remainder argument to CBFS_Element() a const reference
	* include/opsat/agenda_types.h (CBFSElement(const Candidate&,
	  Assignment*, Assignment::ListOfAssignment)) : made third argument a
	  const reference, avoiding excess copying 
	
2002-06-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed Slist<Assigment *> to Assignment::ListOfAssignment
	* include/opsat/agenda_types.h (CBFSElement(), remaining_items) :
	  changed Slist<Assigment *> to Assignment::ListOfAssignment
	* include/opsat/cbfs_agenda.h (pop_useless_items(), get_new_items(),
	  expand_element()) : changed Slist<Assigment *> to
	  Assignment::ListOfAssignment
	
2002-06-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Spruced up Opsat_CBFS::superset_candidate()
	* include/opsat/opsat.h
	  (superset_candidate()) : made const; changed first parameter to
	  const Candidate& testCandidate
	* src/opsat/opsat.cpp
	  (superset_candidate()) : made const; changed first parameter to
	  cosnt Candidate& testCandidate
	
2002-06-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed excessively abstract typedef AgendaItem and weight_type
	* include/opsat/agenda_types.h
	  (#typedef Assignment AgendaItem, #typedef Assignment::weight
	   weight_type) : removed
	  (CBFSElement(const Candidate&, AgendaItem*, Slist<AgendaItem *>),
	   item, remaining_items) :
	   changed AgendaItem to Assignment
	  (compute_element_weight(), compute_partial_weight(),
	   get_empty_element_weight(), set_empty_element_weight(), weight,
	   empty_element_weight) : changed weight_type to Assignment::weight_t
	* include/opsat/cbfs_agenda.h
	  (pop_useless_items(), get_new_items(), expand_element(),
	   get_new_items(), pop_useless_items()) : changed AgendaItem to
	   Assignment
	  (CBFSAgenda() top_weight(), CBFSAgenda()) : changed weight_type to
	   Assignment::weight_t
	* src/opsat/agenda_types.cpp
	  (pop_useless_items()) : changed AgendaItem to Assignment
	  (empty_element_weight) : changed weight_type to Assignment::weight_t
	
2002-06-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Merged SummingCBFSElement into CBFSElement, making it concrete
	* include/opsat/agenda_types.h
	  (compute_element_weight(), compute_partial_weight(), operator>(),
	   operator<()) : moved from SummingCBFSElement to CBFSElement
	  (SummingCBFSElement(), SummingCBFSElement(const Candidate&),
	   SummingCBFSElement(const Candidate&, AgendaItem*, Slist<AgendaItem>,
	   ~SummingCBFSElement(), class SummingCBFSElement) : removed
	* include/opsat/opsat.h (Opsat_CBFS) : changed SummingCBFSElement to
	  CBFSElement
	* src/opsat/opsat.cpp (Opsat_CBFS): changed SummingCBFSElement to
	  CBFSElement

2002-06-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Merged abstract class SatisfactionSearch into Opsat_CBFS
	* include/opsat/opsat.h (SatisfactionSearch) : deleted class definition
	  and moved SatisfactionSearch::superset_candidate() to Opsat_CBFS
	* src/opsat/opsat.cpp (SatisfactionSearch::superset_candidate()) :
	  moved to Opsat_CBFS
	
2002-06-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed CBFS Candidate counts from int to unsigned as in Livingstone
	* include/opsat/cbfs_tracker.h (CBFS_tracker()) : changed int to
	  unsigned (2 times)
	* src/opsat/cbfs_tracker.cpp (CBFS_tracker()) : changed int to
	  unsigned (2 times)
	
2002-06-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed CBFS Candidate counts from long to unsigned as in Livingstone
	* include/opsat/cbfs_tracker.h
	  (set_max_candidates(), get_max_candidates(), get_candidate_count()) :
	   changed long to unsigned
	* include/opsat/opsat.h
	  (SatisfactionSearch::find_consistent_candidates(), Osat_CBFS(),
	   Opsat_CBFS::find_consistent_candidates(), set_max_candidates()
	   get_max_candidates(), get_candidate_count(), candidates_considered,
	   max_candidates) : changed long to unsigned
	* src/opsat/opsat.cpp
	  (Opsat_CBFS(), find_consistent_candidates()) : changed long to
	   unsigned
	* src/opsat/cbfs_tracker_debug.cpp (search_termination()) : changed
	  %ld to %u (4 times)
	
2002-06-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Migrated create_* methods from Conflict_db to T_system; PR1488
	* include/conflict_db/conflict_db.h
	  (create_past_command(), create_state_variable(),
	   create_transition()) : moved to T_system
	  (includes past_variable.h, state_variable.h, transition.h) : moved
	   to T_system.h
	* include/transition/T_system.h
	  (create_past_command(), create_state_variable(),
	   create_transition()) : moved from Conflict_db
	* src/conflict_db/conflict_db.cpp
	  (create_past_command(), create_state_variable(),
	   create_transition()) : moved to T_system
	* src/transition/T_system.cpp
	  (create_past_command(), create_state_variable(),
	   create_transition()) : moved to T_system
	
2002-06-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Extracted register* methods from create_* methods
	* include/conflict_db/conflict_db.h
	  (registerAssignable(), registerAssumption()) : added
	* src/conflict_db/conflict_db.cpp
	  (createAssignable(), create_past_command(), create_transition(),
	   create_state_variable(), create_command(), create_observable()) :
	   modified to use registerAssignable() or registerAssumption()

2002-06-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Conflict_db_debug::assign() accept trailing white space; PR1487
	* src/debuggers/conflict_db_debug.cpp
	  (isAllWhiteSpace()) : added
	  (assign()) : made end, first_equal and terminator const; changed
	   while condition to call isAllWhiteSpace()
	  
2002-06-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Finished converting magic numbers to symbolic constants; PR1610
	* include/api/livingstone.h
	  (Livingstone::failure::timestep) : modified comment
	  (Livingstone::failure::get_time_step()) : modified comment
	* include/readers/from_l2.h
	  (private_constants) : added definition
	  (read_integer()) : modified doc comment
	* include/readers/from_xmpl.h
	  (public_constants) : added definition
	  (find_enum_member()) : added parameter names and augmented doc
	  comment
	* src/readers/from_l2.cpp
	  (read_integer()) : changed -2 to NOT_AN_INTEGER (two times)
	* src/readers/from_xmpl.cpp
	  (find_enum_member()) : changed -2 to NOT_FOUND
	
2002-06-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified to use symbolic constants
	* include/transition/transitioned.h
	  (public_constants) : added definition
	  (horizon_transition) : modified doc comment
	* src/checkpoint/checkpoint.cpp
	  (store_command_history()) : changed -1 to Variable::NOT_FOUND
	* src/transition/transitioned.cpp
	  (Transitioned::add_failure_prototype()) : modified comment
	  (Transitioned::Proto_transition::Proto_transition()) : changed -1 to
	  Transitioned::ANY_MODE
	  (Transitioned::Proto_transition::set_antecedants()) : modified
	  comment
	
2002-06-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cache all Transition Clauses in NOW Transitioned objects; PR1607
	* include/transition/transitioned.h
	  (add_transition_clause()) : modified to insert pClause into
	  Transitioned::all_transition_clauses if ENABLE_CHECKPOINT defined
	  (remove_all_transition_clauses()) : added if ENABLE_CHECKPOINT
	  defined
	  (remove_transition_clause()) : modified to remove pClause from
	  Transitioned::all_transition_clauses if ENABLE_CHECKPOINT defined
	  (clauses_begin(), clauses_end()) : added if ENABLE_CHECKPOINT defined
	  (all_transition_clauses) : added if ENABLE_CHECKPOINT defined
	* src/checkpoint/checkpoint.cpp
	  (is_transition_clause()) : split into hasTransitionClauseCounts()
	  and containsNegative()
	  (delete_outdated_constraints()) : modified to iterate over
	  Transitioned::all_transition_clauses instead of Ptheory::clauses;
	  modified innermost if to call containsNegative() and
	  has_transition_clause_counts()
	* src/transition/transitioned.cpp
	  (remove_all_transition_clauses()) : added if ENABLE_CHECKPOINT
	  defined
	  (remove_destroyed_clauses()) : modified to remove destroyed Clauses
	  from Transitioned::all_transition_clauses if ENABLE_CHECKPOINT
	  defined
	
2002-06-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant BEFORE_HORIZON into T_system
	* include/debuggers/T_system_debug.h
	  (find_at_timestep()) : augmented doc comment and renamed parameter
	* include/transition/T_system.h
	  (public_constants) : added BEFORE_HORIZON
	  (create_horizon_transition()) : changed NOW to BEFORE_HORIZON and
	  modified doc comment
	* src/debuggers/L2_string_map.cpp
	  (get_variable_name(const Variable&),
	   get_variable_name(const Variable&, timeStep) : changed
	   T_system::NOW to T_system::BEFORE_HORIZON, renamed local variables
	   and added comments
	  (get_var_or_null(const MBA_string&)) : changed NOW to BEFORE_HORIZON
	   and modified comments
	  (form_name_at_time()) : added comment

2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constants into Livingstone
	* include/api/livingstone.h
	  (public_constants) : added definition
	  (Livingstone::get_value()) : modified doc comment
	* src/api/livingstone.cpp
	  (Livingstone::failure::is_valid(),
	   Livignstone::failure::invalid()) : changed -1 to
	  INVALID_VARIABLE_ID, INVALID_VALUE_INDEX or INVALID_TIME_STEP
	  (Livingstone::get_value()) : changed -1 to NOT_FOUND (two times)
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant NOT_FOUND into Variable
	* include/conflict_db/variable.h
	  (public_constants) : added definition
	  (get_value_index()) : modified doc comment
	* src/conflict_db/variable.cpp
	  (get_value_index()) : changed -1 to NOT FOUND and modified doc
	  comment

2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_file_translator to use existing symbolic constant
	* scr/readers/L2_file_translator.cpp
	  (add_mapping()) : changed -1 to L2rTransition::ANY_MODE
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified readers/writers to use existing symbolic constants
	* src/readers/from_l2.cpp
	  (parse_one_transition()) : changed conditional to use
	  L2rTransition::ANY_MODE (two times)
	* src/readers/to_l2.cpp
	  (print_one_transition()) : changed -1 to L2rTranstiion::ANY_MODE
	  (print_initial()) : changed -1 to L2rVariable::NO_INITIAL_VALUE (two
	   times)
	* src/readers/to_bin.cpp
	  (write_one_transition()) : modified comment
	* src/readers/to_t_system.cpp
	  (createInitialState(), initializeObservations()) : modified to use
	  L2rVariable::NO_INITIAL_VALUE
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant NOT_FOUND into Conflict_db_debug
	* include/debuggers/conflict_db_debug.h
	  (public_constants) : added definition
	  (find_prop_index()) : modified doc comment
	* src/debuggers/conflict_db_debug.cpp
	  (find_prop_index()) : changed -1 to NOT_FOUND
	  (find_assignment()) : changed to test for NOT_FOUND
	* src/debuggers/T_system_debug.cpp
	  (assign_mode()) : changed to test for Conflict_db_debug::NOT_FOUND
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant NOT_FOUND into Domain
	* include/debuggers/domain.h
	  (public_constants) : added definition
	  (value()) : changed doc comment
	* src/debuggers/domain.cpp
	  (value()) : changed -1 to NOT_FOUND
	* src/debuggers/L2_string_map.cpp
	  (get_prop_by_name()) : changed to test for Domain::NOT_FOUND
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed doc comment
	* include/readers/from_l2.h
	  (read_integer()) : changed doc comment
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant GET_FROM_SOURCE into L2_file_translator
	* include/readers/L2_file_translator.h
	  (public_constants) : added definition
	  (copy_enum(), copy_var(), copy_prop(), copy_clause()) : changed -1
	  to GET_FROM_SOURCE
	* src/readers/L2_file_translator.cpp
	  (copy_enum(), copy_var(), copy_prop(), copy_clause()) : added
	  integrity test on newID and test value against symbolic constant

2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant ANY_MODE into L2rTransition
	* include/readers/transition.h
	  (public_constants) : added definition
	  (print_from()) : changed -1 to ANY_MODE and removed incorrect comment
	  (from_) : changed doc comment
	* src/readers/from_l2.cpp
	  (read_integer()) : changed -1 to L2rTransition::ANY_MODE and changed
	  doc comment
	  (parse_one_transition()) : 
	* src/readers/from_memory.cpp
	  (read_one_transition()) : changed -1 to L2rTransition::ANY_MODE and
	  changed comment
	* src/readers/from_xmpl.cpp
	  (find_enum_member()) : changed -1 to L2rTransition::ANY_MODE
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Introduced symbolic constant NO_INITIAL_VALUE into L2rVariable
	* include/readers/variable.h
	  (public_constants) : added definition
	  (initial_) : changed doc comment
	  (L2Variable(), L2rVariable::toOStream_long(),
	  dbg_L2rVariable::to_OStream_long()) : changed -1 to NO_INITIAL_VALUE
	* src/readers/variable.cpp
	  (setInitial()) : changed -1 to NO_INITIAL_VALUE
	
2002-06-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Split off Clause::take_from_fringe() from Clause::set_in_fringe()
	* include/tms/clause.h
	  (get_fringe_index()) : changed return value from int to unsigned
	  (set_in_fringe()) : changed parameter from int to unsigned, removed
	  if, and changed doc comment
	  (take_from_fringe()) : added
	* include/tms/ltms.h
	  (pop()) : changed set_in_fringe(-1) to take_from_fringe()
	* src/tms/ltms.cpp
	  (LTMS::Fringe::remove(), LTMS::initialize_clause()) :
	  changed set_in_fringe(-1) to take_from_fringe()

2002-06-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Augmented doc comments and renamed formal parameters
	* include/conflict_db/candidate.h
	
2002-06-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>	
	Fixed problem with setting and getting Find Candidates style; PR1606
	* include/api/livingstone.h
	  (get_fc_style(), set_fc_style(), get_fc_style_str(),
	   set_fc_style_str()) : modified to use tracker_
	* include/api/parameters.h
	  (FC_style) : removed
	  (get_find_candidates_style(), set_find_candidates_style(),
	   get_find_candidates_style(FC_style),
	   get_find_candidates_style(const MBA_string&), fc_style
	   typedef String_key_dict_item<FC_style> FC_item) : modified to use
	   Tracker::FC_style rather than L2_parameters::FC_style
	* include/debuggers/tracker_debug.h
	  (enum FC_style, fc_style) : moved to tracker.h
	  (set_fc_style(), get_fc_style()) : moved to class Tracker
	  (find_style(MBA_string), find_style(FC_style), struct FC_dict_item) :
	  prepended Tracker:: scope to enum
	* include/transition/tracker.h
	  (enum FC_style, fc_style, get_fc_style(), set_fc_style()) : moved
	  from class Tracker_debug
	* src/api/livingstone.cpp
	  (diagnose()) : substituted Tracker::FC_style for
	  L2_parameters::FC_style
	  (create_tracker()) : moved setting the FC_style from class
	  Livingstone_debug
	* src/api/parameters.cpp
	  (fc_dict[], get_find_candidates_style(FC_style),
	   get_find_candidates_style(const MBA_string&), L2_parameters()) :
	   substituted Tracker::FC_style for L2_parameters::FC_style
	* src/debuggers/livingstone_debug.cpp
	  (create_debugger()) moved setting the FC_style to Livingstone.cpp
	* src/debuggers/tracker_debug.cpp
	  (Tracker_debug()) : moved initializer to Tracker::Tracker()
	  (fc_dict[], find_style(MBA_string), find_style(FC_style),
	   doFindCandidatesStyle(), doFindCandidates()) : prepended
	   Tracker:: scope to enum
	  (doFindCandidatesStyle(), doFindCandidates()) : modified to use
	   Tracker::get_fc_style() and Tracker::set_fc_style()
	* src/livdll/LivingstoneEngine.h
	  (Java_LivingstoneEngine_getFcStyleJNI()) : added for Will Taylor
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_allocateCBFSDebuggerJNI
	   Java_LivingstoneEngine_allocateCoverDebuggerJNI) : changed type of
	   local variable from Tracker_debug::FC_style to Tracker::FC_style and
	   modified to call Tracker::set_fc_style() instead of
	   Tracker_debug::set_fc_style()
	  (Java_LivingstoneEngine_getFcStyleJNI()) : added (for Will Taylor)
	* src/transition/tracker.cpp
	  (Tracker()) : moved initializer from Tracker_debug::Tracker_debug()

2002-06-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-generated configure from configure.in
	configure (all) : re-generated

2002-06-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed error in src/checkpoint/Makefile.in
	Makefile.in (rule for checkpoint.o) : removed, modifying CPPFLAGS in a
	separate line
	
2002-06-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionalized compilation of checkpoint serialize; PR1604
	* configure.in
	  (argument --[en|dis]able-checkpoint-serialize) : defined
	  (Xerces) : made dependent on either from_xmpl or checkpoint_serialize
	* include/checkpoint/checkpoint.h
	  (include) : added #include <livingstone/l2conf.h>
	  (serialize(), L2_checkpoint(), isValid()) : compile if 
	   ENABLE_CHECKPOINT_SERIALIZE is defined
	* include/livingstone/gnu_conf.h.in
	  (undef) : added #undef ENABLE_CHECKPOINT_SERIALIZE
	* src/checkpoint/checkpoint.cpp
	  (include) : include Xerces header files if
	   ENABLE_CHECKPOINT_SERIALIZE is defined
	  (L2_checkpoint::data::data(Tracker*, const MBA_string&,
	   L2_checkpoint::data::deserialize(),
	   L2_checkpoint::data::serialize(const MBA_string&,
	   L2_checkpoint::data::serialize(ostream&),
	   L2_checkpoint::data::isValid()) : compile declarations if
	   ENABLE_CHECKPOINT is defined
	  (L2_checkpoint::CheckpointHandler) : compile inner class declaration
	   if ENABLE_CHECKPOINT_SERIALIZE is defined
	  (L2_checkpoint::data::data(Tracker*, const MBA_string&),
	   L2_checkpoint::data::deserialize(const MBA_string&),
	   L2_checkpoint::data::serialize(const MBA_string&),
	   L2_checkpoint::data::serializeTimes(),
	   L2_checkpoint::data::serializeAssignment(),
	   L2_checkpoint::data::serializeCommandsAndObservations(),
	   L2_checkpoint::data::serializeStateVariables(),
 	   L2_checkpoint::data::serializeInitialModeAssignments(),
	   L2_checkpoint::data::serializeInitialValue(),
	   L2_checkpoint::data::serializeCandidates(),
	   L2_checkpoint::data::serializeCandidate(),
	   L2_checkpoint::data::serializeFailure(),
	   L2_checkpoint::data::serializeConflicts(),
	   L2_checkpoint::data::serializeConflict(),
	   L2_checkpoint::data::serializeCommandHistory()) : compile
	   definitions if ENABLE_CHECKPOINT_SERIALIZE is defined
	  (L2_checkpoint::serialize(const MBA_string&),
	   L2_checkpoint::serialize(ostream&)
	   L2_checkpoint::L2_checkpoint()) : compile definitions if
	   ENABLE_CHECKPOINT_SERIALIZE is defined

2002-05-22  Will Taylor  <taylor@email.arc.nasa.gov>
	* RELEASE 2.7.2: tagged L2Skunk_2_7_2
	* src/livingstone/version.c : update for 2.7.2

2002-05-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised recovery regression tests in testlist to have arg "--recovery"
	* l2-regress/testlist (led8-on-cbfs-5-1000-1 led178-on-cbfs-5-1000-1) :
	  added "--recovery" to args
	
2002-05-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised recovery.html to reflect changes
	* doc/L2_refman/recovery.html (all): revised
	
2002-05-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Add command-line option to l2test for recovery; PR1599
	* src/readers/l2test/l2test.cpp
	  (OPT_RECOVERY) : added
	  (options) : added an element for OPT_RECOVERY
	  (g_recovery, setRecovery(), isRecovery()) : added
	  (processOptions()) : added case for OPT_RECOVERY
	  (main()) : call setRecovery(false); call LTMS::set_planning() after
	  the Tracker is created if isRecovery() is true

2002-05-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Make L2_checkpoint::data::delete_outdated_constraints() remove deleted
	Clauses from Transitioned::transition_clauses; PR1587
	* include/transition/transitioned.h (remove_transition_clause()) :
	  added
	* src/checkpoint/checkpoint.cpp (delete_outdated_constraints()) :
	  modified to call Transitioned::remove_transition_clause() when a
          Transition Clause is removed from the LTMS
	
2002-05-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed formal parameters rClause to clause, rProposition to
	proposition in LTMS
	* src/tms/ltms.cpp (insert_into_fringe(), remove_from_fringe(),
	  insert_into_unsat(), remove_from_unsat(), add(), remove(),
	  operator<<(), get_clause_support(), initialize_prop(),
	  initialize_clause(), assign()) : renamed formal parameters
	
2002-05-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Trajectory information available to flight code; PR1585
	* include/debuggers/L2_string_map.h 
	  (state_var_trajectories, n_trajectories, old_trajectories,
	  n_old_trajectories, get_trajectory(), new_trajectories_map(),
	  set_trajectory()) : moved to T_system.h
	  (get_variable_name()) : added
	* include/debuggers/L2_string_map_listener.h
	  (truncating_candidate()) : moved to
	   T_system::put_candidate_in_trajectory()
 	* include/debuggers/T_system_debug.h (candidate_details()) : modified
	  to add two parameters
	* include/debuggers/trajectory.h
	  (class L2_string_map declaration) : removed
	  (Parts()) : modified to remove second parameter
	  (get_name(), get_value(), name, value) : removed
	  (get_id(), get_index()) : modified to be const
	* include/transition/T_system.h
	  (class Candidate and class Trajectory declarations) : added
	  (T_system()) : modified to initialize added data members
	  (state_var_trajectories, n_trajectories, old_trajectories,
	   n_old_trajectories, get_trajectory(), new_trajectories_map(),
	   set_trajectory()) : moved from L2_string_map.h
	  (put_candidate_in_trajectory()) : moved from
	   L2_string_map_listener::truncating_candidate()
	* include/transition/tracker_listener.h (truncating_candidate()) :
	  removed
	* src/debuggers/L2_string_map.cpp
	  (L2_string_map()) : removed initialization of data members moved to
	   T_system
	  (~L2_string_map()) : removed deletion of data members moved to
	   T_system
	  (get_trajectory(), start_new_trajectories_map(), set_trajectory()) :
	   moved to T_system.cpp
	  (get_variable_name(Variable&, unsigned)) : added
	* src/debuggers/L2_string_map_listener.cpp
	  (truncating_candidate()) : moved to
	   T_system::put_candidate_in_trajectory()
	  (created_state_variable()) : removed call to
	   L2_string_map_listener::start_new_trajectories_map(); now
	   T_system::create_state_var() makes the analogous call
	* src/debuggers/T_system_debug.cpp
	  (print_start_state_assignment()) : modified (1) to get Trajectory
	  from T_system instead of L2_string_map and (2) to get Variable and
	  value names from L2_string_map instead of Trajectory::Parts
	  (candidate_details()) : modified (1) to not pass an L2_string_map
	  to the Trajectory::Parts constructor; (2) to get Trajectory from
 	  T_system instead of L2_string_map and to (3) return Variable and
	  value names in two additional parameters
	* src/debuggers/trajectory.cpp
	  (Parts::Parts()) : removed L2_string_map& parameter and
	  initializations of removed data members name and value
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverCandidateAssignmentsJNI()) : modified
	  to get Trajectory from T_system.cpp rather than
	  L2_string_map_listener, and to get Trajectory strings from
	  L2_string_map::candidate_details() rather than the Trajectory
	* src/transition/T_system.cpp
	  (~T_system()) : modified to delete added data members; moved from
	   L2_string_map::~L2_string_map())
	  (create_state_var()) : modified to call start_new_trajectories_map();
	   moved from L2_string_map_listener::truncating_candidate()
	  (state_var_trajectories, n_trajectories, old_trajectories,
	   n_old_trajectories, get_trajectory(), start_new_trajectories_map(),
	   set_trajectory()) : moved from L2_string_map.h
	  (put_candidate_in_trajectory()) : moved from
	   L2_string_map_listener::truncating_candidate()
	* src/transition/tracker.cpp (truncate()) : removed call to 
	  record(truncating_candidate() and added call to
	  T_system::put_candidate_in_trajectory()

2002-05-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Separated trajectory-map and state-domain operations in L2_string_map.
	The purpose is to move trajectory-map operations out of L2_string_map.
	* include/debuggers/L2_string_map.h (revise_state_domain()) : added
	* src/debuggers/L2_string_map.cpp
	  (start_new_trajectories_map()) : moved state-domain revision to
	  revise_state_domain()
	  (revise_state_domain()) : added; body moved from
	  start_new_trajectories_map()
	* src/debuggers/L2_string_map_listener.cpp (created_state_variable()) :
	  added call to L2_string_map::revise_state_domain()
	  
	
2002-05-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed local variables in L2_string_map_listener::truncating_candidate
	* src/debuggers/L2_string_map_listener.cpp (truncating_candidate()) :
	  renamed local variables
	
2002-05-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed formal parameters in L2_string_map::add_variable() and
	L2_string_map::remove_variable()
	* src/debuggers/L2_string_map.cpp (add_variable(), remove_variable()) :
	  renamed formal parameter

2002-05-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Tracker::truncate()
	* src/transition/tracker.cpp (truncate()) : Refactored
	
2002-05-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Clause::count_unassigned()
	* include/tms/clause.h (count_unassigned()) : added
	
2002-05-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed bug that crashed on checkpointing unpropagated Commands; PR1576
	* src/checkpoint/checkpoint.cpp (store_command_history()) : Modified to
	  call Assignable::get_current()->get_index() if
	  Variable::get_value_index() returns -1

2002-05-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2UnknownMode.html to include a citation to Sherlock
	* doc/L2_refman/L2UnknownMode.html (all) : added a citation to Sherlock
	
2002-04-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed bug that made Variable::set_time_step() a no-op; PR 1575
	* include/conflict_db/variable.h (set_time_step()) : changed
	  time_step = time_step to this->time_step = time_step

2002-04-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made DIMACSExporter::build-theory() public by moving it
	* include/debuggers/DIMACSExporter.h (build-theory()) : Moved from
	  the private: section to the public: section.
	
2002-04-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_checkpoint::data::store_state_var() to call
	Conflict_db::propagate() before returning; PR 1567
	* src/checkpoint/checkpoint.cpp (store_state_var()): The
	  Assignable::save() and Assignable::restore() actions did not leave
	  Livingstone in its original condition; call Conflict_db::propagate()
	  before returning.

2002-04-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Slist::operator+= to be reflexive; PR 1561
	* include/mba_utils/slist.h (operator+=()) : It looped infititely when
	  the lhs and rhs were the same object, so had it make a copy of its
	  argument.
	  (operator-=()) : It handled reflexivity OK, but I put in an equality
	  test to make it a little faster and to remind the developer that
	  reflexivity is an issue.
	
2002-04-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified template class Slist to cache length; PR 1560
	* include/mba_utils/slist.h
	  (Slist(), Slist(const_reference), Slist(const Slist<Type>&,
 	  const Slist<Type>&) : modified to initialize length
	  (push_front(), pop_front(), insert_before(), operator=(), swap(),
	  push_back(), pop_back(), erase(), remove(), remove_first(),
	  operator+=()) : modified to update length
	  (length) : added
	  (size()) : modified to return length rather than count elements

2002-03-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed recursion from BinaryHeap::heapify(); PR 1559
	* include/opsat/binaryheap.h (heapify()) : rewrote to be iterative

2002-03-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Augmented doc comment in L2_string_map_listener::truncating_candidate()
	* include/debuggers/L2_string_map_listener.h (truncating_candidate()):
	  augmented doc comment
	
2002-03-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Took calls to T_system::npresent_variables() out of loops
	* src/transition/T_system.cpp (minimal_progress(),
	  full_progress_copy_variables(), full_progress_make_assignments(),
	  remove_old_variables() [2 times], summarize_variables(),
	  planner_progress() [5 times]) : took calls to 
          npresent_variables() and present_variables.size() out of loops
	
2002-03-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>	
        Added Livinstone::reconfigure() and its implementation
	* include/api/livingstone.h (class declarations) : added L2_file and
	  T_system
	  (inner class Action) : added
	  (reconfigure()) : added declaration as public
	  (reconfigureProgress(), reconfigureAssign(),
	   reconfigureFindCandidates(), reconfigureResult(),
	   setupInitialModes(), cleanupInitialModes()) : added declaration as
	   private
	* src/api/livingstone.cpp
	  (reconfigure(), (reconfigureProgress(), reconfigureAssign(),
	   reconfigureFindCandidates(), reconfigureResult(),
	   setupInitialModes(), cleanupInitialModes()) : added definitions
	
2002-03-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed preprocessor conditionalization of LTMS::planning
	* include/tms/ltms.h (LTMS(), isPlanning(), setPlanning()) : removed
	  #ifdef ENABLE_RECOVERY so that it can compile without enabling
	
2002-03-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Finished making recovery depend only on runtime tests
	* src/debuggers/L2_string_map.cpp (get_variable_domain()) : removed
	  conditional recovery code
	* src/readers/l2test/l2test.cpp (main()) : insert line to allow
	  recovery
	* src/readers/to_t_system.cpp (createTransitions()) : replaced
	  #ifndef ENABLE_RECOVERY with
	  if (!t_system->get_solver()->isPlanning()) { }
	* src/transition/transitioned.cpp 
	  (create_transition_variable(), set_initial_mode(), instantiate()) :
	  replaced #ifndef ENABLE_RECOVERY ... #endif with
 	  if (!t_system->get_solver()->isPlanning()) { ... }
	
2002-03-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>	
	Added members to help make recovery depend only on runtime tests
	rather than preprocessor tests
	* include/readers/livingstone_reader.h (set_file(), pop_file()) : added
	* include/readers/variable.h (shadowInitial(), restoreInitial()) :
	  added
	* include/tms/ltms.h (LTMS()) : modified to initialize LTMS::planning
	  (isPlanning(), setPlanning(), planning) : added
	* src/readers/variable.cpp (shadowInitial(), restoreInitial()) : added

2002-03-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed two for-loops in curly braces in DIMACSExporter::buildTheory()
	* include/debuggers/DIMACSExporter.h (buildTheory()) : Enclosed two
	  for loops (with the same local loop variable name) in curly braces
	
2002-03-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Generalize DIMACSExporter and stop using it
	* include/debuggers/DIMACSExporter.h (All) Modified to use a
          Conflict_db rather than only an LTMS. Added public methods to export
	  the model in "wff" format for use by the blackbox planner.
	* include/debuggers/ltms_debug.h (doExportTheory()) : removed
	* src/debuggers/ltms_debug.cpp
	  (#include) : no longer include files needed for export-theory
	  (doExportTheory()) : removed
	  (parse_cmd()) : removed else-if-clause for command "export-theory"

2002-02-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed parameter names and comments
	* include/debuggers/L2_string_map.h (all) : modified comments for
	  Doxygen
	* include/debuggers/tajectory.h (All) : modified comments for Doxygen
	  (insert()) : renamed formal parameter
	* src/debuggers/L2_string_map.cpp
	  (get_variable_name(), get_model_variable(), get_variable_values(),
	   get_variable_domain()) : renamed formal parameter
	  (set_trajectory()) : introduced local variables
	* src/debuggers/L2_string_map_listener.cpp (truncating_candidate()) :
	  renamed formal parameter; added an assertion that the old_value can
	  be assigned only once
	* src/transition/tracker.cpp (truncate()) : removed obsolete comment
	
2002-02-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made variables in Tracker::trunctate() of the most specific type
	* src/transition/tracker.cpp (truncate()) : Changed to type State_var
	  the variables holding the return value of T_system::create_state_var
	
2002-02-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Got rid of static variables that use constructors; PR 1547
	* include/api/parameters.h
	  (Search_item, Progress_item, FC_item) : changed from
	  Dict_item<MBA_string, enum> to String_key_dict_item<enum>
	* include/debuggers/tracker_debug.h
	  (FC_dict_item) : modified name from MBA_string to const char * and
	  removed constructor
	* include/mba_utils/array_dict.h
	  (String_key_dict_item,
	   search_dict_by_key(const String_key_dict_item<E>*, E, const char*),
	   search_dict_by_elt(const String_key_dict_item<E>*, E, E) : added
	* include/readers/from_any.h
	  (Type_item) : changed from Dict_item<MBA_string, FileType> to
	  String_key_dict_item<FileType>
	* src/api/parameters.cpp
	  (search_dict, progress_dict, fc_dict) : modified to initialize with
	  curly braces instead of constructor
	  (get_search_style(), get_progress_style(),
	   get_find_candidates_style()) : modified calls to
	   search_dict_by_elt() to pass MBA_string::c_str()
	* src/debuggers/L2_string_map.cpp
	  (str_pound, str_Transition) : changed type from static const
	  MBA_string to static const char*
	  (get_var_or_null()) : modified str_Transition.size() to
	  strlen(str_Transition); changed str_Transition.c_str() to
	  str_Transition
	* src/debuggers/tracker_debug.cpp
	  (fc_dict) : modified to initialize with curly braces instead of
	  constructor
	  (find_style(MBA_string)) : modified to compare using strcmp() and to
	  apply MBA_string::c_str() to name
	* src/readers/from_any.cpp
	  (extension_dict, format_dict) : modified to initialize with curly
	  braces instead of constructor
	  (discover_file_type()) : modified call to search_dict_by_key() to
	  pass MBA_string::c_str()
	* src/readers/from_xmpl.cpp : changed noCommand from MBA_string to
	  const char*
	
2002-02-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added properties id and index to Trajectory::Parts
	* include/debuggers/trajectory.h
	  (Trajectory::Parts::get_id(), Trajectory::Parts::get_index(),
	   Trajectory::Parts::id, Trajectory::Parts::index) : added
	* src/debuggers/trajectory.cpp (Trajectory::Parts::Parts()) : modified
	  to initialize id and index
	
2002-02-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added command "export-theory"
	* include/debuggers/DIMACSExporter.h (All) : added
	* include/debuggers/ltms_debug.h (doExportTheory()) : added
	* include/debuggers/PropositionNameMapExporter.h (All) : added
	* src/debuggers/ltms_debug.cpp
	  (includes) : added #include <fstream.h>
	  (doExportTheory()) : added
	  (parse_cmd()) : added clause to handle "export-theory" command
	
2002-02-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in from_l2.* for Doxygen
	* include/readers/from_l2.h (All) Modified comments for Doxygen
	* src/readers/from_l2.cpp (All) Modified comments for Doxygen
	
2002-02-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Revised base files for recovery regression tests
	* l2-regress/base/cb-recovery.led178-on-cbfs-5-1000-1.out,
	  l2-regress/base/cb-recovery.led8-on-cbfs-5-1000-1.out (all) :
	  Revised because of four reasons for discrepancy:
	  (1) Different numbers of conflicts after. This apparently does not
	      affect correctness.
	  (2) Revision 1.23 of cbfs_tracker_debug.cpp on 06 DEC 2001 changed
	      CBFS_tracker_debug::search_termination() to write additional
	      information.
	  (3) The order of Assumptions in the Candidate differed for the
	      led178-on-cbfs-5-1000-1 case. This apparently does not affect
	      correctness.
	  (4) Revision 1.30 of L2_string_map.cpp on 19 SEP 2001 changed
	      L2_string_map::get_variable_name() to append "Transition" only
	      to Transitions (not all Assumptions), and hence not to Commands.
	
2002-02-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reversed iteration over Variables in T_system::planner_progress()
	* src/transition/T_system.cpp (planner_progress()) : changed
	  present_variables[i] to
	  present_variables[npresent_variables() - i -1] five times. This
	  restores the original order in which Commands were encountered.
	  When encountered in order ID, a regression test scenario runs out of
	  search space before finding a Candidate.

2002-02-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added tests/cb/compile.sh, an example of how to use the JMPL compiler
	* tests/cb/compile.sh (all) : added
	
2002-02-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed two erroneous casts in T_system::planner_progress
	* src/transition/T_system.cpp (planner_progress()) : In two places,
	  I had the wrong variable as the argument to a static_cast. Jim Kurien
	  discovered this.

2002-02-13  Will Taylor  <taylor@email.arc.nasa.gov>
	* RELEASE 2.7.1: tagged L2Skunk_2_7_1
	* src/livingstone/version.c : update for 2.7.1

2002-02-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed background color of L2Parameters.html
	* doc/L2_refman/L2Parameters.html (all) : changed background color
	
2002-02-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Completed L2API.html
	* doc/L2_refman/L2API.html (all) : completed the document
	
2002-02-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified doc comments in livingstone.h
	* include/api/livingstone.h (doc comments) : modified documentation
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed title of Reference Manual in doc comment
	* include/api/livingstone.h (doc comment) : Changed title from
	  "Livingstone Version 2.7" to "Livingstone Reference Manual"
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Completely changed Doxyfile
	* doc/L2_refman/Doxyfile (all) : Made a completely new Doxyfile
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added doc/L2_refman/html/index.html, default Reference Manual home page
	* doc/L2_refman/html/index.html (added)
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed background color of L2Glossary.html
	* doc/L2_refman/L2Glossary.html (all) : changed background color
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added text to L2UnknownMode.html and changed background color
	* doc/L2_refman/L2UnknownMode.html (all) : added paragraph on how to
	  suppress Candidates with unknown failure modes; also changed
	  background color
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added link to L2UnknownMode.html in doc comment; added close quotes
	* include/api/livingstone.h (doc comment) : added link to
	  L2UnknownMode.html and added close quotes in links
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed UnknownMode.html; superseded by L2UnknownMode.html
	* doc/L2_refman/UnknownMode.html (removed)
	
2002-02-12  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added doxygen.html, describing how to build the Reference Manual
	* doc/L2_refman/doxygen.html (added)

2002-02-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed trace statement from to_t_system::initialize_observations()
	* src/readers/to_t_system.cpp (initialize_observations()) : removed
	  trace statement used during development. I should have removed this
	  before checking on the code on 2002-02-07
	
2002-02-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added L2_checkpoint::serialize(ostream&); PR 1540
	* src/checkpoint/checkpoint.cpp
	  (L2_checkpoint::data::serialize(const MBA_string&)) : proceduralized
	   to call L2_checkpoint::data::serialize(ostream&))
	  (L2_checkpoint::data::serialize(ostream&)) : added declaration and
	   definition
	  (L2_checkpoint::serialize(ostream&)) : added

2002-02-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Allow Observations to be assigned in *.ini file; PR 1530
	* include/readers/to_t_system.h (initializeObservations()) : added
	* src/api/livingstone.cpp (initialize_tracker()) : modified to call
	  to_t_system::initializeObservations() before returning true
	* src/readers/to_t_system.cpp (initializeObservations()) : added
	  (createInitialState()) : modified assertion to accept vk_observed as
 	   well as vk_mode; changed assert error message; conditionalized on
	   VarKind
	
2002-02-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added clause for unknownFaultRank with rank of 10 to convert_to_rank();
	PR 1536
	* src/readers/from_xmpl.cpp (::convert_to_rank()) : added clause for
	  unknownFaultRank with rank of 10

2002-02-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Augmented L2_checkpoint::data::{de}serialize() to handle commandHistory
	On 2001-11-07 L2_checkpoint::data::commandHistory was added, but the
	(de)serialize() methods weren't updated.
	* src/checkpoint/checkpoint.cpp
	  (L2_checkpoint::data::serialize()) : added call to
	   serializeCommandHistory()
	  (L2_checkpoint::data::serializeCommandHistory()) : added declaration
 	   and definition
	  (L2_checkpoint::CheckpointHandler::startElement(),
	   L2_checkpoint::CheckpointHandler::endElement()) : added clauses for
	   tags "cp:CommandHistory" and "cp:Command"
	  (L2_checkpoint::CheckpointHandler::handleStartCommand()) : added
	
2002-02-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Initialized local variables in checkpoint Xerces handlers, supressing
	warnings with -O2 compiler flag; PR 1539
	* src/checkpoint/checkpoint.cpp (handleStartAssignment(),
	  handleStartInitialModeAssignments(), handleStartInitialValue(),
	  handleStartFailure()) : initialized local variables to 0
	
2002-01-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Undid changes of 2002-01-25 in from_xmpl and 2002-01-28 in VarKind
	* include/readers/from_xmpl.h (start_constant()) : removed
	* include/readers/varkind.h
	  (enum VarKind) : removed element vk_constant
	  (VarKind_to_string()) : removed clause for vk_constant
	  (operator<<()) : removed clause for vk_constant
	* src/readers/from_xmpl.cpp (start_constant()) : removed
	  (startElement()) : removed clause for localTag == "constant"
	
2002-01-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed typo in L2_string_map::get_variable_domain()
	* src/debuggers/L2_string_map.cpp (get_variable_domain()) : Fixed a
	  typo that emerged only when recovery was enabled.
	
2002-01-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed typo in T_system::planner_progress()
	* src/transition/T_system.cpp (planner_progress()) : Fixed a typo that
	  emerged only when recovery was enabled.
	
2002-01-29  Will Taylor  <taylor@email.arc.nasa.gov>
	* src/livdll/livdll.cpp (minProgressJNI, fullProgressJNI):
	  changed to call "progress", rather than "min-progress" &
	  "full-progress".  Check progress style, and if not
	  consistent, reset it.  Needed to utilize 2002-01-11 change
	  to Tracker::progress().

2002-01-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Undid previous change; L2rVariable::setKind() already did it
	* src/readers/from_xmpl.cpp (start_attribute(), start_cmd(),
	  start_obs(), start_constant()) : Removed guard assertions
	
2002-01-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Assertions forbid Variable::setKind() to switch type
	* src/readers/from_xmpl.cpp (start_attribute(), start_cmd(),
	  start_obs(), start_constant()) : Modified to assert that
	  Variable::kind() does not already have an incompatible value
	
2002-01-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added element "vk_constant" to enum VarKind
	* include/readers/varkind.h
	  (enum VarKind) : added element vk_constant
	  (VarKind_to_string()) : added clause for vk_constant
	  (operator<<()) : added clause for vk_constant
	
2002-01-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modify from_xmpl to parse constant tag as if it were an assign tag
	* include/readers/from_xmpl.h (start_constant()) : added
	* src/readers/from_xmpl.cpp (start_constant()) : added
	  (startElement()) : Added else-if clause for localTag == "constant"
	
2002-01-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made arguments const and added doc comments in Conflict_db_debug
	* include/debuggers/conflict_db_debug.h
	  (assign()) : Made MBA_string arg const MBA_string&
	  (unassign()) : Made MBA_string arg const MBA_string&
	  (print_candidate()) : Made Candidate& arg const Candidate&
	  (print_variable_and_value()) : Made Variable& arg const Variable&
	  (find_variable()) : Made MBA_string arg const MBA_string&
	  (find_prop_index()) : Made Variable& arg const Variable& and
	   MBA_string arg const MBA_string&
	  (find_assignable()) : Made MBA_string arg const MBA_string&
	  (split_assignment()) : Made MBA_string arg const MBA_string&
	  (find_assignment()) : Made MBA_string arg const MBA_string&
	  (various methods) : Renamed formal parameters and added doc comments
	* src/debuggers/conflict_db_debug.cpp
	  (assign()) : Made MBA_string arg const MBA_string&
	  (unassign()) : Made MBA_string arg const MBA_string&
	  (print_candidate()) : Made Candidate& arg const Candidate&
	  (print_variable_and_value()) : Made Variable& arg const Variable&
	  (find_variable()) : Made MBA_string arg const MBA_string&
	  (find_prop_index()) : Made Variable& arg const Variable& and
	   MBA_string arg const MBA_string&
	  (find_assignable()) : Made MBA_string arg const MBA_string&
	  (split_assignment()) : Made MBA_string arg const MBA_string&
	  (find_assignment()) : Made MBA_string arg const MBA_string&
	  (various methods) : Renamed formal parameters

2002-01-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Have Tracker::progress() call Tracker::prune_and_search() first; PR1494
	* src/transition/tracker.cpp (progress()) : Modified to call
	  prune_and_search first
	
2002-01-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Transition *> with Transition::ListOfTransition
	* include/conflict_db/transition.h (ListOfTransition) : Added
	* include/transition/T_system.h (minimal_progress(), full_progress(),
	  full_progress_copy_variables())  : replaced Slist<Transition *> with
	  Transition::ListOfTransition
	* src/transition/T_system.cpp (minimal_progress(), full_progress()) :
	  replaced Slist<Transition *> with Transition::ListOfTransition
	* src/transition/tracker.cpp (full_progress(), minimal_progress()) :
	  replaced Slist<Transition *> with Transition::ListOfTransition
	
2002-01-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Conflict_db::VariablesType with Variable::ListOfVariable
	* include/conflict_db/conflict_db.h (begin_variables(),
	  end_variables(), destroy_variables(), set_new_variable_iterator(),
	  variables, insert_before) : replaced Conflict_db:VariablesType with
	  Variable::ListOfVariable
	  (VariablesType) : removed
	* src/conflict_db/variable.h (ListOfVariable) : Added
	* src/checkpoint/checkpoint.cpp (reset_times(), getTransition()) :
	  replaced Conflict_db:VariablesType with Variable::ListOfVariable
	* src/conflict_db/conflict_db.cpp (destroy_variables(), restore(),
	  save()) : replaced Conflict_db:VariablesType with
	  Variable::ListOfVariable
	* src/debuggers/conflict_db_debug.cpp (print_all_variable_values(),
	  parse_cmd()) : replaced Conflict_db:VariablesType with
	  Variable::ListOfVariable
	* src/debuggers/livingstone_db_debug.cpp (collectAllVariableNames()) :
	  replaced Conflict_db:VariablesType with Variable::ListOfVariable
	* src/debuggers/T_system_debug.cpp (time_variable_iterator()) :
	  replaced Conflict_db:VariablesType with Variable::ListOfVariable
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverAttributeNamesJNI) : replaced
	  Conflict_db:VariablesType with Variable::ListOfVariable
	* src/transition/T_system.cpp (remove_old_variables(),
	  create_state_var()) : replaced Conflict_db:VariablesType with
	  Variable::ListOfVariable
	
2002-01-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist <const Conflict *> with ListOfConflict
	* include/conflict_db/assignment.h (ListOfConflict) : added
	  (get_resolved_conflicts(), get_conflicts(), resolved_conflicts,
	  conflicts) : replaced Slist<const Conflict *> with ListOfConflict
	* include/conflict_db/conflict_db.h
	  (ConflictsType) : removed
	  (begin_conflicts(), end_conflicts(), get_conflicts(),
	  destroy_conflict()) : replaced ConflictsType with ListOfConflict
	* include/conflict_db/conflict_db.h (ListOfConflict) : added
	* include/transition/tracker.h (get_conflicts()) : replaced
	  Slist<const Conflict *> with Conflict::ListOfConflict
	* src/checkpoint/checkpoint.cpp (store_conflicts(),
	  restore_conflicts()) : replaced Conflict_db::ConflictsType with
	  Conflict::ListOfConflict
	* src/conflict_db/conflict_db.cpp (~Conflict_db(),
	  destroy_conflict()) : replaced ConflictsType with ListOfConflict
	* src/cover/cover.cpp (rho_coverage_aux(), rho_coverage())  : replaced
	  Slist<const Conflict *> with Conflict::ListOfConflict
	* src/debuggers/conflict_db_debug.cpp (print_conflicts())  : replaced
	  Slist<const Conflict *> with Conflict::ListOfConflict
	* src/transition/T_system.cpp (remove_old_variables(),
	  summarize_conflicts()) : replaced ConflictsType with ListOfConflict

2002-01-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Candidate *> with ListOfCandidate
	* include/conflict_db/candidate.h (ListOfCandidate) : added
	* include/cover/cover.h (rho_coverage()) : replaced
	  Slist<Candidate *> with Candidate::ListOfCandidate
	* include/opsat/cbfs_agenda.h (initialize_agenda()) : replaced
	  Slist<Candidate *> with Candidate::ListOfCandidate
	* include/opsat/opsat.h (find_consistent_candidates(),
	  initialize_search(), superset_candidate()) : replaced
	  Slist<Candidate *> with Candidate::ListOfCandidate
	* include/transition/tracker.h (iterator, const_iterator,
	  candidates) : replaced Slist<Candidate *> with
	  Candidate::ListOfCandidate
	* src/cover/cover.cpp (set::make_candidates(), rho_coverage()) :
	  replaced Slist<Candidate *> with Candidate::ListOfCandidate
	* src/opsat/opsat.cpp (initialize_search(),
	  find_consistent_candidates(), superset_candidate()) : replaced
	  Slist<Candidate *> with Candidate::ListOfCandidate

2002-01-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Proposition *> with ListOfProposition
	* include/conflict_db/conflict_db.h (create_clause()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* include/conflict_db/variable.h (all_props) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* include/tms/clause.h (Clause()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* include/tms/proposition.h (ListOfProposition) : added
	* include/tms/ptheory.h (create_clause()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* include/transition/transitioned.h (set_antecedents()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* src/conflict_db/assignable.cpp (Assignable()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* src/conflict_db/variable.cpp (Variable(), get_prop()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* src/tms/clause.cpp (Clause()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* src/transition/T_system.cpp (do_create_constraint()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	* src/transition/transtitioned.cpp (set_mode(), set_initial_mode(),
	  add_idle_transitions(), set_antecendants(),
	  Proto_transition::instantiate()) : replaced
	  Slist<Proposition *> with Proposition::ListOfProposition
	
2002-01-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Assignment *> with ListOfAssignment
	* include/conflict_db/assignable.h (iterator, assignments) : replaced
	  Slist<Assignment *> with Assignment::ListOfAssignment
	* include/conflict_db/assignment.h (ListOfAssignment) : added
	  (get_other_values(), set_other_values(), other_values) : replaced
	  Slist<Assignment *> with Assignment::ListOfAssignment
	* include/conflict_db/conflict.h (iterator, const_iterator, Conflict(),
	  resolving_assignments(), assignments) : replaced Slist<Assignment *>
	  with Assignment::ListOfAssignment
	* include/conflict_db/conflict_db.h (add_conflict()) : replaced
	  Slist<Assignment *> with Assignment::ListOfAssignment
	* include/debuggers/T_system_debug.h (find_discrepant_observations(),
	  find_discrepand_commands()) : replaced
	  Slist<Assignment *> with Assignment::ListOfAssignment
	* include/transition/T_system.h (new_conflicts) : replaced
	  Slist<Assignment *> with Assignment::ListOfAssignment
	* src/conflict_db/assignable.cpp (Assignable(), assign()) : replaced
	  Slist<Assignment *> with Assignment::ListOfAssignment
	* src/conflict_db/assignment.cpp (add_conflict(), remove_conflict()) :
	  replaced Slist<Assignment *> with Assignment::ListOfAssignment
	* src/conflict_db/conflict.cpp (Conflict(), resolving_assignments()) :
	  replaced Slist<Assignment *> with Assignment::ListOfAssignment
	* src/conflict_db/conflict_db.cpp (add_conflict(),
	  find_subsuming_conflict(), conflict()) : replaced Slist<Assignment *>
	  with Assignment::ListOfAssignment
	* src/debuggers/T_system_debug.cpp (doDiscrepancy(),
	  find_discrepant_observations(), find_discrepant_commands()) :
	  replaced Slist<Assignment *> with Assignment::ListOfAssignment
	* src/transition/T_system.cpp (summarize_conflicts(),
	  install_new_state()) : replaced Slist<Assignment *>
	  with Assignment::ListOfAssignment

2002-01-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Assumption *> with ListOfAssumption
	* include/assumption/assumption.h (ListOfAssumption) : added
	* include/conflict_db/conflict_db.h (begin_assumptions(),
	  end_assumptions(), assumptions) : replaced Slist<Assumption *> with
	  Assumption::ListOfAssumption
	* include/transition/tracker.h (add_to_candidates()) : replaced
	  Slist<Assumption *> with Assumption::ListOfAssumption
	* src/conflict_db/conflict_db.cpp (destroy_variables(),
	  restore_assumption_defaults()) : replaced Slist<Assumption *> with
	  Assumption::ListOfAssumption
	* src/debuggers/conflict_db_debug.cpp (print_assumptions()) : replaced
	  Slist<Assumption *> with Assumption::ListOfAssumption

2002-01-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Variable *> with VariablesType
	* src/checkpoint/checkpoint.cpp (getTransition()) : replaced
	  Slist<Variable *> with Conflict_db::VariablesType

2002-01-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Assignment::weight_t> with ListOfWeight
	* include/conflict_db/assumption.h (Assumption()) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* include/conflict_db/conflict_db.h (create_state_variable(),
	   create_transition(), create_past_command()) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* include/conflict_db/past_command.h (Past_command()) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* include/conflict_db/state_variable.h (State_variable()) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* include/conflict_db/transition.h (Transition()) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* include/transition/T_system.h (create_present_transitioned()) :
	  create_mode_transition()) : replaced Slist<Assignment::weight_t>
	  with Assignment::ListOfWeight
	* include/transition/transitioned.h (transition_costs) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* src/conflict_db/assumption.cpp (Assumption()) : 
	* src/conflict_db/conflict_db.cpp (create_state_variable(),
	   create_transition(), create_past_command()) : replaced
	  Slist<Assignment::weight_t> with Assignment::ListOfWeight
	* src/transition/T_system.cpp (create_state_var(),
	  create_cmd_assumption_in_past(), create_mode_transition()) :
	  replaced Slist<Assignment::weight_t> with Assignment::ListOfWeight
	
2002-01-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Clause*> with ListOfClause
	* include/tms/clause.h (ListOfClause) : Added
	* include/tms/ltms.h (get_clause_support(), get_proposition_support(),
	  last_conflict(), move_support()) : replaced Slist<Clause *> with
	  ListOfClause
	* include/transition/T_system.h (new_clauses) : replaced
	  Slist<Clause *> with ListOfClause
	* include/transition/transitioned.h (transition_clauses) : replaced
	  Slist<Clause *> with ListOfClause
	* src/conflict_db/conflict_db.cpp (conflict()) : replaced
	  Slist<Clause *> with ListOfClause
	* src/debuggers/ltms_debug.cpp (show_proposition_support()) : replaced
	  Slist<Clause *> with ListOfClause
	* src/debuggers/T_system_debug.cpp (print_transitioned(),
	  find_discrepant_observations(), find_discrepant_commands()) 
	* src/tms/ltms.cpp (get_clause_support(), last_conflict_debug2(),
	  last_conflict(), move_support_debug1(), move_support_debug2(),
	  move_support()) : replaced Slist<Clause *> with ListOfClause
	* src/transition/T_system.cpp (splice(), install_new_state()) :
	  replaced Slist<Clause *> with ListOfClause
	* src/transition/transitioned.cpp (remove_transition_clauses(),
	  remove_destroyed_clauses()) : replaced Slist<Clause *> with
	  ListOfClause

2002-01-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced Slist<Assignable*> with ListOfAssignable
	* include/conflict_db/assignable.h (ListOfAssignable) : Added
	* include/conflict_db/conflict_db.h (begin_assignables,
	  end_assignables(), assignables) : replaced Slist<Assignable*> with
	  ListOfAssignable
	* src/checkpoint/checkpoint.cpp (store_cmds_obs(), restore_comds_obs(),
	  restore_conflicts()) : repalced Slist<Assignable*> with
	  ListOfAssignable
	* src/conflict_db/conflict_db.cpp (destroy_variables()) : replaced
	  Slist<Assignable*> with ListOfAssignable
	* src/debuggers/conflict_db_debug.cpp (print_assignables()) : replaced
	  Slist<Assignable*> with ListOfAssignable
	
2002-01-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cleaned up T_system::full_progress_copy_variables(); PR 1503
	* include/transiton/T_system.h (idle()) : removed
	* src/transition/T_system.cpp
	  (full_progress_copy_variables()) : refactored
	  (idle()) : removed
	
2002-01-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Variable::is_dependent()
	* include/conflict_db/assignable.h (is_dependent()) : added
	* include/conflict_db/dependent.h (is_dependent()) : added
	* include/conflict_db/variable.h (is_dependent()) : added
	
2002-01-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fix exceeded buffer length in from_l2; PR 1508
	* include/livingstone/l2conf.h (MBA_MAX_LINE_SIZE)
	  Added to the comment information about the uses of the constant, and
	  added a \todo tag to part of the comment.
	* include/readers/from_l2.h (line)
	  Defined L2_MODEL_FILE_MAX_LINE_SIZE separately from MBA_MAX_LINE_SIZE
	  because it grows more than the other lines
	  Modified from_l2::line to be of that size
	* src/readers/from_l2.cpp (readline())
	  Modified to use L2_MODEL_FILE_MAX_LINE_SIZE instead of
	  MBA_MAX_LINE_SIZE
	
2002-01-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fix compilation problem with l2conf.h under VxWorks; PR 1513
	* include/livingstone/l2conf.h (comment)
	  As a workaround for an apparent preprocessor bug, change a comment
	  from // to /**/ delimiters and insert a blank line between the
	  comment and the #pragma.
	
2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from pooled.h; finish PR 1511
	* include/mba_utils/pooled.h (#include)
	  (#include <stddef.h>,
	   #include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from tracker_debug.cpp
	* src/debuggers/tracker_debug.cpp (#include)
	  (#include <time.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from to_l2.cpp
	* src/readers/to_l2.cpp (#include)
	  (#include <readers/common.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from to_graphviz.*
	* include/readers/to_graphviz.h (#include)
	  (#include <readers/common.h>) : removed
	* src/readers/to_graphviz.cpp (#include)
	  (#include <readers/variable.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from ltms_debug.*
	* include/debuggers/ltms_debug.h (#include)
	  (#include <mba_utils/MBA_string.h>) : removed
	* src/debuggers/ltms_debug.cpp (#include)
	  (#include <tms/clause.h>,
	   #include <tms/proposition.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from l2test.cpp
	* include/readers/l2test/l2test.cpp
	  (#include <mba_utils/MBA_string.h>,
	   #include <transition/tracker.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_string_map_listener.*
	* include/debuggers/L2_string_map_listener.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	* src/debuggers/L2_string_map_listener.cpp (#include)
	  (#include <readers/variable.h>,
	   #include <transition/T_system.h>) : removed
	
2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cover_tracker_debug.cpp
	* src/cover/cover_tracker_debug.cpp (#include)
	  (#include <time.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict_db_debug.cpp
	* src/debuggers/conflict_db_debug.cpp (#include)
	  (#include <stdio.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict_db.h
	* include/conflict_db/conflict_db.h (#include)
	  (#include <mba_utils/MBA_string.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cbfs_tracker_debug.cpp
	* include/opsat/cbfs_tracker_debug.cpp (#include)
	  (#include <livingstone/L2_assert.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from assumption.h
	* include/conflict_db/assumption.h (#include)
	  (#include <conflict_db/assignment.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from assignable.cpp
	* src/conflict_db/assignable.cpp (#include)
	  (#include <livingstone/L2_assert.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from api_gen.cpp
	* src/liv_utils/api_gen/api_gen.cpp (#include)
	  (#include <transition/T_system.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from xlate_*.*
	* src/readers/xlate_merge_eq_vars.cpp (#include)
	  (#include <readers/proposition.h>) : removed
	* src/readers/xlate_remove_duplicates.cpp (#include)
	  (#include <readers/proposition.h>,
           #include <readers/variable.h>) : removed
	* src/readers/xlate_strip.cpp (#include)
	  (#include <readers/clause.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/proposition.h>,
	   #include <readers/variable.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from readers/variable.*
	* include/readers/variable.h (#include)
	  (#include <readers/common.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict_db/variable.*
	* include/conflict_db/variable.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from transition/transitioned.*
	* include/transition/transitioned.h (#include)
	  (#include <conflict_db/dependent.h>,
	   #include <livingstone/l2conf.h>) : removed
	* src/transition/transitioned.cpp (#include)
	  (#include <transition/T_system.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from readers/transition.h
	* include/readers/transition.h (#include)
	  (#include <readers/common.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/variable.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict_db/transition.h
	* include/conflict_db/transition.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from trajectory.*
	* include/debuggers/trajectory.h (#include)
	  (#include <livingstone/l2conf.h>,
  	   #include <mba_utils/MBA_string.h>,
	   #include <mba_utils/pooled.h>,
	   #include <mba_utils/slist.h>) : removed
	* src/debuggers/trajectory.cpp (#include)
	  (#include <conflict_db/assignment.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from tracker_debug.*
	* include/debuggers/tracker_debug.h (#include)
	  (#include <iostream.h>,
	   #include <mba_utils/MBA_string.h>) : removed	   

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from to_t_system.*
	* src/readers/to_t_system.cpp (#include)
	  (#include <readers/common.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/modes.h>,
	   #include <readers/variable.h>,
	   #include <readers/varkind.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from to_l2.*
	* include/readers/to_l2.h (#include)
	  (#include <readers/common.h>) : removed
	* src/readers/to_l2.cpp (#include)
	  (#include <mba_utils/slist.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/modes.h>,
	   #include <readers/variable.h>,
	   #include <readers/varkind.h>) : removed
	
2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from to_bin.*
	* include/readers/to_bin.h (#include)
	  (#include <stdio.h>) : removed
	* src/readers/to_bin.cpp (#include)
	  (#include <readers/clause.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/modes.h>,
	   #include <readers/proposition.h>,
	   #include <readers/variable.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from theory.h
	* include/tms/theory.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from T_system_debug.*
	* include/debuggers/T_system_debug.h (#include)
	  (#include <iostream.h>
	   #include <livingstone/l2conf.h>
	   #include <transition/T_system.h>) : removed
	
2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from T_system.*
	* include/transition/T_system.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from slist*.h
	* include/mba_utils/slist.h (#include)
	  (#include <iostream.h>,
	   #include <livingstone/l2conf.h>,
	   #include <mba_utils/slist_item.h>) : removed
	* include/mba_utils/slist_item.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	* include/mba_utils/slist_iterator.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from ptheory.*
	* include/tms/ptheory.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>,
	   #include <mba_utils/slist.h>) : removed
	* src/tms/ptheory.cpp (#include)
	  (#include <livingstone/L2_assert.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from tms/proposition.*
	* include/tms/proposition.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from readers/proposition.*
	* include/readers/proposition.h (#include)
	  (#include <readers/common.h>
	   #include <readers/enumeration.h) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from parameters.*
	* include/api/parameters.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from options.*
	* include/readers/options.cpp
	  (#include <iostream.h>) : removed
	
2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from opsat.*
	* include/opsat/opsat.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/MBA_string.h>) : removed
	* src/opsat/opsat.cpp (#include)
	  (#include <conflict_db/candidat.h>) : removed
	
2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from observable.h
	* include/conflict_db/observable.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from MBA_string.h
	* include/mba_utils/MBA_string.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/array_allocator.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from ltms_debug.*
	* include/debuggers/ltms_debug.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>) : removed
	* src/debuggers/ltms_debug.cpp (#include)
	  (#include <iostream.h>,
	   #include <stdio.h>,
	   #include <time.h>,
	   #include <mba_utils/MBA_string.h>,
	   #include <tms/ltms.h>) : removed

2002-01-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from ltms.*
	* include/tms/ltms.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/array.h) : removed
	
2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_string_map.*
	* include/debuggers/L2_string_map.h (#include)
	  (#include <livingstone/l2conf.h>
	   #include <mba_utils/MBA_string.h>
	   #include <mba_utils/pair.h>
	   #include <mba_utils/pooled.h>) : removed
	* src/debuggers/L2_string_map.cpp (#include)
	  (#include <conflict_db/assignment.h>
	   #include <transition/T_system.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_file_writer.h
	* include/readers/L2_file_writer.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from pooled.h
	* include/mba_utils/pooled.h (#include)
	  (#include <stddef.h>
	   #include <livingstone/l2_conf.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_file_reader.h
	* include/readers/L2_file_reader.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from hash_table.h
	* include/mba_utils/hash_table.h (#include)
	  (#include <mba_utils/MBA_string.h>) : removed
	
2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_l2.cpp
	* src/readers/from_l2.cpp (#include)
	  (#include <string.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_bin.cpp
	* src/readers/from_bin.cpp (#include)
	  (#include <stdio.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from domain.cpp
	* src/debuggers/domain.cpp (#include)
	  (#include <readers/modes>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from candidate.h
	* include/conflict_db/candidate.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from assignable.h
	* include/conflict_db/assignable.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/slist.h>) : removed
	
2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_file_translator.*
	* include/readers/L2_file_translator.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>,
	  (#include <mba_utils/slist.h>) : removed
	* src/readers/L2_file_translator.cpp (#include)
	  (#include <readers/clause.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/modes.h>,
	   #include <readers/proposition.h>,
	   #include <readers/variable.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_file.*
	* include/readers/L2_file.h (#include)
	  (#include <readers/common.h>) : removed
	* src/readers/L2_file.cpp (#include)
	  (#include <mba_utils/array_allocator.h>,
	   #include <readers/clause.h>,
	   #include <readers/common.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/modes.h>,
	   #include <readers/proposition.h>,
	   #include <readers/variable.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from L2_assert.*
	* include/livingstone/L2_assert.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	* src/livingstone/L2_assert.cpp (#include)
	  (#include <iostream.h>) : removed
	
2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from hash_table.*
	* include/mba_utils/hash_table.h (#include)
	  (#include <assert.h>
	   #include <livingstone/l2conf.h>,
	   #include <mba_utils/MBA_string.h>) : removed
	* src/mba_utils/hash_table.cpp (#include)
	  (#include <mba_utils/MBA_string.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_xmpl.*
	* include/readers/from_xmpl.h (#include)
	  (#include <mba_utils/MBA_string.h>,
	   #include <mba_utils/slist.h>,
	   #include <readers/common.h>,
	   #include <readers/varkind.h>) : removed
	* src/readers/from_xmpl.cpp (#include)
	  (#include <mba_utils/MBA_string.h>,
	   #include <mba_utils/hash_table.h>,
	   #include <mba_utils/slist.h>,
	   #include <readers/common.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/variable.h>,
	   #include <readers/varkind.h>) : removed
	
2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_memory.*
	* include/readers/from_memory.h (#include)
	  (#include <stdio.h>) : removed
	* src/readers/from_memory.cpp (#include)
	  (#include <readers/clause.h>
	   #include <readers/enumeration.h>,
	   #include <readers/proposition.h>,
	   #include <readers/variable.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_l2.*
	* include/readers/from_l2.h (#include)
	  (#include <stdio.h>
	   #include <readers/common.h>
	   #include <readers/varkind.h>) : removed
	* src/readers/from_l2.cpp (#include)
	  (#include <assert.h>,
	   #include <readers/clause.h>,
	   #include <readers/common.h>,
	   #include <readers/enumeration.h>,
	   #include <readers/proposition.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_bin.*
	* src/readers/from_bin.cpp (#include)
	  (#include <sys/types.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from from_any.*
	* include/readers/from_any.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	
2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from enumeration.*
	* include/readers/enumeration.h (#include)
	  (#include <assert.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from domain.*
	* include/debuggers/domain.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/ppoled.h>) : removed
	* src/debuggers/domain.cpp (#include)
	  (#include <readers/enumeration.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from dependent.*
	* include/conflict_db/dependent.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cover_tracker_debug.*
	* include/cover/cover_tracker_debug.h (#include)
	  (#include <iostream.h>
	   #include <livingstone/l2conf.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cover.*
	* include/cover/cover.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	* src/cover/cover.cpp (#include)
	  (#include <iostream.h>
	   #include <conflict_db/conflict_db.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict_db_debug.*
	* include/debuggers/conflict_db_debug.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/hash_table.h
	   #include <mba_utils/MBA_string.h) : removed
	* src/debuggers/conflict_db_debug.cpp (#include)
	  (#include <time.h>
	   #include <debuggers/ltms_debug.h>) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict_db.*
	* include/conflict_db/conflict_db.h (#include)
	  (#include <conflict_db/assignable.h>,
	   #include <conflict_db/assumption.h>
	   #include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>,
	   #include <mba_utils/slist.h>) : removed
	* include/conflict_db/past_command.h (#include)
	  (#include <conflict_db/assumption.h) : added

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from conflict.*
	* include/conflict_db/conflict.h (#include)
	  (#include <conflict_db/assignment.h>,
	   #include <livingstone/l2conf.h>,
	   #include <mba_utils/slist.h) : removed

2001-12-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from common.h
	* include/readers/common.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/MBA_string.h>
	   #include <mba_utils/pooled.h) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from command.h
	* include/conflict_db/command.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from tms/clause.*
	* include/tms/clause.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>) : removed
	* src/tms/clause.cpp (#include)
	  (#include <mba_utils/array_allocator.h>,
	   #include <mba_utils/MBA_string.h>
	   #include <tms/clause.h>,
	   #include <tms/proposition.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from readers/clause.h
	* include/readers/clause.h (#include)
	  (#include <readers/common.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from checkpoint.h
	* include/checkpoint/checkpoint.h (#include)
	  (#include <livingstone/l2conf.h>,	
	   #include <mba_utils/pooled.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cbfs_tracker_debug.*
	* include/opsat/cbfs_tracker_debug.h (#include)
	  (#include <iostream.h>
	   #include <livingstone/l2conf.h>) : removed
	* src/opsat/cbfs_tracker_debug.cpp (#include)
	  (#include <stdio.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cbfs_agenda.h
	* include/opsat/cbfs_agenda.h (#include)
	  (#include <livingstone/l2conf.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from candidate.*
	* include/conflict_db/candidate.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <conflict_db/assignment.h>) : removed
	* src/conflict_db/candidate.cpp (#include)
	  (#include <livingstone/L2_assert.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from binaryheap.h
	* include/opsat/binaryheap.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from assumption.h
	* include/conflict_db/assumption.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/slist.h) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from assignment.h
	* include/conflict_db/assignment.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from assignable.*
	* include/conflict_db/assignable.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/slist.h>) : removed
	* src/conflict_db/assignable.cpp (#include)
	  (#include <conflict_db/assignment.h>,
	   #include <conflict_db/variable.h>,
	   #include <tms/ltms.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from array.h
	* include/mba_utils/array.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <stddef.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from api_gen.cpp
	* scr/liv_utils/api_gen/api_gen.cpp (#include)
	  (#include <iostream.h>,
	   #include <mba_utils/MBA_string.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from agenda_types.h
	* include/cbfs/agenda_types.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cover_tracker.h
	* include/cover/cover_tracker.h (#include)
	  (#include <livingstone/l2conf.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from cbfs_tracker.*
	* include/opsat/cbfs_tracker.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/slist.h>) : removed
	* src/opsat/cbfs_tracker.cpp (#include)
	  (#include <conflict_db/candidate.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from tracker.h
	* include/transition/tracker.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/pooled.h) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from livingstone_debug.*
	* include/debuggers/livingstone_debug.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/MBA_string.h>) : removed
	* src/debuggers/livingstone_debug.cpp (#include)
	  (#include <debuggers/tracker_debug.h>,
	   #include <iostream.h>) : removed

2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from livingstone_reader.*
	* include/readers/livingstone_reader.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/MBA_string.h>) : removed
	* src/readers/livingstone_reader.cpp (#include)
	  (#include <readers/L2_file_reader>,
	   #include <readers/L2_file_translator>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #includes from livingstone.*
	* include/api/livingstone.h (#include)
	  (#include <livingstone/l2conf.h>,
	   #include <mba_utils/mba_string.h>) : removed
	* src/api/livingstone.cpp (#include)
	  (#include <mba_utils/mba_string.h>,
	   #include <readers/from_any.h>,
	   #include <transition/tracker.h>) : removed
	
2001-12-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in variable.h for Doxygen; finish PR 1512
	* include/conflict_db/variable.h (All) : Modified comments for
	  Doxygen
	
2001-12-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in ltms.h for Doxygen
	* include/tms/ltms.h (All) : Modified comments for
	  Doxygen
	
2001-12-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict_db.h for Doxygen
	* include/conflict_db/conflict_db.h (All) : Modified comments for
	  Doxygen
	
2001-12-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in T_system.h for Doxygen
	*include/transition/T_system.h (All) : Modified comments for Doxygen
	
2001-12-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in tracker.h for Doxygen
	*include/transition/tracker.h (All) : Modified comments for Doxygen
	
2001-12-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in livingstone.h for Doxygen
	* include/api/livingstone.h (All) : Modified comments for Doxygen
	
2001-12-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed scope resolution from declaration of
	LTMS_debug::ClauseStringChecker
	* include/debuggers/ltms_debug.h (class ClauseStringChecker) : Changed
	  "public LTMS_debug::ClauseCallbackObject" to
	  "public ClauseCallbackObject"
	
2001-12-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed Array::do_free() to not return a value.
	* include/mba_utils/array.h (do_free()) : I overzealously replaced
	  an if with a conditional expression that returned a value. This goes
	  back to the if statement.
	
2001-12-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed scope resolution from declaration of Conflict_db::accept_all
	* include/conflict_db/conflict_db.h (struct accept_all) : Changed
	  "public Conflict_db::Variable_acceptor" to "public Variable_acceptor"
	
2001-12-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker_debug::create_checkpoint() to return whether the
	command succeeded and to balk if history is 0
	* include/debuggers/tracker_debug.h (create_checkpoint()) : Modified
	  to  return success flag
	* include/transition/T_system.h (get_max_history_length()) : Added
	* src/debuggers/tracker_debug.cpp (create_checkpoint()) : Modified to
	  return success flag and to refuse (with message to cerr) if
	  history == 0
	
2001-12-20  Will Taylor  <taylor@email.arc.nasa.gov>
	* src/livdll/livdll.cpp (restoreCheckpointJNI) :
	  now returns false if no checkpoints or invalid chkpt name
	* src/livdll/LivingstoneEngine.h (restoreCheckpointJNI) :
	  return type changed from void to jboolean

2001-12-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker_debug::restore_checkpoint() to return whether the
	command succeeded; PR 1507.
	* include/debuggers/tracker_debug.h (restore_checkpoint()) : Modified
	  to return success flag
	* scr/debuggers/tracker_debug.cpp (restore_checkpoint()) : Modified
	  to return success flag
	
2001-12-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker_debug::create_checkpoint() to balk if progress style
	is min or history is not saturated; PR 1506 and PR 1449
	* src/debuggers/tracker_debug.cpp (create_checkpoint()) : Modified to
	  refuse (with message to cerr) if full progress or horizon == 0.
	
2001-12-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in L2_assert.h for Doxygen
	* include/livingstone/L2_assert.h (All) : Modified comments for Doxygen
	
2001-12-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enabled changes to L2_checkpoint to address PR 1463
	* src/checkpoint/checkpoint.cpp 
	  (restore()) : Enabled delete_outdated_constraints() and 
	  restore_command_constraints() and changed order of calls
	
2001-12-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Got checkpointing to restore commanded Transition constraints
	* include/transition/transitioned.h
	  (add_commanded_transitions()) : Added
	* src/checkpoint/checkpoint.cpp
	  (restore_indexed_clauses()) : Modified to call 
	  pTranstioned::add_commanded_transitions()
	* src/transition/transitioned.cpp
	  (add_commanded_transitions()) : Added
	
2001-12-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Got checkpointing to restore idle Transition constraints
	* include/transition/transitioned.h
	  (add_idle_transitions(unsigned, Transition*) : Added
	* src/checkpoint/checkpoint.cpp
	  (L2_checkpoint::data::getTransition()) : Added
	  (L2_checkpoint::data::restore_unindexed_clauses()) : Modified to 
	   call Transitioned::add_idle_transitions(); removed output
	  (L2_checkpoint::data::restore_autonomous_clauses()) : Removed
	* src/transition/transitioned.cpp
	  (add_idle_transitions(unsigned, Transition*) : Added
	
2001-12-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refined delete_outdated_constraints() and no longer restore autonomous
	clauses
	* src/checkpoint/checkpoint.cpp
	  (isTransitionClause()) : Added
	  (delete_outdated_constraints()) : Test isTransitionClause() instead
	   of Clause::is_volatile()
	  (restore_command_constraints()) : Removed call to
	   restore_autonomous_clauses(). Cast pVariable to Transitioned* only
	   at the NOW time step.
	
2001-12-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added stubs to delete and restore command constraints
	* src/checkpoint/checkpoint.cpp
	  (restore()) : added commented-out lines to delete and restore
	  constraints
	  (delete_outdated_constraints()) : delete only if volatile
	  (restore_unindexed_clauses(), restore_indexed_clauses(), 
	   restore_autonomous_clauses(), restore_command_constraints()) : added
	
2001-12-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in agenda_types.cpp for Doxygen
	* src/opsat/agenda_types.cpp (All) : Modified comments for Doxygen
	
2001-12-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in agenda_types.h for Doxygen
	* include/opsat/agenda_types.h (All) : Modified comments for Doxygen
	
2001-12-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in livingstone.h for Doxygen
	* include/api/livingstone.h (All) : Modified comments for Doxygen
	
2001-12-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in pair.h for Doxygen
	* include/mba_utils/pair.h (All) : Modified comments for Doxygen
	
2001-12-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in options.h for Doxygen
	* include/readers/options.h (All) : Modified comments for Doxygen
	
2001-12-06  Will Taylor  <taylor@email.arc.nasa.gov>
	Added assignJNI since it is referenced in
	skunkworks/livingstone/data/L2Publisher.java.
	assignJNI & addAssumptionJNI are used in Livingstone
	PathFinder.
	Removed unused methods.
	* src/livdll/livdll.cpp (assignJNI, addAssumptionJNI ) : added;
	  (conflictJNI, cpropsJNI, printPropositionsJNI, 
          getCandidateAssignmentCountJNI, 
          getCandidateWeightJNI, transitionsJNI, conflictJNI, 
          explainJNI, & explainvJNI) : removed
	* src/livdll/LivingstoneEngine.h (assignJNI, addAssumptionJNI ) : added;
	  (conflictJNI, cpropsJNI, printPropositionsJNI, 
          getCandidateAssignmentCountJNI, 
          getCandidateWeightJNI, transitionsJNI, conflictJNI, 
          explainJNI, & explainvJNI) : removed

2001-12-06  Will Taylor  <taylor@email.arc.nasa.gov>
	* src/opsat/cbfs_tracker_debug.cpp : Appended "(searched nnn)" 
	  to the CBFS search termination messages.
	* l2-regress/base/ (cb-cbfs.5-1000-0.out, cb-cbfs.5-1000-2.out,
          cb-cbfs.min-5-1000-0.out, cb-cbfs.min-5-1000-2.out,
	  cb-stripped.cbfs-5-1000-2.out, misc.AngleSensor.out,
	  x37.nominal-full-3.out, x37.nominal-min-3.out,
	  x37.rvdtfail-full-1.out, x37.rvdtfail-min-0.out, &
          x37.rvdtfail-min-1.out) : Updated "checkin" regression test 
	  base output for change in search termination message.
	
2001-12-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in L2_file_translator.h, xlate_merge_eq_vars.h,
	xlate_remove_duplicates.h, xlate_sort_props.h and xlate_strip.h
	* include/readers/L2_file_translator.h  (All) : Modified comments for
	  Doxygen
	* include/readers/xlate_merge_eq_vars.h  (All) : Modified comments for
	  Doxygen
	* include/readers/xlate_remove_duplicates.h  (All) : Modified comments
	  for Doxygen
	* include/readers/xlate_sort_props.h  (All) : Modified comments for
	  Doxygen
	* include/readers/xlate_strip.h  (All) : Modified comments for Doxygen
	
2001-12-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in clause.h, enumeration.h, modes.h, proposition.h,
	transition.h, variable.h, varkind.h for Doxygen
	* include/readers/clause.h (All) Modified comments for Doxygen
	* include/readers/enumeration.h (All) Modified comments for Doxygen
	* include/readers/modes.h (All) Modified comments for Doxygen
	* include/readers/proposition.h (All) Modified comments for Doxygen
	* include/readers/transition.h (All) Modified comments for Doxygen
	* include/readers/variable.h (All) Modified comments for Doxygen
	* include/readers/varkind.h (All) Modified comments for Doxygen
	
2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict_db_listener.h, ptheory_listener.h,
	T_system_listener.h, to_t_system_listener.h and tracker_listener.h for
	Doxygen
	* include/conflict_db/conflict_db_listener.h (All) : Modified comments
	  for Doxygen
	* include/tms/ptheory_listener.h (All) : Modified comments for Doxygen
	* include/readers/to_t_system_listener.h (All) : Modified comments for
	  Doxygen
	* include/transition/T_system_listener.h (All) : Modified comments for
	  Doxygen
	* include/transition/tracker_listener.h (All) : Modified comments for
	  Doxygen
	
2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in L2_string_map_listener.h for Doxygen
	* include/debuggers/L2_string_map_listener.h (All) Modified comments
	  for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in L2_string_map.h for Doxygen
	* include/debuggers/L2_string_map.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in agenda_types.h for Doxygen
	* include/opsat/agenda_types.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in assignable.h for Doxygen
	* include/conflict_db/assignable.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in cover_tracker_debug.h for Doxygen
	* include/cover/cover_tracker_debug.h (All) Modified comments for
	  Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in tracker_debug.h for Doxygen
	* include/debuggers/tracker_debug.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in livingstone.h for Doxygen
	* include/api/livingstone.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in L2_file.h for Doxygen
	* include/readers/L2_file.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in parameters.h for Doxygen
	* include/api/parameters.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified from_l2::from_l2() to use initializer list
	* include/readers/from_l2.h (from_l2::from_l2()) : Modified to use
	  initializer list
	
2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in from_memory.h for Doxygen
	* include/readers/from_memory.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in from_l2.h for Doxygen
	* include/readers/from_l2.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in trajectory.h for Doxygen
	* include/debuggers/trajectory.h (All) Modified comments for Doxygen

2001-12-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in T_system_debug.h for Doxygen
	* include/debuggers/T_system_debug.h (All) Modified comments for
	  Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict_db.h, livingstone.h T_system.h for
	Doxygen
	* include/api/livingstone.h (All) : Modified comments for Doxygen
	* include/conflict_db/conflict_db.h (All) : Modified comments for
	  Doxygen
	* include/transition/T_system.h (All) : Modified comments for Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in L2_file_reader.h for Doxygen
	* include/readers/L2_file_reader.h (All) : Modified comments for
	  Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in from_bin.h for Doxygen
	* include/readers/from_bin.h (All) : Modified comments for Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in array_allocator.cpp for Doxygen
	* src/mba_utils/array_allocator.cpp (All) : Modified comments for
	  Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in from_any.h for Doxygen
	* include/readers/from_any.h (All) : Modified comments for Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in livingstone_reader.h for Doxygen
	* include/readers/livingstone_reader.h (All) : Modified comments for
	  Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parameter const in LTMS_debug::pretty_print_clause(Clause&)
	* include/debuggers/ltms_debug.h (pretty_print_clause(),
	  pretty_print_clause_no_negative(), pretty_print_clause_no_positive(),
	  pretty_print_clause_positive_and_negative()) : Made parameter const
	* src/debuggers/ltms_debug.cpp (pretty_print_clause(),
	  pretty_print_clause_no_negative(), pretty_print_clause_no_positive(),
	  pretty_print_clause_positive_and_negative()) : Made parameter const
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in ltms_debug.h for Doxygen
	* include/debuggers/ltms_debug.h (All) : Modified comments for Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in tracker_debug.h for Doxygen
	* include/debuggers/tracker_debug.h (All) : Modified comments for
	  Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in ltms.h for Doxygen
	* include/tms/ltms.h (All) : Modified comments for Doxygen
	
2001-11-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in ptheory.h for Doxygen
	* include/tms/ptheory.h (All) : Modified comments for Doxygen
	
2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in theory.h for Doxygen
	* include/tms/theory.h (All) : Modified comments for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unused Proposition::depth and all its support
	* include/tms/proposition.h
	  (typedef unsigned short propagation_depth) : Removed
	  (Proposition()) : Removed depth from the initializer list
	  (depth, get_depth(), set_depth()) : Removed
	
2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in proposition.h for Doxygen
	* include/tms/proposition.h (All) : Modified comments for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in observable.h for Doxygen
	* include/conflict_db/observable.h (All) : Modified comments for
	  Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in tracker.h for Doxygen
	* include/transition/tracker.h (All) : Modified comments for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in livingstone_debug.h for Doxygen
	* include/debuggers/livingstone_debug.h (All) : Modified comments for
	  Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in transition.h for Doxygen
	* include/conflict_db/transition.h (All) : Modified comments for
	  Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in transitioned.h for Doxygen
	* include/transition/transitioned.h (All) : Modified comments for
	  Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in domain.h for Doxygen
	* include/debuggers/domain.h (All) : Modified comments for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in variable.h for Doxygen
	* include/conflict_db/variable.h (All) : Modified comments for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in dependent.h for Doxygen
	* include/conflict_db/dependent.h (All) : Modified comments for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in cover_tracker_debug.h for Doxygen
	* include/cover/cover_tracker_debug.h (All) : Modified comments for
	  Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in cover_tracker.h for Doxygen
	* include/cover/cover_tracker.h (All) : Modified comments
	  for Doxygen

2001-11-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict_db_listener.h for Doxygen
	* include/conflict_db/conflict_db_listener.h (All) : Modified comments
	  for Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict_db_debug.h for Doxygen
	* include/debuggers/conflict_db_debug.h (All) : Modified comments for
	  Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Conflict_db::Variable_acceptor::accept() to be const
	* include/conflict_db/conflict_db.h (Variable_acceptor::accept(),
	  accept_all::accept()) : Made const
	* src/checkpoint/checkpoint.cpp (accept_state_var::accept()) : Made
	  const
	* src/transition/T_system.cpp (Old_variable_acceptor::accept()) : Made
	  const
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict_db.h for Doxygen
	* include/conflict_db/conflict_db.h (All) : Modified comments for
	  Doxygen
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved constructor from conflict_db.cpp to conflict_db.h for inlining
	* include/conflict_db/conflict_db.h (Conflict_db()) : moved from
	  conflict_db.cpp
	* src/conflict_db/conflict_db.cpp (Conflict_db()) : moved to
	  conflict_db.h

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unused friend declaration in conflict.h
	* include/conflict_db/conflict.h (friend Assignment::add_conflict()) :
	  Removed
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in conflict.h for Doxygen
	* include/conflict_db/conflict.h (All) : Modified comments for Doxygen
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in command.h for Doxygen
	* include/conflict_db/command.h (All) : Modified comments for Doxygen
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved ClauseStringChecker from ltms_debug.cpp to ltms_debug.h, as a
	private inner class of LTMS_debug
	* include/debuggers/ltms_debug.h (ClauseStringChecker) : Moved
	  declaration from ltms_debug.cpp
	* src/debuggers/ltms_debug.cpp (ClauseStringChecker) : Moved
	  declaration (but not definition of operator()) to ltms_debug.h
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in ltms_debug.cpp for Doxygen
	* src/debuggers/ltms_debug.cpp (All) : Modified comments on class
	  ClauseStringChecker for Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in clause.h for Doxygen
	* src/tms/clause.h (All) : Modified comments for Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in array_allocator.cpp for Doxygen
	* src/mba_utils/array_allocator.cpp (All) : Modified comments on
	  struct chunk_descriptor for Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unused data member SummingCBFSElement::next
	* include/opsat/agenda_types.h (SummingCBFSElement::next) : removed
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in agenda_types.h for Doxygen
	* include/opsat/agenda_types.h (All) : Modified comments for
	  Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in cbfs_agenda.h for Doxygen
	* include/opsat/cbfs_agenda.h (All) : Modified comments for
	  Doxygen

2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in cbsf_tracker_debug.h for Doxygen
	* include/opsat/cbfs_tracker_debug.h (All) : Modified comments for
	  Doxygen
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in cbfs_tracker.h for Doxygen
	* include/opsat/cbfs_tracker.h (All) : Modified comments for Doxygen
	
2001-11-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in livingstone.h for Doxygen
	* include/api/livingstone.h (All) : Modified comments for Doxygen
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in candidate.h for Doxygen
	* include/conflict_db/candidate.h (All) : Modified comments for
	  Doxygen
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified BinaryHeap::BinaryHeap() to use initializer list
	* include/opsat/binaryheap.h (BinaryHeap()) : Modified to use
	  initializer list
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed declaration of unused member function BinaryHeap::height()
	* include/opsat/binaryheap.h (height()) : Removed
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed definition of unused enum constants
	* include/conflict_db/assumption.h (enum constants) : Removed
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Array() and Array(unsigned) to use initializer list
	* include/mba_utils/array.h (Array(), Array(unsigned)) : Modified to
	  use initializer list
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted, refactored and modified comments to array.h
	* include/mba_utils/array.h (All) : Reformatted, refactored and
	  modified comments
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved accept_all from conflict_db.cpp to conflict_db.h,	as a private
	inner class of Conflict_db
	* include/conflict_db/conflict_db.h (accept_all) : Moved to
	  conflict_db.cpp
	* src/conflict_db/conflict_db.h (accept_all) : Moved from
	  conflict_db.h
	
2001-11-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in assignable.h for Doxygen
	* include/conflict_db/assignable.h (All) : Modified comments for
	  Doxygen
	
2001-11-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added argument checking to convert_to_rank(double) and
	convert_to_rank(const MBA_string&); PR 1491
	* src/readers/from_xmpl.cpp
	  (convert_to_rank(double)) : Added assertion that argument > 0
	  (convert_to_rank(const MBA_string&) : Added assertion that either
	  atof() returns nonzero or errno after atof() is not EINVAL
	
2001-11-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Candidate references const
	* include/conflict_db/candidate.h (get_assignment()) : Made const
	* include/debuggers/L2_string_map_listener.h (truncating_candidate()) :
	  Modified parameter to be const Candidate&
	* include/transition/tracker_listener.h (truncating_candidate()) :
	  Modified parameter to be const Candidate&
	* src/debuggers/L2_string_map_listener.cpp (truncating_candidate()) :
	  Modified parameter to be const Candidate&
	
2001-11-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted conflict_db.h and added comments
	* include/conflict_db/conflict_db.h (All) : Reformated and added
	  comments
	
2001-11-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Conflict reference const
	* include/conflict_db/assignable.h : Made friend declaration const
	* include/conflict_db/assignment.h (add_conflict()) : Made parameter
	  const
	* include/conflict_db/conflict.h : Made friend declaration const
	* src/conflict_db/assignment.cpp (add_conflict()) : Made parameter
	  const
	
2001-11-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Assignment pointer const
	* include/conflict_db/assignable.h (is_current()) : Made parameter
	  const
	
2001-11-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Conflict pointers const
	* include/conflict_db/assignment.h
	  (remove_conflict()) : Modified parameter to be const
	  (get_resolved_conflicts()) : Modified to return
	  Slist<const Conflict *>
	  (is_in_conflict(), resolves_conflict()) : Modified parameter to be
	  const
	  (resolves_conflict()) : Modified parameter to be const Conflict *
	  (resolved_conflicts) : Modified to be Slist<const Conflict *>
	* include/conflict_db/conflict.h (resolving_assignments()) : Modified
	  to be const
	* include/conflict_db/conflict_db.h
	  (conflict(), add_conflict()) : Modified to return const Conflict *
	  (Conflicts_type) : Modified to be Slist<const Conflict *>
	  (find_subsuming_conflict()) : Modified to return const Conflict * and
	  to be const
	* include/debuggers/conflict_db_debug.h (print_conflict(Conflict&),
	  print_conflict(ostream&, Conflict&) : Modified paremter to be const
	  Conflict&
	* include/opsat/cbfs_agenda.h (expand_element()) : Modified parameter
	  to be const
	  (get_new_items()) : modified parameter to be const Conflict *
	* include/tracker/tracker.h (get_conflicts()) : Modified to return
	  Slist<const Conflict *>
	* src/checkpoint/checkpoint.cpp (store_conflicts()) : Made local
	  variable const
	* src/conflict_db/assignment.cpp (remove_conflict()) : Modified
	  parameter to be const
	* src/conflict_db/conflict.cpp (resolving_assignments()) : Modified to
	  be const
	* src/conflict_db/conflict_db.cpp (~Conflict_db(), destroy_conflict())
	  : Modified local
	  variable to be const
	  (add_conflict(), find_subsuming_conflict()) : Modified to return
	  const Conflict *; modified local variables to be const
	  (conflict()) : Modified to return const Conflict *
	* src/cover/cover.cpp (rho_coverage_aux()) : Modified parameter to be
	  Slist<const Conflict *>&
	  (rho_coverage()) : Modified local variable to be
	  Slist<const Conflict *>
	* src/debuggers/conflict_db_debug.cpp (print_conflicts(),
	  print_conflict(void)) : Modified local variables to be const
	  print_conflict(ostream&, Conflict&) : Modified parameter to be
	  const Conflict&
	* src/opsat/opsat.cpp (next_consistent_candidate()) : Modified local
	  variable to be const
	* src/transition/T_system.cpp (conflict_is_old()
	  conflict_has_old_active_assignments()) : Modified parameter to be
	  const
	  (remove_old_variables(), summarize_conflicts()) : Modified local
	  variable to be const
	* src/transition/tracker.cpp (prune_inconsistent_candidates()) : Made
	  local variable const
	
2001-11-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Assignment pointers const
	* include/conflict_db/assignable.h (get_current()) : Modified to return
	  const Assignment *
	  (assign(Assignable&)) : Modified parameter to be const Assignable&
	  (assign(Assignment&)) : Modified parameter to be const Assignment&
	  (assign(Assignment*)) : Modified parameter to be const Assignment*
	  (current, saved_assignment) : Modified to be const Assignment*
	* include/conflict_db/assignment.h (assign()) : Modified to be const
	* include/conflict_db/candidate.h (get_conflict_assignments()) :
	  Modified parameter to be Slist<const Assignment *>&
	  (get_weight(), sum_assignment_weights()) : Modified parameter to be
	  const Array<const Assignment *>
	  (get_assignment()) : Modified to return const Assignment *
	  (assignments) : Modified to be Array<const Assignment *>
	* include/debuggers/L2_string_map.h (set_trajectory()) : Modified
	  parameter to be Slist<const Assignment *>&
	* include/debuggers/trajectory.h (prepend()) : Made Parts reference
	  const
	* src/api/livingstone.cpp (get_failure()) : Made Assignment pointer
	  const
	* src/checkpoint/checkpoint.cpp (store_candidates()) : Made
	  Assignment pointer const
	* src/conflict_db/assignable.cpp
	  (assign(Assignment *)) : Modified parameter to be const Assignment *
	  (assign(Assignable &)) : Modified parameter to be const Assignable &
	* src/conflict_db/assignment.cpp (assign()) : made const
	* src/conflict_db/candidate.cpp (Candidate(), ~Candidate(), assign(),
	  remove(), truncate(), smallest_unresolved_conflict(), equivalent(),
	  add_consistently(), superset_of(), consistent_assignment(),
	  contains(), get_weight()) : Made iterator const
	  get_conflict_assignments() : Modified parameter to be
	  Slist<const Assignment *>&
	  sum_assignment_weights()) : Modified parameter to be const
	  Array<const Assignment *>&
	* src/debuggers/L2_string_map.cpp (set_trajectory()) : Modified
	  parameter to be Slist<const Assignment *>&
	* src/debuggers/L2_string_map_listener.cpp (truncating_candidate()) :
	  Modified local variable to be Slist<const Assignment *>
	* src/debuggers/T_system_debug.cpp (candidate_details()) : Modified
	  local variable to be const Assignment *
	* src/debuggers/trajectory.cpp (Parts()) : Modified parameter to be
	  const Assignment *
	  
2001-11-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Assignment::conflicts to be Slist<const Conflict *>
	* include/conflict_db/candidate.h (smallest_unresolved_conflict()) :
	  Modified to return const Conflict *
	  (conflict_not_resolved()) : Modified parameter to be const Conflict *
	* include/conflict_db/assignment.h (get_conflicts()) : Modified to
	  return const Slist<const Conflict *>
	  (conflicts) : Modified to be Slist<const Conflict *>
	* src/conflict_db/candidate.cpp (smallest_unresolved_conflict()) :
	  Modified to return const Conflict *
	  (conflict_not_resolved()) : Modified parameter to be const Conflict *
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made argument const in Assignment::is_assumption(Clause&)
	* include/conflict_db/assignment.h (is_assumption(Clause&)) : made
	  argument const
	* src/conflict_db/assignment.cpp (is_assumption(Clause&)) : made
	  argument const
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Trajectory::Parts::Parts() to use initializer list
	* src/debuggers/trajectory.cpp (Parts()) : Modified to use initializer
	  list
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Trajectory::prepend()
	* include/debuggers/trajectory.h (prepend()) : Normalized iterator loop
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Domain::Domain(const L2rMode *)
	* src/debuggers/domain.cpp (Domain(const *L2rMode) : Normalized
	  iterator loop
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made supplied names override default names in Domain::Domain(const
	*L2rEnumeration)
	* src/debuggers/domain.cpp (Domain::Domain(const *L2rEnumeration) :
	  Modified so that the supplied names override the default names
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Shrunk local array in Domain::Domain(const MBA_string&,	unsigned)
	* src/debuggers/domain.cpp (Domain::Domain(const MBA_string&,
	  unsigned) : Shrunk local array from 256 to 8, which is plenty large
	  enough to hold the variable name
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Domain::Domain() to use initializer list
	* include/debuggers/domain.h (All) : commented
	* src/debuggers/domain.cpp (Domain::Domain()) : modified to use
	  initializer list
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rewrote loops to avoid continue
	* src/transition/T_system.cpp (idle(), minimal_progress(),
	  full_progress_copy_variables(), full_progress_make_assignments(),
	  remove_old_variables(), summarize_variables(), planner_progress()) :
	  Rewrote loops to avoid continue
	* src/transition/tracker.cpp (map_over_observations()) : Rewrote loops
	  to avoid continue
	
2001-11-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::full_progress(), T_system::minimal_progress() and
	T_system::idle() so that new_vars is Slist<Transition *>
	* include/transition/T_system.h (minimal_progress(), full_progress(),
	  idle(), full_progress_copy_vars()) : changed new_vars to
	  Slist<Transition *>
	* src/transition/T_system.cpp (minimal_progress(), full_progress(),
	  idle(), full_progress_copy_vars()) : changed new_vars to
	  Slist<Transition *> 
	* src/transition/tracker.cpp (full_progress(), minimal_progress()) :
	  changed local variable new_vars to Slist<Transition *>
	
2001-11-18  Will Taylor  <taylor@email.arc.nasa.gov>
	* RELEASE 2.7: tagged L2Skunk_2_7
	* src/livingstone/version.c : update for 2.7

2001-11-18  Will Taylor  <taylor@email.arc.nasa.gov>
	* Makefile.in, top.mk, & bot.mk : moved disclaimers pointer
	  from top of file to after cvs ident -- to fix Makefile
	  generation bug where xerces.mk was not included.

2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-ran autoconf
	* configure : regenerated. There was an update of autoconf.
	
2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Prepended reference to mba/disclaimers-and-notices-L2.txt in html files
	under mba/cpp/doc

2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Prepended reference to mba/disclaimers-and-notices-L2.txt in
	configure.in
	
2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Prepended reference to mba/disclaimers-and-notices-L2.txt in bot.mk
	noxerces.mk top.mk, xerces.mk
	
2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Prepended reference to mba/disclaimers-and-notices-L2.txt in BUILD,
	DEVELOPERS, INSTALL and README
	
2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Prepended reference to mba/disclaimers-and-notices-L2.txt in all 
	Makefile.in files
	
2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Prepended reference to mba/disclaimers-and-notices-L2.txt in all *.cpp
	and *.h files except mba/cpp/include/jdk1.3

2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added mba/disclaimers-and-notices-L2.txt
	* mba/disclaimers-and-notices-L2.txt : added
	
2001-11-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed mba/Copyright.txt
	* mba/Copyright.txt : removed

2001-11-15  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/l2test/vxmain.cpp l2test() : Removed an extra semi-
          colon that caused strange behaviors.

2001-11-15  Scott Christa  <schrista@arc.nasa.gov>
        Updated Microsoft and Tornado project files.
        * src/mba_utils/mba_utils.dsp : Added array_dict.h to the project's
          header file folder.
        * src/livdll/livdll.dsp : Modified the project to have a release
          version to build.
        * src/readers/l2test/l2test.wpj : Updated the dependencies and
          removed list_parser.cpp from the project.
        * src/readers/readers.wpj : Updated the dependencies and removed the
          Solaris simulator build.

2001-11-14  Scott Christa  <schrista@arc.nasa.gov>
        Updated Microsoft project files.
        * src/livingstone/livingstone.dsp : Added xerces to the include path
          to build the release version of l2test.
        * src/readers/xmpl2l2/xmpl2l2.dsp : Add the apid.lib to be linked
          into the debug version of xmpl2l2.

2001-11-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Transitioned::transition() and Transitioned::idle() to return
	Transition*
	* include/transition/transitioned.h (transition(), idle()) : modified
	  to return Transition*
	* src/transition/transitioned.cpp (transition(), idle()) : modified to
	  return Transition*
	
2001-11-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Migrated invariant out of loop in Transitioned::add_idle_transitions()
	* src/transition/transitioned.cpp (add_idle_transitions()) : moved
	  get_previous() out of loop, stored in new local variable, and moved
	  assert() out of loop
	
2001-11-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method Clause::contains()
	* include/tms/clause.h (contains()) : added
	
2001-11-12  Will Taylor  <taylor@email.arc.nasa.gov>
	* src/livdll/livdll.cpp (createCheckpointJNI) 
	  (restoreCheckpointJNI, deleteCheckpointJNI) : wrap
	  #ifdef ENABLE_CHECKPOINT around them.
	
2001-11-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method L2_checkpoint::data::delete_outdated_clauses()
	* src/checkpoint/checkpoint.cpp (delete_outdated_clauses()) : added
	
2001-11-09  Will Taylor  <taylor@email.arc.nasa.gov>
	* include/debuggers/T_system_debug.h 
	* src/debuggers/T_system_debug.cpp
	  (is_exogenously_assigned( Variable *pVariable) : added
	  (is_exogenously_assigned( const MBA_string variableName,
					  unsigned timeStep) : removed
	* src/livdll/livdll.cpp (variableExogenousAtTimeJNI) : added
	* src/livdll/LivingstoneEngine.h (variableExogenousAtTimeJNI) : added

2001-11-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Conflict_db_debug::assign(Assignable&, MBA_string) and
	Conflict_db_debug::unassign(MBA_string) to call
	Assignable::set_exogenously_assigned()
	* src/debuggers/conflict_db_debug.cpp (assign(Assignable, MBA_string),
	  unassign(MBA_string) : modified to call
	  Assignable::set_exogenously_assigned()
	
2001-11-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized computation of Candidate weight; PR 1186
	* include/conflict_db/candidate.h (get_weight(),
	  get_weight(const Array<Assignment *>&)) : added
	  (sum_assignment_weights()) : modified to take assignment list as
	  parameter
	* include/opsat/agenda_types.h (compute_element_weight()) : modified
	  to call Candidate::get_weight() rather than
	  Candidate::sum_assignment_weights()
	* src/conflict_db/candidate.cpp
	  (get_weight(const Array<Assignment *>&)) : added
	  (sum_assignment_weights()) : modified to take assignment list as
	  parameter
	  (truncate()) : Modified to build Array of truncated Assignments and
	  pass them to get_weight(Array<Assignment *>&) for combining
	* src/livdll/livdll.cpp (Java_LivingstoneEngine_getCandidateWeightJNI):
	  modified to call Candidate::get_weight() rather than
	  Candidate::sum_assignment_weights()
	* src/transition/tracker.cpp (add_candidate()) : modified to call
	  Candidate::get_weight() rather than
	  Candidate::sum_assignment_weights()
	
2001-11-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Proto_candidate::hash() to sum IDs, not addresses, for
	portability and stability of regression tests; PR 1453
	* src/cover/cover.cpp (Proto_candidate::hash()) : modified to sum
	  Assignments' Variables' IDs rather than Assignments' addresses
	
2001-11-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Permuted ranks of lessLikely and unlikely in from_xmpl.cpp; PR 1175
	* src/readers/from_xmpl.cpp (convert_to_rank()) : permuted ranks of
	  lessLikely and unlikely
	* l2-regress/base/cb-cbfs.5-1000-0.out : updated base with ./fix_basis
	* l2-regress/base/cb-cbfs.5-1000-2.out : updated base with ./fix_basis
	* l2-regress/base/cb-cbfs.min-5-1000-0 : updated base with ./fix_basis
	* l2-regress/base/cb-cbfs.min-5-1000-2 : updated base with ./fix_basis

2001-11-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added add-assumption for fault injection in simulation
	* include/debuggers/tracker_debug.h (doAssumption()) : added
	* include/transition/tracker.h (add_assumption()) : added
	* src/debuggers/tracker_debug.cpp (doAssumption()) : added
	* src/transition/tracker.cpp (add_assumption()) : added
	  (parse_cmd()) : added clause for add-assumption
	  (listener_usage()) : added line for add-assumption
	
2001-11-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made several iterators const; PR 1381
	* include/conflict_db/conflict.h (begin(), end()) : modified to return
	  const_iterator
	* include/conflict_db/variable.h (get_value_index(), begin_props(),
	  end_props()) : made const
	  (prop_iterator) : modified to be a const_iterator over Proposition *
	  const
	* include/debuggers/T_system_debug.h
	  (print_assignment(Assignment&, unsigned),
	   print_assignment(ostream&, Assignment&, unsigned),
	   print_start_state_assignment(Assignment&, unsigned),
	   print_start_state_assignment(ostream&, Assignment&, unsigned)) :
	  made Assignment& parameter const
	* include/debuggers/conflict_db_debug.h
	  (get_variable_value(Variable&), get_variable_value(Variable&, int) :
	  made Variable& parameter const
	  (print_assignment(Assignment&, unsigned),
	   print_assignment(ostream&, Assignment&, unsigned)): made
	  Assignment& parameter const
	* src/checkpoint/checkpoint.cpp
	  (L2_checkpoint::data::store_conflicts()) : made local variables const
	* src/conflict_db/assignable.cpp (Assignable()) : made local variables
	  const
	* src/conflict_db/candidate.cpp (Candidate::conflict_not_resolved()) :
	  made local variables const
	* src/conflict_db/conflict.cpp (resolving_assignments()) : made local
	  variables const
	* src/conflict_db/conflict_db.cpp (find_subsuming_conflict(),
	  destroy_conflict()) : made local variables const
	* src/conflict_db/variable.cpp (get_value_index()) : modified to be
	  const; modified local variables to be const
	* src/cover/cover.cpp (rho_coverage_aux()) : modified local variables
	  to be const
	* src/debuggers/T_system_debug.cpp
	  (print_assignment(ostream&, assignment, unsigned),
	   print_start_state_assignment(ostream, assignment, unsigned) : made
	  Assignment& parameter const
	  (print_transitioned()) : removed const_cast (the point of this all)
	* src/debuggers/conflict_db_debug.cpp 
	  (get_variable_value(Variable&), get_variable_value(Variable&, int) :
	  made Variable& parameter const
	  (print_assignment()) : made Assignment& parameter const
	  (print_conflict()) : made local variables const
	* src/transition/T_system.cpp
	  (conflict_is_old(), conflict_has_old_active_assignments(),
	   summarize_conflicts()) : made local variables const
	
2001-11-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added timeStep parameter to Transitioned::Transitioned()
	* include/transition/transitioned.h (Transitioned()) : added timeStep
	  parameter
	* src/transition/transitioned.cpp (Transitioned()) : added timeStep
	  parameter and use instead of constant T_system::NOW
	* src/transition/T_system.cpp (create_present_transitioned()) : added
	  T_system::NOW timeStep argument in "new Transitioned()"
	
2001-11-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized Transitioned::set_mode()
	* include/transition/transition.h
	* src/transition/transition.cpp
	  (set_mode()) : proceduralized remove_transition_clauses()
	  (remove_transition_clauses()) : proceduralized from set_mode()
	
2001-11-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_checkpoint::data to store command history
	* src/checkpoint/checkpoint.cpp
	  (L2_checkpoint::data::data()) : modified to call
	   L2_checkpoint::data::store_command_history()
	  (L2_checkpoint::data::command_at_time_step(),
	   L2_checkpoint::data::store_command_history(),
	   L2_checkpoint::data::commandHistory) : added
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::full_progress_copy_variables() and
	T_system::planner_progress() to copy exogenouslyAssigned into past
	* src/transition/T_system.cpp (full_progress_copy_variables(),
	  planner_progress()) : Modified to copy exogenouslyAssigned into past

2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added enum for variable count to enumapi.h produced by api_gen; PR 1405
	* src/liv_utils/api_gen/api_gen.cpp (write_to_file()) : added code
	  to write the definition of enum "enumapi_constants" the sole element
	  of which is VARIABLE_COUNT, set equal to the value of
	  T_system::npresent_variables()
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed bug in Java_LivingstoneEngine_mapOverObservableAttributeNamesJNI
	* src/livdll/livdll.cpp
	(Java_LivingstoneEngine_mapOverObservableAttributeNamesJNI) : fixed
	 incorrect predicate
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added test whether a Variable's value was exogenously assigned; PR 1200
	* include/conflict_db/assignable.h
	  (is_exogenously_assigned(), set_exogenously_assigned(),
	   exogenously_assigned) : added
	* include/debuggers/T_system_debug.h (is_exogenously_defined()) : added
	* include/transition/T_system.h (observe()) : modified to call
	  Assignable::set_exogenously_assigned()
	* src/conflict_db/assignable.cpp (Assignable()) : modified to
	  initialize Assignable::exogenouslyAssigned to false
	* src/debuggers/T_system_debug.cpp (is_exogenously_defined()) : added
	* src/transition/T_system.cpp (minimal_progress(),
	  full_progress_make_assignments()) : modified to call
	  Assignable::set_exogenously_assigned() 
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed T_system::commands, T_sytem::observables and
	T_system::transitioned; PR 1452
	* include/transition/T_system.h
	  (transitioned, begin_transitioned(), end_transitioned()) : removed
	  (commands, begin_cmds(), end_cmds()) : removed
	  (observables, begin_observables(), end_observables()) : removed
	* src/transition/T_system.cpp
	  (create_present_transitioned()) : removed reference to transitioned
	  (create_present_command()) : removed reference to commands
	  (create_present_observables()) : removed reference to observables
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::planner_progress() to iterate over
	T_system::present_variables rather than lists of Variable subsets in
	T_system
	* src/transition/T_system.cpp
	  (planner_progress()) : modified to iterate over
	  T_system::present_variables rather than lists of Variable subsets in
	  T_system
	  (idle(), minimal_progress(), full_progress_copy_variables(),
	   remove_old_variables(), summarize_variables(), planner_progress()) :
	   modified to iterator over T_system::present_variables rather than
	   T_system::transitioned
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified api_gen.cpp to iterate over T_system::present_variables
	rather than lists of Variable subsets in T_system
	* src/liv_utils/api_gen/api_gen.cpp
	  (write_domain()) : proceduralized from write_domains()
	  (write_domains()) : removed
	  (write_name_header(), write_name(), write_name_footer()) :
	   proceduralized from write_names()
	  (write_names()) : removed
	  (write_observable_names(), write_command_names(),
	   write_mode_names()) : modified not to use write_names()
	   write_observable_domains(), write_command_domains(),
	   write_mode_domains()) : modified not to use write_domains()
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_checkpoint::data::store_state_var() to iterate over
	T_system::present_variables rather than lists of Variable subsets in
	T_system
	* src/checkpoint/checkpoint.cpp
	  (store_state_var()) : Modified to iterate over
	  T_system::present_variables rather than lists of Variable subsets in
	  T_system
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Java_LivingstoneEngine_mapOverCommandAttributeNamesJNI
	and Java_LivingstoneEngine_mapOverObservableAttributeNamesJNI to
	iterate over T_system::present_variables rather than lists of Variable
	subsets in T_system
	* src/livdll/livdll.cpp
	  (JNICALL Java_LivingstoneEngine_mapOverCommandAttributeNamesJNI) :
	  modified to iterate over T_system::present_variables rather than
	  T_system::commands
	  (Java_LivingstoneEngine_mapOverObservableAttributeNamesJNI) :
	  modified to iterate over T_system::present_variables rather than
	  T_system::observables
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed T_system::present_assignable_vars and
	T_system::present_dependent_vars
	* include/transition/T_system.h (present_dependent_vars,
	  present_assignable_vars) : removed
	* src/transition/T_system.cpp
	  (create_present_dependent) : Modified not to manipulate
	  present_dependent_vars
	  (create_present_observable) : Modified not to manipulate
	  present_observable_vars
	  (create_present_command) : Modified not to manipulate
	  present_observable_vars

2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::planner_progress() to iterate over
	T_system::present_variables rather than
	T_system::present_dependent_variables
	* src/transition/T_system.cpp (planner_progress()) : Modified to
	  iterate over T_system::present_variables rather than
	  T_system::present_dependent_variables

2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::full_progress_copy_variables() and
	T_system::full_progress_make_assignments() to iterate over
	T_system::present_variables rather than
	T_system::present_dependent_vars and T_system::present_assignable_vars
	* src/transition/T_system.cpp (full_progress_copy_variables(),
	  full_progress_make_assignments()) : Modified to iterate over
	  T_system::present_variables rather than
	  T_system::present_dependent_vars and T_system::present_assignable_vars

2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system_debug::find_discrepant_observations() to iterate
	over T_system::present_variables rather than T_system::observations
	* src/debuggers/T_system_debug.cpp (find_discripant_observations()) :
	  modified to iterator over T_system::present_variables rather than
	  T_system::observations
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system_debug::doCommands(), T_system_debug::doObservables(),
	and T_system_debug::doTransitioned() to iterate over
	T_system::present_variables rather than lists of variable subsets in
	T_system
	* src/debuggers/T_system_debug.cpp
	  (accept_present_command(), accept_present_observable(),
	   accept_present_transitioned()) : added
	  (doCommands()) : modified to iterate over
	  T_system::present_variables rather than T_system::commands
	  (doObservables()) : modified to iterate over
	  T_system::present_variables rather than T_system::observables
	  (doTransitioned()) : modified to iterate over
	  T_system::present_variables rather than T_system::transitioned
	
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system_debug to iterate over T_system::present_variables
	rather than over lists of variable subsets in T_system
	* src/debuggers/T_system_debug.cpp
	  (find_current_command()) : modified to iterate over
	  T_system::present_variables rather than T_system::commands
	  (find_current_observable()) : modified to iterate over
	  T_system::present_variables rather than T_system::observables
	  (find_current_mode()) : modified to iterate over
	  T_system::present_variables rather than T_system::transitioned
	  
2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker::map_over_observations() to iterate over
	T_system::present_variables rather than T_system::observables
	* src/transition/tracker.cpp (map_over_observations()) : modified to
	  iterate over T_system::present_variables with a filter, rather than
	  over T_system::observables

2001-11-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker::truncate() to propagate on 0 final (not initial) size
	It was trying to install Candidate 0 when there were 0 Candidates
	* src/transition/tracker.cpp (Tracker::truncate()) : install(0u) when
	  size() != 0, rather than initialSize != 0
	
2001-11-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Minor changes to comments in conflict.h
	* include/conflict_db/conflict.h (All) : Minor changes in comments
	
2001-11-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Return false if empty file in L2_parameters::read_from_file()
	* src/api/parameters.cpp (read_from_file()) : return false if linenum
	  is 1, indicating input.getline() failed the first time through
	
2001-11-01  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (mapOverCandidateAssignmentsJNI):
	  changed callback method constructor type for weight from float to int.

2001-11-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted, refactored and added comments to ltms.cpp
	* src/tms/ltms.cpp (All) : reformatted, refactored and added comments
	
2001-11-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker::truncate() to delete inconsistent Candidates
	* src/transition/tracker.cpp (truncate()) : Modified the for loop to
	  delete and erase the Candidate if T_system::propagate() returns false
	
2001-10-31  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed Assigment::weight_t from float to unsigned, per PR 1273
	* include/conflict_db/assignment.h (weight_t) : changed from float to
	  unsigned
	* src/opsat/cbfs_tracker_debug.cpp (search_termination()) : changed
	  "%g" to "%d" in sprintf format string
	
2001-10-31  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops, reformatted, added comments in cover.cpp
	* src/cover/cover.cpp (Proto_candidate::make_candidate(),
	  Proto_candidate::hash(), Proto_candidate::set::~set(),
	  Proto_candidate::set::map_add(), Proto_candidate::set::acquire(),
	  Proto_candidate::set::make_candidates(), print_conflicts()) :
	  Normalized iterator loops
	
2001-10-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Conflict_db::destroy_conflict() to remove back pointers
	* src/conflict_db/conflict_db.cpp (destroy_conflict()) : added loop
	  over all Assignments to remove the Conflict from the Assignment
	
2001-10-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method Assignment::remove_conflict() to undo
	Assignment::add_conflict()
	* include/conflict_db/assignment.h (remove_conflict()) : added
	* src/conflict_db/assignment.cpp (remove_conflict()) : added
	
2001-10-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Assigment::add_conflict() to add conflicts only if new
	* src/conflict_db/assignment.cpp (add_conflict()) : added guard
	  if (!conflicts.contains(&rConflict)) to the push_front() call and
	  added guard if (!resoved_conflicts.contiains(&rConflict)) to the
	  push_front() call.
	  This drastically reduces the size of Assignment::conflicts and
	  Assignment::resolved_conflicts, but does not prevent it from growing.
	  It may still contain dangling pointers.

2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted cover_tracker_debug.cpp
	* src/cover/cover_tracker_debug.cpp (all) : reformatted
	
2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted assignment.*
	* include/conflict_db/assignment.h (all) : reformatted
	* src/conflict_db/assignment.cpp (all) : reformatted
	
2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted cover_tracker_debug.*
	* include/cover/cover_tracker_debug.h (all) : reformatted
	* src/cover/cover_tracker_debug.cpp (all) : reformatted
	
2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Assignable::Assignable() to use initializer list
	* src/conflict_db/assignable.cpp (Assignable()) : modified to use
	  initializer list
	
2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Assignable::conflicts and all clients of it
	* src/conflict_db/assignment.cpp (add_conflict()) : removed call to
	  Assignable::add_conflict()
	* include/conflict_db/assignable.h
	  (get_conflicts(), add_conflict(), conflicts) : removed
	  (erase_conflicts()) : removed call to Slist<Conflict*>::erase()
	
2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unused variable from rho_coverage_aux
	* src/cover/cover.cpp (rho_coverage_aux()) : removed definition and
	  intialialization of <Slist Conflict*> var_conflicts
	
2001-10-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Assignable::add_conflict() to add conflicts only if new
	* include/conflict_db/assignable.h (add_conflict()) : added guard
	  if (!conflicts.contains(&rConflict)) to the push_front() call
	  This drastically reduces the size of Assignable::conflicts, but does
	  not prevent it from growing. It may still contain dangling pointers.
	
2001-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed get_timestep() to get_time_step() in everywhere; PR 1173
	* include/api/livingstone.h (failure::get_timestep()) : renamed
	  failure::get_time_step()
	* include/transition/T_system.h (get_timestep()) : renamed
	  get_time_step()
	  (set_oldest_timestep(), history_full()) : changed get_timestep() to
	  get_time_step()
	* include/transition/tracker.h (get_timestep()) : renamed
	  get_time_step(); changed T_system::get_timestep() to
	  T_system::get_time_step()
	* src/checkpoint/checkpoint.cpp
	  (restore(), store_times()) : changed T_system::get_timestep() to
	  T_system::get_time_step()
	* src/debuggers/T_system_debug.cpp (variable_time_iterator(),
	  print_variable_at_times()) : changed T_system::get_timestep() to
	  T_system::get_time_step()
	* src/debuggers/tracker_debug.cpp (end_find_candidates()) : changed
	  Tracker::get_timestep() to Tracker::get_time_step()
	* src/readers/l2flight/l2flight.cpp (main) :
	  changed failure::get_timestep() to failure::get_time_step()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverCandidateAssignmentsJNI,
	   Java_LivingstoneEngine_mapOverAttributeAssignmentsJNI,
	   Java_LivingstoneEngine_getTimeStepJNI,
	   Java_LivingstoneEngine_getHistoryStartStopJNI,
	   Java_LivingstoneEngine_variableValueAtTimeJNI) :
	  changed T_system::get_timestep() to T_system::get_time_step()
	
2001-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed float to Assignment::weight_t when used as a weight/rank
	* src/checkpoint/checkpoint.cpp (InitialModeAssignments): completion
	  of previous checkin -- I missed a couple
	
2001-10-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed float to Assignment::weight_t when used as a weight/rank
	* include/conflict_db/assignable.h (set_weight()) : changed type of
	  parameter new_weight from float to Assignment::weight_t
	* include/cover/cover_tracker.h (Cover_tracker()) : changed type of
	  parameter limit from float to Assignment::weight_t; changed initial
	  value of gamma from 0.0 to 0.
	  (get_gamma()) : changed type of return value from float to
	  Assignment::weight_t
	  (gamma, gamma_limit) : changed type from float to
	  Assignment::weight_t
	* include/debuggers/trajectory.h
	  (Trajectory::Parts::get_rank()) : changed type of return value from
	  float to Assignment::weight_t
	  (Trajector::Parts::rank) : changed type from float to
	  Assignment::weight_t
	* include/transition/T_system.h (create_horizon_transition(),
	  create_mode_transition()) : changed type of parameter costs from
	  float to Assignment::weight_t
	* include/transition/transitioned.h (add_transition_cost()) : changed
	  type of parameter cost from float to Assignment::weight_t
	  (transition_costs) : changed type from Slist<float> to
	  Slist<Assignment::weight_t>
	* src/api/livingstone.cpp (create_tracker()) : in call to
	  Cover_tracker::Cover_tracker, changed cast of first argument from
	  float to Assignment::weight_t
	* src/checkpoint/checkpoint.cpp
	  (InitialModeAssignments::InitialModeAssignments()) : changed type of
	  parameter w from float to Assignment::weight_t
	  (InitialModeAssignments::weight()) : changed return type from float
	  to Assignment::weight_t
	  (InitialModeAssignments::weight_) : changed type from float to
	  Assignment::weight_t
	  (handleStartInitialModeAssignments) : changed type of local variable
	  weight from float to Assignment::weight_t; changed cast from float
	  to Assignment::weight_t
	* src/conflict_db/assignable.cpp (set_weight()) : changed type of
	  parameter new_weight from float to Assignment::weight_t
	* src/livdll/livdll.cpp 
	  (JNICALL Java_LivingstoneEngine_mapOverCandidateAssignmentsJNI) :
	  changed type of local variable weight from float to
	  Assignment::weight_t; in call to JNIEnv::NewObject(), changed cast
	  of fourth argument from float to Assignment::weight_t
	* src/opsat/cbfs_tracker.cpp (CBFS_tracker()) : in initializer for
	  opsat, changed cast of third argumen from float to
	  Assignment::weight_t
	* src/readers/to_t_system.cpp (createTransition()) : in call to
	  Transitioned::add_transition_cost(), changed cast of first argument
	  from float to Assignment::weight_t
	* src/test/rtapi.cpp (main()) : in declaration of local variable ct,
	  changed cast of first argument from float to Assignment::weight_t
	* src/transition/T_system.cpp (create_state_var()) : changed type of
	  local variable zeroes from Slist<float> to Slist<Assignment::weight_t
	  (install_new_state()) : changed type of local variable max_weight
	  from float to Assignment::weight_t
	* src/transition/tracker.cpp (add_candidate()) : changed type of local
	  variable weightOfCandidateToAdd from float to Assignment::weight_t
	* src/transition/transitioned.cpp (Transitioned()) : changed type of
	  local variable zeroes from Slist<float> to
	  Slist<Assignment::weight_t>
	  (add_transition_cost()) : changed type of parameter cost from float
	  to Assignment::weight_t
	
2001-10-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	In Conflict_db_debug::print_assignment(ostream&, Assignment&,
	unsigned), included ostream as arg1 in call to
	Conflict_db_debug::print_assignment(); PR 1438
	* src/debuggers/conflict_db_debug (print_assignment(ostream&,
	  Assignment, unsigned) : included ostream as arg1 in call to
	  Conflict_db_debug::print_assignment()
	
2001-10-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed call to T_system::restore_assumption_defaults() in
	Tracker::prune_inconsistent_candidates() per PR 1430
	* src/transition/tracker.cpp (prune_inconsisten_candidates()) :
	  Removed call to T_system::restore_assumption_defaults()

2001-10-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed declaration of Assignable::current_assignment_index()
	* include/conflict_db/assignable.h (current_assignment_index()) :
	  removed pr PR 1429
	
2001-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made L2_checkpoint::data::CPAssignment::find_a_variable() handle state
	variable
	* src/checkpoint/checkpoint.cpp (find_a_variable()) : When the variable
	  is the state variable, varID_ = -1, so it can't be used as an index
	  into T_system::get_present_variable(). Handled it as a special case.
	
2001-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast result of fread() to size_t in from_bin::readIntoMemory()
	* src/readers/from_bin.cpp (readIntoMemory())
	In VxWorks fread() returns an int but in MSVC++ and g++ fread() it
	returns a size_t. Cast it to suppress compiler warnings.
	
2001-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-implemented fileSize() in from_bin.cpp to get offset from ftell()
	* src/readers/from_bin.cpp (fileSize())
	  Re-implemented file_size(). It used to cast an fpos_t to a scalar,
	  which is not portable. Now use ftell() to get the offset.
	
2001-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	In xlate_merge_eq_vars::copy_all_vars() assured that debugging
	* src/readers/xlate_merge_eq_vars.cpp (copy_all_vars()) : Surrounded
	  optimized-away-variables code with guard to assure that debugging
	
2001-10-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed return from void method Proposition::set_break()
	* include/tms/proposition.h (set_break()) : removed return
	
2001-10-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added command "echo-commands" to Livingstone_debug for charles Pecheur
	* src/debuggers/livingstone_debug (run()) : added condition for
	  "echo-commands" and line in usage message
	
2001-10-15  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* mba.dsw: update for project livdll

2001-10-15  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to tracker_debug.h
	* include/debuggers/tracker_debug.h (All) : added comments
	
2001-10-15  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to T_system.cpp
	* src/transition/T_system.cpp (All) : added comments
	
2001-10-15  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized Transitioned::instantiate_clauses() from
	Transitioned::transition()
	* include/transition/transition.h (instantiate_clauses() : added
	* src/transition/transition.cpp (instantiate_clauses()) : added
	  (transition()) : proceduralized instantiate_clauses())	
	
2001-10-15  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved constructor from T_system_debug.cpp to T_system_debug.h for
	inlining
	* include/debugger/T_system_debug.h (T_system_debug()) : moved from
	  T_system_debug.cpp
	* src/debugger/T_system_debug.cpp (T_system_debug()) : moved to
	  T_system_debug.h
	
2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in Checkpoint::data
	* src/checkpoint/checkpoint.cpp (store_cmds_obs(), store_state_var(),
	  store_candidates(), store_conflicts(), reset_times(),
	  restore_cmds_obs(), restore_state_var(), restore_conflicts(),
	  CPCandidate::create_in_tracker()) :
	  normalized iterator loops
	
2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved constructor from livingstone.cpp to livingstone.h for inlining
	* include/api/livingstone.h (Livingstone()) : moved from livingstone.cpp
	* src/api/livingstone.cpp (Livingstone()) : moved to livingstone.h

2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_parameters::L2_parameters() to use initializer list
	* include/tms/proposition.h (set_to_default_values()) : removed
	* src/tms/proposition.cpp (set_to_default_values()) : removed
	  (L2_parameters()) : modified to use initializer list
	  (macros) : defined macros for default search and progress styles
	
2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved constructor from proposition.cpp to proposition.h for inlining
	* include/tms/proposition.h (Proposition()) : moved from proposition.cpp
	* src/tms/proposition.cpp (Proposition()) : moved to proposition.h

2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from ptheory.cpp to ptheory.h for inlining
	* include/tms/ptheory.h (ptheory(), create_clause(), initialize_self(),
	  initialize_clause(), initialize_prop(), remove()) : moved from
	  ptheory.cpp
	* src/tms/ptheory.cpp (ptheory(), create_clause(), initialize_self(),
	  initialize_clause(), initialize_prop(), remove()) : moved to
	  ptheory.h

2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from livingstone_debug.cpp to livingstone_debug.h
	for inlining
	* include/debuggers/livingstone_debug.h (run()) : moved from
	  livingstone_debug.cpp
	* src/debuggers/livingstone_debug.h (run()) : moved to
	  livingstone_debug.h
	
2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from L2_file.cpp to L2_file.h for inlining
	* include/readers/L2_file.h (setClause(), setEnum(), setVar()) : moved
	  from L2_file.cpp
	* src/readers/L2_file.cpp (setClause(), setEnum(), setVar()) : moved
	  to L2_file.h

2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from transitioned.cpp to transitioned.h for
	inlining
	* include/transition/transitioned.h (copy_transition_variable(),
	  has_indexed_transitions(), add_idle_prototype()) : Moved from
	  transitioned.cpp
	* src/transition/transitioned.cpp (copy_transition_variable(),
	  has_indexed_transitions(), add_idle_prototype()) : Moved to
	  transitioned.h
	
2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved xlate_merge_eq_vars() to *.h file for inlining
	* include/readers/xlate_merge_eq_vars.h (xlate_merge_eq_vars()) :
	  Moved from xlate_merge_eq_vars.cpp
	* src/readers/xlate_merge_eq_vars.cpp (xlate_merge_eq_vars()) :
	  Moved to xlate_merge_eq_vars.h
	
2001-10-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from L2_file_translator.cpp to
	L2_file_translator.h for inlining
	* include/readers/L2_file_translator.h
	  (L2_file_translator(), ~L2_file_translator()) : Moved from
	  L2_file_translator.cpp
	* src/readers/L2_file_translator.cpp
	  (L2_file_translator(), ~L2_file_translator()) : Moved to
	  L2_file_translator.h
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_file_translator::L2_file_translator() to use initalizer list
	* src/readers/L2_file_translator.cpp (L2_file_translator()) : Modified
	  to use initializer list
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to modes.h and modes.cpp
	* include/readers/modes.h (all) : added comments
	* src/readers/modes.cpp (all) : added comments
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in L2rMode
	* src/readers/modes.cpp (~L2rMode(), add_transition()) : Normalized
	  iterator loops
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Simplified L2rProposition::operator==()
	* include/readers/proposition.h (L2rProposition::operator==(),
	  L2rPropVarValue::operator==(), L2rPropVarVar::operator==()) :
	  simplified
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2rProposition::L2rProposition() to use initializer list
	* include/readers/proposition.h (L2rProposition(), L2rPropVarValue(),
	  L2rPropVarVar) : Modified to use initializer list
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_file_reader::L2_file_reader() to use initializer list
	* include/readers/L2_file_reader.h (L2_file_reader()) : Modified to use
	  initializer list
	
2001-10-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_file::L2_file() to use initializer list
	* src/readers/L2_file.cpp (L2_file()) : Modified to use initializer list
	
2001-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from variable.cpp to variable.h for inlining
	* include/readers/variable.h (L2rVariable(), L2rVariable()) : moved 
	  from variable.cpp
	* src/readers/variable.cpp (L2rVariable(), L2rVariable()) : moved to
	  variable.h
	
2001-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2rVariable::L2rVariable() to use intializer list
	* src/readers/variable.cpp (L2rVariable()) : Modified to use
	  initializer list
	
2001-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments and renamed variales in clause.cpp
	* src/tms/clause.cpp (all) : added comments and renamed variables
	
2001-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-implemented the Proposition get/set flag methods in terms of
	accessors
	* include/tms/proposition.h (get_flag(), set_flag()) : added
	  (is_beak(), is_destroying(), is_traced()) : implemented by get_flag()
	  (set_break(), set_traced()) : implemented by set_flag()
	* src/tms/proposition.cpp (set_destroying()) : implemented by set_flag()

2001-10-09  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-implemented the Clause get/set flag methods in terms of accessors
	* include/tms/clause.h (get_flag(), set_flag()): added
	  (set_break(), set_deleted(), set_destroying(), set_in_fringe(),
	   set_traced(), set_unsatisfied(), set_volatile()) : implemented by
	  set_flag()
	   is_break(), is_deleted(), is_destroying(), is_in_fringe(),
	   is_traced(), is_unsatisfied(), is_destroying()) : implemented by
	  get_flag()
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed typo in Variable::~Variable()
	* src/conflict_db/variable.cpp (~Variable()) : fixed typo
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from ltms.cpp to ltms.h for inlining
	* include/tms/ltms.h (Fringe::~Fringe(), Fringe::push(), Fringe::pop(),
	  Fringe::erase(), Fringe::empty(), ~LTMS()) : moved from ltms.cpp
	* src/tms/ltms.cpp (Fringe::~Fringe(), Fringe::push(), Fringe::pop(),
	  Fringe::erase(), Fringe::empty(), ~LTMS()) : moved to ltms.h
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatting, commenting, etc., in class Variable
	* include/conflict_db/variable.h (all) : Reformatting and commenting
	* src/conflict_db/variable.cpp (all) : Reformatting and commenting
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized T_system::full_progress()
	* include/transition/T_system.h (full_progress_copy_variables(),
	  full_progress_create_constraints(), full_proress_make_assignments()):
	  added
	* src/transition/T_system.cpp (full_progress_copy_variables(),
	  full_progress_create_constraints(), full_proress_make_assignments()):
	  added
          (full_progress()) : proceduralized
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made T_system::get_*() const
	* include/transition/T_system.h (get_command(), get_observable(),
	  get_transitioned()) : made const
	* src/transition/T_system.cpp (get_command(), get_observable(),
	  get_transitioned()) : made const
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from T_system.cpp to T_system.h for inlining
	* include/transition/T_system (is_command(), is_observable(),
	  (is_transitioned(), cmd_enums_to_assignment(unsigned, unsigned),
	   cmd_enums_to_assignment(Command&, unsigned),
	   obs_enums_to_assignment(unsigned, unsigned),
	   observe(unsigned, signed), observe(Observable&, signed),
	   T_system()) :
	   moved from T_system.cpp
	* src/transition/T_system.cpp (is_command(), is_observable(),
	  (is_transitioned(), cmd_enums_to_assignment(unsigned, unsigned),
	   cmd_enums_to_assignment(Command&, unsigned),
	   obs_enums_to_assignment(unsigned, unsigned),
	   observe(unsigned, signed), observe(Observable&, signed),
	   T_system()) :
	   moved to T_system.h

2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::is_*(unsinged) and T_system::get_*() to call
	range-checking accessor
	* include/transition/T_system
	  (get_present_variable()) : modified to return NULL if index out of
	  range
	* src/transition/T_system.cpp
	  (get_command(), get_observable(), get_transitioned(), is_command(), 
	   is_observable_is_transitioned()) : modified to call
	  get_present_variable()
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from T_system.cpp to T_system.h for inlining
	* include/transition/T_system.h 
	  (minimal_progress(Command&, unsigned, Slist<Assumption*>&),
	   minimal_progress(unsigned, unsigned, Slist<Assumption*>&),
	   full_progress(Command&, unsigned, Slist<Assumption*>&),
	   full_progress(unsigned, unsigned, Slist<Assumption*>&)) :
	  moved from T_system.cpp
	* src/transition/T_system.cpp
	  (minimal_progress(Command&, unsigned, Slist<Assumption*>&),
	   minimal_progress(unsigned, unsigned, Slist<Assumption*>&),
	   full_progress(Command&, unsigned, Slist<Assumption*>&),
	   full_progress(unsigned, unsigned, Slist<Assumption*>&)) :
	  moved to T_system.h

2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from T_system.cpp to T_system.h for inlining
	* include/transition/T_system.h (create_horizon_transition(),
	  find_prevous_variable(), history_full(), next_timestep(),
	  summarize()) : moved from T_system.cpp
	* src/transition/T_system.cpp (create_horizon_transition(),
	  find_previous_variable(), history_full(), next_timestep(),
	  summarize()) : moved to T_system.h

2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from tracker.cpp to tracker.h for inlining
	* include/transition/tracker.h (~Tracker(), install(unsigned, bool(),
	  truncate_if_needed()) : moved from tracker.cpp
	* src/transition/tracker.cpp (~Tracker(), install(unsigned, bool(),
	  truncate_if_needed()) : moved to tracker.h
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made methods const in class Candidate
	* include/conflict_db/candidate.h
	  (conflict_not_resolved(), consistent_assignment(), contains(),
	  equivalent(), get_conflict_assignments(), remove(),
	  smallest_unresolved_conflict(), sum_assignment_weights()) :
	  made const
	* src/conflict_db/candidate.cpp
	  (conflict_not_resolved(), consistent_assignment(), contains(),
	  equivalent(), get_conflict_assignments(), remove(),
	  smallest_unresolved_conflict(), sum_assignment_weights()) :
	  made const

2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved definition of Candidate::contains() to candidate.cpp
	* include/conflict_db/candidate.h (contains()) : moved to candidate.cpp
	* src/conflict_db/candidate.cpp (contains()) : moved from candidate.h
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Folded superset_of_aux into Candidate::superset_of()
	* include/conflict_db/candidate.h
	  (friend) : removed friend superset_of_aux
	  (superset_of_aux()) : folded into superset_of
	  (superset_of()) : moved to candidate.cpp
	* src/conflict_db/candidate.cpp
	  (superset_of()) : moved from candidate.h, with body from
	  superset_of_aux()
	
2001-10-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed useless declarations from candidate.h
	* include/conflict_db/candidate.h (struct candidate_sum_weight,
	  friend struct candidate_sum_weight) : removed
	
2001-10-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from candidate.cpp to candidate.h for inlining
	and large functions from candidate.h to candidate.cpp
	* include/conflict_db/candidate.h (add()) : moved from candidate.cpp
	  (get_assignment()) : moved from candidate.cpp
	* src/conflict_db/candidate.cpp (add()) : moved to candidate.h
	  (get_assignment()) : moved to candidate.h
	
2001-10-04  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* RELEASE 2.6: tagged L2Skunk_2_6
	* src/livingstone/version.c : update for 2.6

2001-10-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced static members in Livingstone_debug
	* include/debuggers/livingstone_debug.h
	  (include) : include array.h and hash_table.h in livingstone_reader.h
	  (addOptimizedVariableName()) : moved to xlate_merge_eq_vars
	  (setVariableMapping()) : moved to xlate_merge_eq_vars
	  (getVariableMapping()) : moved to Livingstone_reader
	  (getRepresentative()) : moved to Livingstone_reader
	  (getRepresentativeVariable()) : moved to Livingstone_reader
	  (beginOptimizedAwayVariableNames()) : moved to Livingstone_reader
	  (endOptimizedAwayVariableNames()) : moved to Livingstone_reader
	  (optimizedAwayVariableNames) : moved to Livingstone_reader
	  (variableHashMap) : moved to Livingstone_reader
	  (allVariableNames) : made non-static
	* include/readers/livingstone_reader.h
	  (include) : include array.h and hash_table.h from livingstone_debug.h
	  (class) : added "class Variable;"
	  (getVariableMapping()) : moved from Livingstone_debug
	  (getRepresentativeVariable()) : moved from Livingstone_debug
	  (beginOptimizedAwayVariableNames()) : moved from Livingstone_debug
	  (endOptimizedAwayVariableNames()) : moved from Livingstone_debug
	  (optimizedAwayVariableNames) : moved from Livingstone_debug
	  (variableHashMap) : moved from Livingstone_debug
	* include/debuggers/xlate_merge_eq_vars.h
	  (include) : include array.h and hash_table.h
	  (getOptimizedAwayVariableNames()) : added
	  (getVariableHashMap()) : added
	  (addOptimizedVariableName()) : moved from Livingstone_debug
	  (setVariableMapping()) : moved from Livingstone_debug
	  (optimizedAwayVariableNames) : added
	  (variableHashMap) : added
	* src/debuggers/livingstone_debug.cpp
	  (optimizedAwayVariableNames) : moved to Livingstone_reader
	  (variableHashMap) : moved to Livingstone_reader
	  (allVariableNames) : made non-static
	* src/readers/livingstone_reader.cpp
	  (merge_eq_vars()) : Added calls to
   	  xlate_merge_eq_vars::getOptimizedAwayVariableNames() and
	  xlate_merge_eq_vars::getVariableHashMap()
	* src/readers/xlate_merge_eq_vars.cpp
	  (copy_all_vars()) : Modified to call moved methods
	  (getOptimizedAwayVariableNames()) : added
	  (getVariableHashMap()) : added

2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized debug code from Tracker::prune_inconsistent_candidates()
	* src/transition/tracker.cpp (prune_inconsistent_candidates()) :
	  Proceduralized debug code
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Cover_tracker::Cover_tracker() to use initializer list
	* include/cover/cover_tracker.h (Cover_tracker()) : Modified to use
	  initializer list
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added curly braces to blocks in Cover_tracker::find_fresh_candidates()
	* src/cover/cover_tracker.cpp (find_fresh_candidates()) : Added curly
	  braces to blocks
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Minor formatting changes to cover.h
	* include/cover/cover.h (all) : Minor formatting changes
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Conflict::Conflict() to use initializer list
	* src/conflict_db/conflcit.cpp (Conflict()) : Modified to use
	  initializer list
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from conflict.cpp to conflict.h for inlining
	* include/conflict_db/conflict.h (operator<(), operator>()) : moved
	  definition from conflict.cpp
	* src/conflict_db/conflict.cpp (operator<(), operator>()) : moved
	  definition to conflict.h
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker_debug::doFindCandidates() to call
	Tracker_debug::doPruneAndSearch() and
	Tracker_debug::doFindFreshCandidates()
	* src/debuggers/tracker_debug.cpp (doFindCandidates()) : Modified to
	  call 	Tracker_debug::doPruneAndSearch() and
	  Tracker_debug::doFindFreshCandidates()

2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Tracker_debug::doProgress()
	* include/debuggers/tracker_debug.h (doProgress()) : removed
	* src/debuggers/tracker_debug.cpp (doProgres()) : removed
	  (parse_cmd()) : replaced doProgress() with progress(),
	  full_progress() and minimal_progress()
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized Tracker_debug::getCommandAssignment() from
	Tracker_debug::doProgress()
	* include/debuggers/tracker_debug.h (getCommandAssignment()) : added
	* src/debuggers/tracker_debug.cpp (getCommandAssignment()) : added
	  (doProgress()) : proceduralized with getCommandAssignment()

2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Tracker_debug::doPrintTrackerStats()
	* include/debuggers/tracker_debug.h (doPrintTrackerStats()) : removed
	* src/debuggers/tracker_debug.cpp (doPrintTrackerStats()) : removed
	  (doPrintAllStats()) : replaced doPrintTrackerStats() with
	  print_stats()
	  (parse_cmd()) : replaced doPrintTrackerStats() with print_stats()
	
2001-10-02  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Tracker_debug::print_candidates()
	* src/debuggers/tracker_debug.cpp (print_candidates()) : Normalized
	  iterator loop

2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Simplified Opsat_CBFS::next_consistent_candidate(). It was confusing.
	* src/opsat/opsat.cpp (next_consistent_candidate()) : rewrote
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed debugging comments from rho_coverage_aux()
	* src/cover/cover.cpp (rho_coverage_aux()) : Removed debugging comments

2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in rho_coverage_aux()
	* src/cover/cover.cpp (rho_coverage_aux()) : Normalized iterator loops
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in rho_coverage()
	* src/cover/cover.cpp (rho_coverage()) : Normalized iterator loops
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Candidate::get_conflict_assignments()
	* src/conflict_db/candidate.cpp (get_conflict_assignments()) :
	  Normalized iterator loop
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Candidate::conflict_not_resolved()
	* src/conflict_db/candidate.cpp (conflict_not_resolved()) : Normalized
	  itertor loop
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved small functions from assignable.cpp to assignable.h for inlining
	* include/conflict_db/assignable.h (add_conflict(),
	  assignments_begin(), assignments_end()) : moved definition from
	  assignable.cpp
	* src/conflict_db/assignable.cpp (add_conflict(),
	  assignments_begin(), assignments_end()) : moved definition to
	  assignable.h
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed incorrect conditional in Conflict_db_debug::parse_cmd()
	* src/debuggers/conflict_db_debug.cpp (parse_cmd()) : fixed incorrect
	  conditional
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rewrote conditionals in Conflict_db_debug::parse_cmd()
	* src/debuggers/conflict_db_debug (parse_cmd()) : rewrote conditionals
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	Conflict_db_debug::print_all_variable_values(ostream&)
	* src/debuggers/conflict_db_debug (print_all_variable_values(ostream&))
	  : Normalized iterator loop
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed C-style cast to static_cast in
	Conflict_db_debug::find_assignable()
	* src/debuggers/conflict_db_debug (find_assignable()) : Changed C-style
	  cast to static_cast
	
2001-09-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in Conflict_db_debug
	* src/debuggers/conflict_db_debug (cdomains(), print_assumptions(),
	  print_assignables(), print_all_variable_values(), print_conflicts(),
	  parse_cmd(), print_constraints()) :
	  Normalized iterator loops
	
2001-09-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in LTMS::move_support()
	* src/tms/ltms.cpp (move_support()) : Normalized iterator loop
	
2001-09-26  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made unsatisfiedClauseSet parameter call-by-reference in
	last_conflict_debug1()
	* src/tms/ltms.cpp (last_conflict_debug1()) : made
	  unsatifsfiedClauseSet parameter call-by-reference
	
2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to clause.cpp
	* src/tms/clause.cpp (all) : Added comments
	
2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Conflict_db::is_assumption() to not call
	Assignment::is_assumption()
	* src/conflict_db/conflict_db.cpp (is_assumption()) : modified to
	  call Assignment::get_variable() and Variable::is_assumption() instead
	  of Assignment::is_assumption()
	
2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted cbfs_tracker.h and added comments
	* include/opsat/cbfs_tracker.h (all) : Reformatted and added comments
	
2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enumerate CppUnit modules in comments in Makefile.in
	* src/api/Makefile.in (enumerate CppUnit modules in comment)
	* src/checkpoint/Makefile.in (enumerate CppUnit modules in comment)
	* src/conflict_db/Makefile.in (enumerate CppUnit modules in comment)
	* src/mba_utils/Makefile.in (enumerate CppUnit modules in comment)
	* src/readers/Makefile.in (enumerate CppUnit modules in comment)
	* src/tms/Makefile.in (enumerate CppUnit modules in comment)

2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Have CBFS_tracker::find_candidates() call
	CBFS_tracker::extend_candidates()
	* src/opsat/cbfs_tracker.cpp (find_fresh_candidates()) : Modified to
	  call extend_candidates(), which already carried out the final steps
	
2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in CBFS_tracker::find_fresh_candidates()
	* src/opsat/cbfs_tracker.cpp (find_fresh_candidates()) : Normalized
	  iterator loop

2001-09-25  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified CBFS_tracker::CBFS_tracker() to use initialization list
	* src/opsat/cbfs_tracker.cpp (CBFS_tracker()) : Modified to initialize
	  number_tracked with initialization list
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Un-commented commented out lines in debugging code in ltms.cpp
	* src/tms/ltms.cpp (move_support_debug_1(), move_support_debug_2()) :
	  un-commented commented out code; it compiles now that
	  operator<<(ostream&, Proposition&) has been added
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added operator<<(ostream&, Clause&)
	* src/tms/ltms.cpp (operator<<(ostream&, Clause&)) : added
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in
	Livingstone_debug::collectAllVariableNames()
	* src/debuggers/livingstone_debug.cpp (collectAllVariableNames()) :
 	  Enclosed iterator loops in curly braces

2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rearranged local variables in Variable::Variable()
	* src/conflict_db/variable.h (Variable()) :
	  Removed empty_list and negative and added posPropositions and
	  negPropsitions; added local const variables isVolatile and inTheory
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments an parameter names to prototypes
	* include/debuggers/L2_string_map.h (all) : added comments and
	  parameter names to prototypes
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added operator<<(ostream&, Proposition&)
	* src/tms/ltms.cpp (operator<<(ostream&, Proposition&)) : added
	  (get_clause_support(): un-commented commented-out code to use
	  operator<<(ostream&, Proposition&)
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed C-style cast to static_cast in 
	T_system_debug::find_discrepant_commands()
	* src/debuggers/T_system_debug.cpp (find_discrepant_commands()) :
	  Changed C-style cast to static_cast
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Ptheory::insert_clause() to return Clause*
	* src/tms/ptheory.cpp (insert_clause()) : modified to return Clause*
	  (create_clause()) : refactored to return what insert_clause() returns
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed parameters and local variables in Assignable::Assignable()
	* src/conflict_db/assignable.cpp (Assignable()): renamed parameters
	  and local variables
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed parameters in Ptheory::create_clause()
	* include/tms/ptheory.h (create_clause()) : renamed parameters
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed parameters in Clause::Clause()
	* include/tms/clause.h (Clause()) : renamed parameters
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed parameters in Conflict_db::create_clause() and
	Conflict_db::is_assumption()
	* include/conflict_db/conflict_db.h
	  (create_clause()) : renamed parameters
	  (is_assumption()) : renamed parameter
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted assumption.h
	* include/conflict_db/assumtion.h (all): Reformatted
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Assignment::is_assumption(Clause&)
	* src/conflict_db/assignment.cpp (is_assumption(Clause&)) :
	  Renamed formal parameter, changed C-style cast to static_cast,
	  rewrote return argument as boolean expression
	
2001-09-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed a formal parameter in Assignment::Assignment()
	* include/conflict_db/assignment.h (Assignment()) : renamed a formal
	  parameter
	
2001-09-21  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (setAttributeModeJNI): restored from
	  release 2.4
	* src/livdll/LivingstoneEngine.h (setAttributeModeJNI): restored
	  from release 2.4

2001-09-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to livingstone.h
	* include/api/livingstone.h (all) : added comments
	
2001-09-21  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized Ptheory::create_clause()
	* include/tms/ptheory.h (insert_clause()) : proceduralized from
	  create_clause()
	* src/tms/ptheory.cpp (insert_clause()) : proceduralized from
	  create_clause()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified CPAssignment::find_a_variable() to use
	T_system::get_present_variable() and Variable::is_*()
	* src/checkpoint/checkpoint.cpp (CPAssignment::find_a_variable()) :
	  Did it with is_command(), is_observable(), is_state_variable() and
	  is_transitioned()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Use T_system::get_present_variable() and Variable::is_*() instead of 
	T_system::is_*() and T_system::get_*()
	* src/api/livingstone.cpp
	  (observe()) : did it with is_observable()
	  (command()) : did it with is_command()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced tests on STATE_VAR_ID with Variable::is_state_variable()
	* src/debuggers/L2_string_map.cpp (get_variable_name(),
	  get_model_variable(), get_variable_domain, add_variable()) :
	  replaced test on STATE_VAR_ID with Variable::is_state_variable()
	* src/debuggers/L2_string_map_listener.cpp (truncating_candidate()) :
	  replaced test on STATE_VAR_ID with Variable::is_state_variable()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made CPAssignment::find_variable() protected
	* src/checkpoint/checkpoint.cpp (CPAssignment::find_variable()) : made
	  protected
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Variable::datum and its Conflict_db::reset_datum()
	* include/conflict_db/variable.h
	  (get_datum()) : removed
	  (set_datum()) : removed
	  (datum) : removed
	* include/conflict_db/conflict_db.h
	  (reset_datum()) : removed
	* src/conflict_db/variable.cpp
	  (Variable()) : removed datum from initializer list
	* src/conflict_db/conflict_db.cpp
	  (reset_datum()) : removed
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Abolished use of Variable::datum
	* include/transition/T_system.h
	  (enum VarType) : removed
	  (get_variable_type()) : removed
	  (class Variable_datum) : removed
	  (register_new_variable()) : removed second parameter
	* src/transition/T_system.cpp
	  (~T_system()) : removed code that manipulates the Variables' datum
	  (Old_variable_acceptor::accept()) : removed code that manipulates
	  the variable's datum
	  (create_state_var()) : removed second parameter from
	  call to T_system::register_new_variable()
	  (register_new_variable()) : removed second parameter and code that
	  manipulates it
	  (create_present_transitioned()) : removed second parameter from
	  call to T_system::register_new_variable()
	  (create_present_dependent()) : removed second parameter from
	  call to T_system::register_new_variable()
	  (create_present_observable()) : removed second parameter from
	  call to T_system::register_new_variable()
	  (create_present_command()) : removed second parameter from
	  call to T_system::register_new_variable()
	  (observe(unsigned, signed)) : changed first parameter in call to
	  T_system::observe()
	  (get_variable_type()) : removed
	  (create_cmd_assumption_in_past()) : removed second parameter from
	  call to T_system::register_new_variable()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced calls to T_system::get_variable_type() with calls to methods
	on class Variable
	* src/transition/T_sytem.cpp
	  (is_command()) : replaced call to T_system::get_variable_type()
	  with call to Variable::is_command()
	  (is_observable()) : replaced call to T_system::get_variable_type()
	  with call to Variable::is_observable()
	  (is_transitioned()) : replaced call to T_system::get_variable_type()
	  with call to Variable::is_transitioned()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced T_system::is_transitioned() with Variable::is_transitioned()
	in T_system::get_transitioned()
	* src/transition/T_system.cpp (get_observable()) : Replaced
	  T_system::is_transitioned() with Variable::is_transitioned()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Variable::is_transitioned()
	* include/conflict_db/variable.h (is_transitioned()) : added 
	* include/conflict_db/assignable.h (is_transitioned()) : added 
	* include/conflict_db/dependent.h (is_transitioned()) : added 
	* include/transition/transitioned.h (is_transitioned()) : added 
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced T_system::is_observable() with Variable::is_observable() in
	T_system::get_observable()
	* src/transition/T_system.cpp (get_observable()) : Replaced
	  T_system::is_observable() with Variable::is_observable()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced T_system::is_command() with Variable::is_command() in
	T_system::get_command()
	* src/transition/T_system.cpp (get_command()) : Replaced
	  T_system::is_command() with Variable::is_command()
	
2001-09-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Replaced T_system::is_command() with Variable::is_command() 2 times in
	Transitioned::Proto_transition::initialize()
	* src/transition/transitioned.cpp (Proto_transition::initialize()) :
	  Replaced T_system::is_command() with Variable::is_command() 2 times
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_string_map::L2_string_map() to initialize more in its
	initializer list
	* src/debuggers/L2_string_map.cpp (L2_string_map()) : Moved
	  initialization from the body to the initializer list
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_string_map::get_variable_name() to treat Transitions 
	specially, rather than all Assumptions
	* src/debuggers/L2_string_map.cpp (get_variable_name()) : Modified
	  if condition from is_assumption() to is_transition()
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2_string_map::get_variable_domain() to treat Transitions 
	specially, rather than all Assumptions
	* src/debuggers/L2_string_map.cpp (get_variable_domain()) : Modified
	  if condition from is_assumption() to is_transition()
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in L2_string_map::set_trajectory()
	* src/debuggers/L2_string_map.cpp (set_trajectory()) : Normalized
	  iterator loop
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in L2_string_map::add_variable()
	* src/debuggers/L2_string_map.cpp (add_variable()) : Normalized
	  iterator loop
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added missing comment characters in assignable.h
	* include/conflict_db/assignable.h (added missing comment characters)
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Variable::is_state_variable() and Variable::is_transition()
	* include/conflict_db/variable.h (is_state_variable(),
	  is_transition()) : added 
	* include/conflict_db/assignable.h (is_state_variable(),
	  is_transition()) : added 
	* include/conflict_db/dependent.h (is_state_variable(),
	  is_transition()) : added 
	* include/conflict_db/state_variable.h (is_state_variable()) : added 
	* include/conflict_db/transition.h (is_transition()) : added 
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in L2_string_map::~L2_string_map()
	* src/debuggers/L2_string_map.cpp (~L2_string_map()) : Normalized
	  iterator loop
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed conflict_db::create_assumption()
	* include/conflict_db/conflict_db.h (create_assumption()) : removed
	* src/conflict_db/conflict_db.cpp (create_assumption()) : removed
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::create_cmd_assumption_in_past() to create
	Past_command
	* include/transition/T_system.h (create_cmd_assumption_in_past()) :
	  Modified to create a Past_command object
	* src/transition/T_system.cpp (create_cmd_assumption_in_past()) :
	  Modified to create a Past_command object
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Conflict_db::create_past_command()
	* include/conflict_db/conflict_db.h (create_past_command()) : added
	  (include) : added include conflict_db/past_command.h
	* src/conflict_db/conflict_db.cpp (create_past_command()) : added
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added class Past_command
	* include/conflict_db/past_command.h (added class)
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified to_t_system::create_initial_state() to use State_variable*
	* src/readers/to_t_system.cpp (create_initial_state()) : Modified to
	  use State_variable*
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Transitioned::horizon_transition and
	Transitioned::zenith_transition to be Transition*
	* include/transition/transitioned.h
	  (get_horizon(), get_zenith()) : Modified to return Transition*
	  (horizon_transition, zenith_transition) : Modified to be Transition*
	* src/transition/transitioned.cpp
	  (Proto_transition::instantiate()) : Modified local variable
	  modeTransition to be Transition*	  
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::create_horizon_transition() and
	T_system::create_mode_transtition() to create a Transition object
	* include/transition/T_system.h
	  (create_horizon_transition(), create_mode_transition()) : Modified
	  to create a Transition object
	* src/transition/T_system.cpp
	  (create_horizon_transition(), create_mode_transition()) : Modified
	  to create a Transition object
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Conflict_db::create_transition()
	* include/conflict_db/conflict_db.h (create_transition()) : added
	  (include) : added include conflict_db/transition.h
	* src/conflict_db/conflict_db.cpp (create_transition()) : added
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added class Transition
	* include/conflict_db/transition.h (added class)
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed bug in to_t_system::ExpandClauseEquality(). The bug was reported
	by Charles Pecheur. For a negative equality, there were to pushes to
	neg but one pop from neg and one pop from pos.
	* src/readers/to_t_system.cpp (ExpandClauseEquality()) : for negative
	  equality, changed pos.pop() to neg.pop()
	
2001-09-19  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Transitioned::find_transition_prototypes()
	* src/transition/transitioned.cpp (find_transition_prototypes()) :
	  Normalized iterator loop
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Transitioned::Transitioned() to use initializer list
	* src/transition/transitioned.cpp (Transitioned()) : Modified to use
	  initializer list
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Transitioned::remove_destroyed_clauses()
	* src/transition/transitioned.cpp
	  (remove_destroyed_clauses()) : Normalized 2 iterator loops

2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in
	Transitioned::Proto_transition::initialize()
	* src/transition/transitioned.cpp
	  (Proto_transition::initialize()) : Normalized 2 iterator loops
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in Transitioned::set_antecedents()
	* src/transition/transitioned.cpp
	  (set_antecedents()) : Normalized 2 iterator loops
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in
	Transitioned::instantiate_all_indexed_clauses()
	* src/transition/transitioned.cpp
	  (instantiate_all_indexed_clauses()) : Normalized 2 iterator loops
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Transitioned::instantiate_indexed_clauses()
	* src/transition/transitioned.cpp
	  (instantiate_indexed_clauses()) : Normalized iterator loop
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	Transitioned::add_transition_prototype_to_table()
	* src/transition/transitioned.cpp
	  (add_transition_prototype_to_table()) : Normalized iterator loop
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	Transitioned::instantiate_autonomous_clauses()
	* src/transition/transitioned.cpp (instantiate_autonomous_clauses()) :
	  Normalized iterator loop
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	Transitioned::instantiate_unindexed_clauses()
	* src/transition/transitioned.cpp (instantiate_unindexed_clauses()) :
	  Normalized iterator loop
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added message "Optimizing model ..." to
	Java_LivingstoneEngine_loadModelJNI
	* src/livdll/livdll.cpp (Java_LivingstoneEngine_loadModelJNI()) : added
	  message "Optimizing model ..." before optimizer is called
	
2001-09-18  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added capability for reporting on optimized-away variables
	* include/debuggers/livingstone_debug.h
	  (include) : include mba_utils/array.h and mba_utils/MBA_string.h
	  (addVariableName()) : added
	  (addOptimizedAwayVariableName()) : added
	  (getVariableMapping()) : added
	  (setVariableMapping()) : added
	  (getRepresentativeVariable()) : added
	  (collectAllVariableNames()) : added
	  (getRepresentative()) : added
	  (beginAllVariableNames()) : added
	  (endAllVariableNames()) : added
	  (beginOptimizedAwayVariableNames()) : added
	  (endOptimizedAwayVariableNames()) : added
	  (variableHashMap) : added
	  (allVariableNames) : added
	  (optimizedAwayVariableNames) : added
	* src/debuggers/livingstone_debug.cpp
	  (collectAllVariableNames()) : added
	  (getRepresentative()) : added
	  (variableHashMap) : added
	  (allVariableNames) : added
	  (optimizedAwayVariableNames) : added
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverAttributeAssignmentsJNI()) : modified
	  to iterate over Livingstone_debug::allVariableNames
	* src/readers/xlate_map_eq_vars.cpp
	  (include) : include debuggers/livingstone_debug.h
	  (copy_all_vars()) : added code to store mapping and optimized-away
	  variables
	  	
2001-09-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized to_t_system::expandClause()
	* include/readers/to_t_system.h
	  (expandClauseEquality()) : proceduralized from expandClause()
	* src/readers/to_t_system.cpp (expandClause()) : proceduralized
	  (expandClauseEquality()) : proceduralized from expandClause()

2001-09-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in to_t_system::createTransitions()
	* src/readers/to_t_system.cpp (createTransitions()) : Normalized 2
	  iterator loops
	
2001-09-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made LTMS::find_proposition(), LTMS_debug::get_prop_name() and
	LTMS_debug::prop_constains_string() const
	* include/debuggers/ltms_debug.h (find_proposition(), get_prop_name(),
	  prop_contains_string()) : made const
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized LTMS_debug::parse_cmd()
	* include/debuggers/ltms_debug.h
	  (doAdd()) : proceduralized from parse_cmd()
	  (doRemove()) : proceduralized from parse_cmd()
	  (doPartialPropagate()) : proceduralized from parse_cmd()
	  (doPropagate()) : proceduralized from parse_cmd()
	  (doUnsatisfied()) : proceduralized from parse_cmd()
	  (doStatus()) : proceduralized from parse_cmd()
	* src/debuggers/ltms_debug.cpp (parse_cmd()) : Proceduralized
	  (doAdd()) : proceduralized from parse_cmd()
	  (doRemove()) : proceduralized from parse_cmd()
	  (doPartialPropagate()) : proceduralized from parse_cmd()
	  (doPropagate()) : proceduralized from parse_cmd()
	  (doUnsatisfied()) : proceduralized from parse_cmd()
	  (doStatus()) : proceduralized from parse_cmd()
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized LTMS_debug::pretty_print_clause()
	* include/debuggers/ltms_debug.h 
          (pretty_print_clause_no_negative()) : Proceduralized from
	    pretty_print_clause()
 	  (pretty_print_clause_no_positive()) : Proceduralized from
	    pretty_print_clause()
          (pretty_print_clause_positive_and_negative()) : Proceduralized from
	    pretty_print_clause()
	* src/debuggers/ltms_debug.cpp (pretty_print_clause()) : Proceduralized
          (pretty_print_clause_no_negative()) : Proceduralized from
	    pretty_print_clause()
 	  (pretty_print_clause_no_positive()) : Proceduralized from
	    pretty_print_clause()
          (pretty_print_clause_positive_and_negative()) : Proceduralized from
	    pretty_print_clause()

2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 4 iterator loops in LTMS_debug::pretty_print_clause()
	* src/debuggers/ltms_debug.cpp (pretty_print_clause()) : Normalized 4
	  iterator loops
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in LTMS_debug::explain_clause()
	* src/debuggers/ltms_debug.cpp (explain_clause()) : Normalized 2
	  iterator loops
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in LTMS_debug::find_iterator_clause()
	* src/debuggers/ltms_debug.cpp (find_iterator_clause()) : Normalized
	  iterator loop
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in ClauseStringChecker::operator()
	* src/debuggers/ltms_debug.cpp (ClauseStringChecker::operator()) :
	  Normalized 2 iterator loops
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in LTMS_debug::print_propositions()
	* src/debuggers/ltms_debug.cpp (print_propositions()) : normalized
	  iterator loop
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in LTMS_debug::clause_iterator()
	* src/debuggers/ltms_debug.cpp (clause_iterator()) : normalized
	  iterator loop
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in LTMS_debug::print_clause()
	* src/debuggers/ltms_debug.cpp (print_clause()) : normalized 2 iterator
	  loops
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in LTMS_debug::cprops()
	* src/debuggers/ltms_debug.cpp (cprops()) : normalized iterator loop
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	LTMS_debug::show_proposition_support(Proposition&)
	* src/debuggers/ltms_debug.cpp (shop_proposition_support(Proposition&):
	  Normalized iterator loop
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized main() in l2test.cpp
	* src/readers/l2test/l2test.cpp (main()) : proceduralized
	  (processOptions()) : proceduralized from main()
	  (doFile()) : proceduralized from processOptions()
	  (doHelp()) : proceduralized from processOptions()
	  (doVerbose()) : proceduralized from processOptions()
	
2001-09-14  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Commented out Hashable_prop::Hashable_prop(const L2rVariable*, 
	const L2rVariable*, bool) and Hashable_prop::Hashable_prop(const
	L2rVariable *, unsigned, bool) and refactored
	* src/readers/xlate_remove_duplicates.cpp
	  (HashableProp(const L2rVariable*, const L2rVariable*, bool)) :
	    commented out
	  (HashableProp(const L2rVariable*, unsigned, bool)) : commented out
	  (initialize(const L2rVariable *, const L2rVariable*, bool)) :
	    refactored
	  (operator==(const Hashable_prop&)) : refactored
	  (hasSamePropositions()) : added; proceduralized from
	    operator==(const Hashable_prop&)
	  (operator==(const Hashable_clause&)) : proceduralized
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed Livingstone_reader::apply_translator() from public to protected
	* include/readers/livingstone_reader.h (apply_translator()) : changed
	  from public to protected
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments and renamed variables in xlate_strip.cpp
	* src/readers/xlate_strip.cpp (all) : added comments and renamed
	  variables
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added class-level comment to xlate_strip.h
	* include/readers/xlate_strip.h (all) : added class-level comment
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified dbg_L2rEnumeration::dbg_L2rEnumeration() to use initializer
	list
	* src/readers/enumeration.cpp (dbg_L2rEnumeration()) : modified to use
	  initializer list
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2rEnumeration::L2rEnumeration() to use initializer list
	* include/readers/enumeration.h (L2rEnumeration()) : modified to use
	  initializer list
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Call Livingstone::set_use_optimizer(true) if params file specifies min
	progress
	* src/api/livingstone.cpp (read_file()) : call set_use_optimizer() if
	  params file specifies min_progress
	
2001-09-13  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and renamed variables in
	xlate_remove_duplicates::copy_all_clauses()
	* src/readers/xlate_remove_duplicates.cpp (copy_all_clauses()) :
	  Normalized iterator loop and renamed variables
	
2001-09-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added preconditions and postconditions
	* src/readers/xlate_sort_props.cpp
	  (count_props()) : added precondition and postcondition
	  (check_sorted()) : added precondition
	  (count_all_props()) : added preconditions
	
2001-09-11  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to xlate_sort_props.h
	* include/readers/xlate_sort_props.h (All) : added comments
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified comments in xlate_merge_eq_vars.h
	* include/readers/xlate_merge_eq_vars.h (all) : modified comments
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rearranged order and added comments
	* src/readers/livingstone_reader.h (all) : rearranged order and added
	  comments
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in
	L2_file_translator::copy_all_transitions()
	* src/readers/L2_file_translator.cpp (copy_all_transitions()) :
	  Normalized 2 iterator loops
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed negated condition bug in Livingstone::command()
	* src/api/livingstone.cpp (command()) : Fixed negated condition bug
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in xlate_merge_eq_vars::copy_all_vars()
	* src/readers/xlate_merge_eq_vars.cpp (copy_all_vars()) :
	  Normalized iterator loops
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	xlate_merge_eq_vars::compute_equivalence_classes()
	* src/readers/xlate_merge_eq_vars.cpp (compute_equivalence_classes()) :
	  Normalized iterator loop
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored xlate_merge_eq_vars::get_equivalence()
	* src/readersxlate_merge_eq_vars.cpp (get_equivalence()) : refactored
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in xlate_merge_eq_vars::get_equivalence_class()
	* src/readers/xlate_merge_eq_vars.cpp (get_equivalence_class()) :
	  Normalized iterator loop
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in xlate_merge_eq_vars::~xlate_merge_eq_vars()
	* src/readers/xlate_merge_eq_vars.cpp (~xlate_merge_eq_vars()) :
	  Normalized iterator loop
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in EqClass::absorb
	* src/readers/xlate_merge_eq_vars.cpp (EqClass::absorb()) :
	  Normalized iterator loop
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in EqClass::contains()
	* src/readers/xlate_merge_eq_vars.cpp (EqClass::constains()) :
	  Normalized iterator loop
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified xlate_merge_eq_vars::EqClass::EqClass() to use initializer
	list
	* src/readers/xlate_merge_eq_vars.cpp (EqClass:EqClass()) : modified to
	  use initializer list
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted and commented template class CBFSAgenda
	* include/opsat/cbfs_agenda.h
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted and commented class Opsat_CBFS
	* include/opsat/opsat.h (all) : Format and comment
	* src/opsat/opsat.cpp (all) : Format and comment
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Opsat_CBFS::Opsat_CBFS() to use initializer list
	* src/opsat/opsat.cpp (Opsat_CBFS()) : modified to use initializer list
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in SatisfactionSearch::superset_candidate()
	* src/opsat/opsat.cpp (SatisfactionSearch::superset_candidate()) :
	  Normalized iterator loop
	
2001-09-10  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized from_any::read()
	* include/readers/from_any.h (doRead(), readXMPL(), readL2(),
	  readL2bin()) : added
	* src/readers/from_any.cpp (doRead(), readXMPL(), readL2(),
	  readL2bin()) : added
	  (read()) : proceduralized

2001-09-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Restored T_system_debug::assign_mode(), which was removed on 12 JUL 2001
	* include/debuggers/T_system_debug.h (assign_mode()) : restored from
	  revision 1.14
	* src/debuggers/T_system_debug.cpp (assign_mode()) : restored from
	  revision 1.26, refactoring and adding input validity tests
	  (parse_cmd()) : restored else-if clause for "assign-mode" command
	  (listener_usage()) : restored help for "assign-mode" command
	
2001-09-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Restored Transitioned::set_mode(), which was removed on 12 JUL 2001
	* include/transition/transitioned.h (set_mode()) : restored from
	  revision 1.41
	* src/transition/transitioned.cpp (set_mode()) : restored from
	  revision 1.63
	
2001-09-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionalized compilation of try and catch in flight code
	* include/livingstone/L2_assert.h (L2_TRY) : defined L2_TRY
	
2001-09-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Conditionalized compilation of try and catch in flight code
	* src/api/livingstone.cpp (read_file(), initialize_tracker()) :
	  conditionalized try and catch
	* src/readers/from_any.cpp (read()) : conditionalized try and catch
	* src/readers/livingstone_reader.cpp (read_model_array(),
	  read_file(), apply_translator()) : conditionalized try and catch
	
2001-09-08  Will Taylor    <taylor@ptolemy.arc.nasa.gov>
	Add library and include settings for Windows VC++6.0:
	* src/livdll/livdll.dsp 
	* src/livingstone/livingstone.dsp
	
2001-09-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Addressed MSVC++ warnings because fileSize was returning a long but
	from_bin::modelSize had to be an unsigned int
	* include/from_bin.h (modelSize) : changed type from fpos_t to
	  unsigned int
	* src/from_bin.cpp (fileSize()) : changed return type from fpos_t to
	  unsigned int; cast second parameter of fseek from fpos_t to long
	
2001-09-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed uninitialized variable bug
	* src/debuggers/conflict_db_debug.cpp (print_conflict()) : fixed
	  uninitialized variable bug
	  
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Renamed some parameters in Conflict_db_debug
	* src/debuggers/conflict_db_debug.cpp
	  (get_variable_value(Variable&)) : renamed parameter
	  (get_variable_value(Variable&, int) : renamed parameter
	  (print_assignment()) : renamed parameter
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rewrote conditional in Livingstone_reader::optimize()
	* src/readers/livingstone_reader.cpp (optimize()) : rewrote conditional
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added comments to include/conflict_db/assignable.h
	* include/conflict_db/assignable.h (save() restore(), unassign()) :
	  Added comments
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Command::get_previous_command() and
	Observable::get_previous_observable()
	* src/conflict_db/command.h (get_previous_command()) : removed
	* src/conflict_db/observable.h (get_previous_observable()) : removed
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Tracker::map_over_observations() polymorphic to avoid casting
	* src/transition/tracker.cpp (map_over_observations()) : made
	  polymorphic to avoid casting

2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added virtual function Variable::unassign()
	* include/conflict_db/variable.h (unassign()) : added
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Conflict_db::save() and Conflict_db::restore() polymorphic to
	avoid casting
	* src/conflict_db/conflict_db.cpp (save(), restore()) : made
	  polymorphic to avoid casting

2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added virtual functions Variable::save() and Variable::restore()
	* include/conflict_db/variable.h (save(), restore()) : added
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Cast away const in Checkpoint before deleting 22 const char *
	variables 
	* src/checkpoint/checkpoint.cpp (startElement(), endElement(),
	  warning(), error(), fatalError(), handleStartTimes(),
	  handleStartAssignment(), handleStartInitialModeAssignments(),
	  handleStartInitialValue(), handleStartCandidate(),
	  handleStartFailure(), data::serialize()) : cast away const before
	  deleting const char * variables.
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2rTransition::L2rTransition() to use initializer list and do
	array bounds checking.
	* include/readers/transition.h (clause()) : changed from
	   bounds_check_access() to assert()
	   (toOStream_internal()) : added array bounds checking with assert()
	* src/readers/transition.cpp (L2rTransition()) : modified to use
	   initializer list and added array bounds checking with assert()
	
2001-09-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified L2rClause::L2rClause() to use initializer list and do array
	bounds checking.
	* include/readers/clause.h (prop()) : changed from
	   bounds_check_access() to assert()
	* src/readers/clause.cpp (L2rClause()) : modified to use initializer
	   list and added array bounds checking with assert()
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in
	T_system_debug::print_proto_transition()
	* src/debuggers/T_system_debug.cpp (print_proto_transition()) :
	  enclosed iterator loops in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed for loops in curly braces in T_system::do_create_constraint()
	* src/transition/T_system.cpp (do_create_constraint()) : enclosed
	  for loops in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in Assignable::Assignable()
	* src/conflict_db/assignable.cpp (Assignable()) : enclosed iterator
	  loops in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in
	Conflict_db::destroy_variables()
	* src/conflict_db/conflict_db.cpp (destroy_variables()) : enclosed
	  iterator loops in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in Ptheory
	* src/tms/ptheory.cpp (~Ptheory(), add(), initialize(),
	  finish_destroying()) : enclosed iterator loops in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in
	Proposition::set_destroying()
	* src/tms/proposition.cpp (set_destroying()) : enclosed iterator loops
	  in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in Clause::Clause()
	* src/tms/clause.cpp (Clause()) : encloded iterator loops in
	  curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system_debug::candidate_details
	* src/debuggers/T_system_debug.cpp (candidate_details()) : Normalized
	  iterator loop
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Enclosed iterator loops in curly braces in T_system
	* src/transition/T_system.cpp (Proto_constraint::Proto_constraint(),
	  ~T_system(), full_progress(), remove_old_variables(),
	  install_new_state(), planner_progress()) : enclosed iterator loops
	  in curly braces
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 4 iterator loops in Transitioned::~Transitioned()
	* src/transition/transitioned.cpp (~Transitioned()) : Normalized 4
	  iterator loops
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made parameters const in T_sytem_debug
	* include/debuggers/T_system_debug.h (print_proto_assignment(),
	  find_at_timestep(), find_current_command(),
	  find_current_observable(), find_current_mode()) : made parameters
	  const
	* src/debuggers/T_system_debug.cpp (print_proto_assignment(),
	  find_at_timestep(), find_current_command(),
	  find_current_observable(), find_current_mode()) : made parameters
	  const
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in
	T_system_debug::print_start_state_assignment()
	* src/debuggers/T_system_debug.cpp (print_start_state_assignment()) :
	  Normalized iterator loop
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 4 iterator loops in T_system_debug::print_transitioned()
	* src/debuggers/T_system_debug.cpp (print_transitioned()) :
	  Normalized 4 iterator loops

2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system_debug::print_variable_values()
	* src/debuggers/T_system_debug.cpp (print_variable_values()) :
	  Normalized iterator loop
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in T_system_debug::print_proto_transition()
	* src/debuggers/T_system_debug.cpp (print_proto_transition()) :
	  Normalized to iterator loops
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops
	in T_system_debug::find_discrepant_observations()
	* src/debuggers/T_system_debug.cpp (find_discrepant_observations()) :
	  Normalized 2 iterator loops
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system_debug::find_current_mode()
	* src/debuggers/T_system_debug.cpp (find_current_mode()) :
	  Normalized iterator loop
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system_debug::find_current_observable()
	and modified it to return Obesrvable*
	* include/debuggers/T_system_debug.h (find_current_observable()) :
	  Modified to return Observable*
	* src/debuggers/T_system_debug.cpp (find_current_observable()) :
	  Normalized iterator loop and modified to return Observable*
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system_debug::find_current_command()
	and modified it to return Command*
	* include/debuggers/T_system_debug.h (find_current_command()) :
	  Modified to return Command*
	* src/debuggers/T_system_debug.cpp (find_current_command()) :
	  Normalized iterator loop and modified to return Command*
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized T_system_debug::parse_cmd()
	* include/debuggers/T_system_debug.h 
	  (doStateVariableStyle(), doDiscrepancy(), doTransitions(),
	  doValues(), doTimes(), doOldestTime(), doCommands(),
	  doObservables(), doTransitioned(), doPlanSteps()) : added
	* src/debuggers/T_system_debug.cpp (parse_cmd()) : proceduralized
	  (doStateVariableStyle(), doDiscrepancy(), doTransitions(),
	  doValues(), doTimes(), doOldestTime(), doCommands(),
	  doObservables(), doTransitioned(), doPlanSteps()) : added
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added XERXESROOT to CPPFLAGS in Makefile.in for checkpoint
	* src/checkpoint/Makefile.in : added XERCESROOT to CPPFLAGS
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system_debug::time_variable_iterator()
	* src/debuggers/T_system_debug.cpp (time_variable_iterator()) :
	  Normalized iterator loop
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Tracker_debug::Tracker_debug() to use only initializer list
	* src/debuggers/tracker_debug.cpp (Tracker_debug()) : modified to use
	  only initializer list
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Proceduralized Tracker_debug::parse_cmd()
	* include/debuggers/tracker_debug.h
	  (doProgress(), doProgressStyle(), doPrintCandidates(),
	  doInstall(), doTruncate(), doFindCandidates(), doPruneAndSearch(),
	  doFindFreshCandidates(), doPrintTrackerStats(), dpPrintAllStats()) :
	  added
	* src/debuggers/tracker_debug.cpp (parse_cmd()) : proceduralized
	  (doProgress(), doProgressStyle(), doPrintCandidates(),
	  doInstall(), doTruncate(), doFindCandidates(), doPruneAndSearch(),
	  doFindFreshCandidates(), doPrintTrackerStats(), dpPrintAllStats()) :
	  added
	  
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rewrote conditionals in CBFS_tracker_debug::parse_cmd() and
	CBFS_tracker_debug::search_termination()
	* src/opsat/cbfs_tracker_debug.cpp (parse_cmd() and
	  search_termination()) : rewrote conditionals
	
2001-09-05  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added 'echo' and 'help' lines to 'help' command output in
	Livingstone_debug::run(istream&, bool)
	* src/debuggers/livingstone_debug.cpp (run(istream&, bool)) : added
	  'echo' and 'help' lines
	
2001-09-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Livingstone::Livingstone() to use initializer list
	* src/api/livingstone.cpp (Livingstone()) : modified to use initializer
	  list
	
2001-09-04  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Livingstone_debug::Livingstone_debug() to use initializer list
	* src/debuggers/livingstone_debug.cpp (Livingstone_debug()) : modified
	  to use initializer list
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Livingstone_reader::~Livingstone_reader()
	* src/readers/livingstone_reader.cpp (~Livingstone_reader()) :
	  Normalized iterator loop
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Livingstone_reader::Livingstone_reader() to use initializer
	list
	* src/readers/livingstone_reader.cpp (Livingstone_reader()) : modified
	  to use initializer list
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Serialze checkpoint to file using XML
	* include/checkpoint/checkpoint.h (serialize(), L2_checkpoint(Tracker&,
	  const MBA_string&), isValid(), valid) : added
	* src/checkpoint/checkpoint.cpp (serialize(), L2_checkpoint(Tracker&,
	  const MBA_string&), isValid(), valid) : added, along with private
	  methods

2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added class State_variable
	* include/conflict_db/state_variable.h (file) : added
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Variable::is_command() and Variable::is_observable()
	* include/conflict_db/assignable.h (is_command(), is_observable()) :
	  added
	* include/conflict_db/assumption.h (is_command(), is_observable()) :
	  added
	* include/conflict_db/command.h (is_command(), is_observable()) :
	  added
	* include/conflict_db/dependent.h (is_command(), is_observable()) :
	  added
	* include/conflict_db/observable.h (is_command(), is_observable()) :
	  added
	* include/conflict_db/variable.h (is_command(), is_observable()) :
	  added
	* include/transition/T_system.h (comments) : fixed comments
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 3 iterator loops in T_system::install_new_state().
	The prior commit was premature
	* src/transition/T_system.cpp (install_new_state()) : normalized 3
	  iterator loops
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored T_system::do_create_constraint()
	* src/transition/T_system.cpp (do_create_constraint()) : refactored
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Convert Assignable to Observable and Command in T_system	
	* include/transition/T_system.h (create_assumption_in_past()) : made
	  parameter Command&
	* src/transition/T_system.cpp (create_assumption_in_past()) : make
	  parameter Command&
	  (planner_progress()) : Changed iterators to
	  Slist<Observable*>::iterator and Slist<Command*>::iterator

	Removed T_system::create_present_assignable() since it is now subsumed
	by more specific methods
	* include/transition/T_system.h (create_present_assignable()) : removed
	* src/transition/T_system.cp (create_present_assignable()) : removed
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed T_system::state_var to class State_variable
	* include/transition/T_system.h (get_state_variable()) : returns
	  State_variable*
	  (create_state_var()) : returns State_variable *
	  (state_var) : changed to State_variable*
	* src/transition/T_system.cpp ()
	  (create_state_var()) : returns State_variable *
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::create_state_var() to call
	Conflict_db::create_state_variable()
	* src/transition/T_system.cpp (create_state_var()) : modified to use
	  Conflict_db::create_state_variable()
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Conflict_db::create_state_variable()
	* include/conflict_db/conflict_db.h (create_state_variable()) : added
	  (include) : #include <conflict_db/state_variable.h>
	* src/conflict_db/conflict_db.cpp (create_state_variable()) : added
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Tracker::map_over_observations()
	* src/transition/tracker.cpp (map_over_observations()) :
	  Normalized iterator loop
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Tracker::prune_inconsistent_candidates()
	* src/transition/tracker.cpp (prune_inconsistent_candidates()) :
	  Normalized iterator loop
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Tracker::erase()
	* src/transition/tracker.cpp (erase()) : Normalized iterator loop
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Tracker::add_candidate()
	* src/transition/tracker.cpp (add_candidate()) : Normalized iterator
	  loop
	
2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Convert Assignable to Command and Observable in T_system_debug
	* src/debuggers-T_system_debug.cpp
	  (find_current_command()) : use Slist<Command*>::iterator
	  (find_current_observable()) : use Slist<Observable*>::iterator
	  (find_discrepant_observations()) : use Slist<Observable*>

2001-08-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Converted T_system::commands to Slist<Command*> and
	T_system::obesrvables to Slist<Observable*>
	* include/transition/T_system.h
	  (begin_commands()): return Slist<Command*>
	  (end_commands()) : return Slist<Command*>
	  (begin_observables()) : return Slist<Observable*>
	  (end_observables()) : return Slist<Observable*>
	  (create_present_command()) : return Command*
	  (create_present_observable()) : return Observable*
	  (commands) : changed to Slist<Command*>
	  (observables) : changed to Slist<Observable*>
	* src/transition/T_system.cpp
	  (create_present_observable()) : calls create_observable()
	  (create_present_command()) : calls create_command()
	* src/transition/tracker.cpp
	  (map_over_observations()) : use Slist<Observable*>::iterator,
	  call get_previous_observable()
	* src/livdll/livdll.cpp
	  (Java_LivingstoneEngine_mapOverCommandAttributeNamesJNI) : use
	  Slist<Command *>::iterator
	  (Java_LivingstoneEngine_mapOverObservableAttributeNamesJNI) : use
	  Slist<Observable *>::iterator
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added T_system::copy_in_past(Observable&)
	* include/transition/T_system.h (copy_in_past(Observable&)) : added
	* src/transition/T_system.cpp (copy_in_past(Observable&)) : added
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Conflict_db::create_observable()
	* include/conflict_db/conflict_db.h (create_observable()) : added
	* src/conflict_db/conflict_db.cpp (create_observable()) : added
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Livingstone::progress() to call
	Tracker::progress(Command&, unsigned int)
	* src/api/livingstone.cpp (progress()) : Modified to call
	Tracker::progress(Obserbable&, unsigned int)
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added T_system::minimal_progress(Command&, unsigned int,
	Slist<Assumption *>), full_progress(Command&, unsigned int,
	Slist<Assumption *>), cmd_enums_to_assignment(Command&, unsigned int)
	* include/transition/T_system.h
	  (T_system::minimal_progress(Command&, unsigned int,
	  Slist<Assumption *>),
	  full_progress(Command&, unsigned int, Slist<Assumption *>),
	  cmd_enums_to_assignment(Command&, unsigned int)) : added
	* src/transition/T_system.cpp
	  (T_system::minimal_progress(Command&, unsigned int,
	  Slist<Assumption *>),
	  full_progress(Command&, unsigned int, Slist<Assumption *>),
	  cmd_enums_to_assignment(Command&, unsigned int)) : added
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Tracker::progress(Command&, unsigned int),
	Tracker::full_progress(Command&, unsigned int) and
	Tracker::minimal_progress(Command&, unsigned int)
	* include/transition/tracker.h (progress(Command&, unsigned int),
	  full_progress(Command&, unsigned int), minimal_progress(Command,
	  unsigned int) : added
	* src/transition/tracker.cpp  (progress(Command&, unsigned int),
	  full_progress(Command&, unsigned int), minimal_progress(Command,
	  unsigned int) : added
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::get_command() to return Command*
	* include/transition/T_system.h (get_command()) : modified to return
	  Command*
	* src/transition/T_system.h (get_command()) : modified to return
	  Command*
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Livingstone::observe() to call
	Tracker::observe(Obserbable&, signed)
	* src/api/livingstone.cpp (observe()) : Modified to call
	Tracker::observe(Obserbable&, signed)

2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added Tracker::observe(Observable&, signed)
	* include/tracker/tracker.h (observe(Observable&, signed)) : added
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added T_system::observe(Observable&, signed)
	* include/transition/T_system.h (observe(Observable&, signed)) : added
	* src/transition/T_system.cpp (observe(Observable&, signed)) : added
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified T_system::get_observable() to return Observable*
	* include/conflict_db/conflict_db.h (include) : added
	  #include <conflict_db/observable.h>
	* include/transition/T_system.cpp (get_observable()) : modified to
	  return Observable *
	* src/transition/T_system.cpp (get_observable()) : modified to return
	  Observable *
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Livingstone::observe
	* src/api/livingstone.cpp (observe()) : Refactored
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Undid prior checkin
	* src/debuggers/conflict_db_debug.cpp (print_candidate()) : Undid prior
	  checkin	

2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Simplified Conflict_db_debug::print_candidate()
	* src/debuggers/conflict_db_debug.cpp (print_candidate()) : Simplified
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict_db_debug::print_conflict()
	* src/debuggers/conflict_db_debug.cpp (print_conflict()) : Normalized
	  iterator loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method T_system::copy_in_past(Command&) and used it in 
	T_system::minimal_progress()
	* include/transition/T_system.h (copy_in_past(Command&)) : added
	* src/transition/T_system.cpp (copy_in_past(Command&)) : added
	  (minimal_progress()) : modified to use copy_in_past(Command&)
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method Conflict_db::create_command()
	* include/conflict_db/conflict_db.h (create_command()) : added
	* src/conflict_db/conflict_db.cpp (create_command()) : added

2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant #include <livingstone/l2conf.h> from tracker_debug.h
	* include/debuggers/tracker_debug.h (#include <livingstone/l2conf.h>) :
	  removed because it was #included by MBA_string.h

2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict::Conflict()
	* src/conflict_db/conflict.cpp (Conflict()) : Normalized iterator loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict::resolving_assignments()
	* src/conflict_db/conflict.cpp (resolving_assignments()) : Normalized
	  iterator loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Dependent::get_previous_dependent() const
	* src/conflict_db/dependent.h (get_previous_dependent()) : made const
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assumption::Assumption()
	* src/conflict_db/assumption.cpp (Assumption()) : Normalized iterator
	  loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Partially normalized iterator loop in Variable::~Variable()
	* src/conflict_db/variable.cpp (Variable()) : Partially normalized
	  iterator loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Variable::get_value()
	* src/conflict_db/variable.cpp (get_value()) : Normalized
	  iterator loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Variable::get_value_index()
	* src/conflict_db/variable.cpp (get_value_index()) : Normalized
	  iterator loop

2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignable::~Assignable()
	* src/conflict_db/assignable.cpp (~Assignable()) : Normalized iterator
	  loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignable::Assignable()
	* src/conflict_db/assignable.cpp (Assignable()) : Normalized iterator
	  loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made constant variables const and moved next to point of use in 
	Assignable::Assignable()
	* src/conflict_db/assignable.cpp (Assignable()) : Made in_db and
	  is_volatile consts and moved next to point of use
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignable::Assignable()
	* src/conflict_db/assignable.cpp (Assignable()) : Normalized iterator
	  loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Assignment::Assignment() to use initializer list
	* include/conflict_db/assignment.h (Assignment()) : Modified to use
	  initializer list
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignment::set_other_values()
	* include/conflict_db/assignment.h (set_other_values()) : Normalized
	  iterator loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignment::add_conflict()
	* src/conflict_db/assignment.cpp (add_conflict()) : Normalized iterator
	  loop
	
2001-08-29  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Assignment::is_assumption() const and commented definition
	* include/conflict_db/assignment.h (is_assumption()) : made const
	* src/conflict_db/assignment.h (is_assumption()) : made const
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Assignment::is_assumption()
	* src/conflict_db/assignment.cpp (is_assumption()) : Refactored
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Assignable::assign(Assignment*)
	* src/conflcit_db/assignable.cpp (assign(Assignment*)) : Refactored
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignable::assign(unsigned int)
	* src/conflict_db/assignable.cpp (assign(unsigned int)) : Normalized
	  iterator loop
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignable::get_assignment()
	* src/conflict_db/assignable.cpp (get_assignment()) : Normalized
	  iterator loop

2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expanded Assignable::restore_initial_default()
	* include/conflict_db/assignable.h (restore_initial_default()) :
	  expanded
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Assignable::erase_conflicts()
	* include/conflict_db/assignable.h (erase_conflicts()) : Normalized
	  iterator loop
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Assignable::get_current() const
	* include/conflict_db/assignable.h (get_current()) : made const
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Variable::get_previous() and Assignable::get_previous_assignable()
	const
	* include/conflict_db/assignable.h (get_previous_assignable()) : made
	   const
	* include/conflict_db/variable.h (get_previous()) : made const
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loops in
	T_system::Proto_constraint::Proto_constraint()
	* src/transition/T__system.cpp(Proto_constraint::Proto_constraint()) :
	  Normalized iterator loops
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops in T_system::~T_system()
	* src/transition/T_system.cpp (~T_system()) : normalized 2 iterator
	  loops
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and guarded output in
	T_system::minimum_progress()
	* src/transition/T_system.cpp (minimal_progress()) : normalized
	  iterator loop and guarded output
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system::idle()
	* src/transition/T_system.cpp (idle()) : normalized iterator loop
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 5 iterator loops in T_system::full_progress()
	* src/transition/T_system.cpp (full_progress()) : normalized 5 iterator
	  loops
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Partially normalized iterator loop in T_system::splice()
	* src/transition/T_system.cpp (splice()) : partially normalized
	  iterator loop
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Redid conditional in T_system::history_full()
	* src/transition/T_system.cpp (history_full()) : redid conditional
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and renamed variables
	in T_system::conflict_is_old
	* src/transition/T_system.cpp (conflict_is_old()) : normalized iterator
	  loop and renamed variables
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 3 iterator loops in T_system::remove_old_variables()
	* src/transition/T_system.cpp (remove_old_variables()) : normalized
	  3 iterator loops
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in T_system::create_state_var()
	* src/transition/T_system.cpp (create_state_var()) : normalized
	  iterator loop
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and renamed variables in
	T_system::summarize_variables()
	* src/transition/T_system.cpp (summarize_variables()) : normalized
	  iterator loop and renamed variables
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and renamed variables in
	T_system::conflict_has_old_active_assignments
	* src/transition/T_system.cpp (conflict_has_old_active_assignments()) :
	  normalized iterator loop and renamed variables
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 2 iterator loops, renamed variables and simplified
	conditionals in T_system::summarize_conflicts
	* src/transition/T_system.cpp (summarize_conflicts()) : normalized 2
	  iterator loops, renamed variables and simplified conditionals
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 6 iterator loops in T_system::planner_progress()
	* src/transition/T_system.cpp (planner_progress()) : normalized 6
	  iterator loops
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made T_system::get_present_variable() and T_system::get_state_variable
	const
	* include/transition/T_system.h (get_present_variable()) : made const
	  (get_state_variable()) : made const
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Rewrote conditional in T_system::get_horizon()
	* include/transition/T_system.h (get_horizon()) : rewrote conditional
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made size() and num_conflicts() const
	* include/conflict_db/conflict_db.h (size()) : made const
	  (num_conflicts()) : made const
	
2001-08-28  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict_db::is_assumption()
	* src/conflict_db/conflict_db.cpp (is_assumption()) : normalized
	  iterator loop
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict_db::reset_datum()
	* src/conflict_db/conflict_db.cpp (reset_datum()) : normalized iterator
	  loop
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and used dynamic_cast in Conflict_db::save()
	* src/conflict_db/conflict_db.cpp (save()) : normalized iterator
	  loop and used dynamic_cast
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop and used dynamic_cast in Conflict_db::restore()
	* src/conflict_db/conflict_db.cpp (restore()) : normalized iterator
	  loop and used dynamic_cast
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized 3 iterarator loops in Conflict_db::destroy_variables()
	* src/conflict_db/conflict_db.cpp (destroy_variables()) : normalized
	  3 iterator loops
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict_db::~Conflict_db()
	* src/conflict_db/conflict_db.cpp (~Conflict_db()) : normalized
	  iterator loop
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Conflict_db::add_conflict()
	* src/conflict_db/conflict_db.cpp (add_conflict()) : refactored
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Conflict_db::find_subsuming_conflict() to normalize two
	iterator loops
	* src/conflict_db/conflict_db.cpp (find_subsuming_conflict()) :
	  refactored to normalize two iterator loops.
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Conflict_db::conflict() mostly to normalize iterator loop
	* src/conflict_db/conflict_db.cpp (conflict()) : refactored, mostly to
	  normalize iterator loop. Also renamed variables and made block
	  structure explicit.
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Conflict_db::restore_assumption_defaults()
	* src/conflict_db/conflict_db.cpp (restore_assumption_defaults()) :
	  normalized iterator loop
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made begin_clauses(), end_clauses(), begin_propositions(),
	end_propositions(), num_clauses() and num_propositions() const
	* include/tms/ptheory.h (begin_clauses(), end_clauses(),
	  begin_propositions(), end_propositions(), num_clauses(),
	  num_propositions()) : made const
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Many minor cosmetic changes, such as variable names
	* src/tms/ptheory.cpp (many methods) : minor cosmetic changes
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Normalized iterator loop in Ptheory::~Ptheory()
	* src/tms/ptheory.cpp (~Ptheory()) : normalized iterator loop
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Many minor cosmetic changes, such as variable names
	* src/tms/ltms.cpp (many methods) : minor cosmetic changes
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Clause::get_supports() const
	* include/tms/clause.h (get_supports()) : made const
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Expressed some read accessors more concisely
	* include/tms/clause.h (is_deleted(), is_in_fringe(), is_unsatisfied(),
	  is_traced(), is_break(), is_volatile()) : expressed more concisely
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed pointer arithmetic from Clause::get_supports()
	* include/tms/clause.h (get_supports()) : removed pointer arithmetic

2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Clause::Clause() to normalize iterator loops
	* src/tms/clause.cpp (Clause()) : modified to normalize iterator loops
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Clause::Clause() to use initializer list
	* src/tms/clause.cpp (Clause()) : modified to use initializer list

2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed redundant method Clause::set_supports(Clause::iterator&)
	* include/tms/clause.h (set_supports(Clause::iterator&)) : removed
	  (get_unassigned_literal()) : modified to return Proposition* instead
	  of Clause::iterator
	* src/tms/ltms.cpp (partial_propagate(), propagate()) : 
	  get_unassigned_literal() now returns proposition directly
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Clause::find_and_set_satisfying_prop()
	* src/tms/clause.cpp (find_and_set_satisfying_prop()) : refactored
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed Clause::clear_supports() and replaced all calls with calls to
	Clause::set_supports(static_cast<Propoistion *>(0))
	* include/tms/clause.h (clear_suports()) : removed
	* src/tms/ltms.cpp (add(), remove(), initialize_clause(), unassign()) :
	  changed calls to clear_support() to
	  set_supports(static_cast<Proposition *>(0)) (4 instances)
	
2001-08-27  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Clause::set_supports to not use pointer artithmetic
	* include/tms/clause.h (set_supports()) : refactored to not use pointer
	  arithmetic
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified constructor to use initializer list
	* src/conflict_db/variable.cpp (Variable()) : used initializers
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Variable::get_datum() and Variable::get_next() const
	* include/conflict_db/variable.h (get_datum(), get_next()) : made const
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Proposition::is_destroying() and Proposition::value() const;
	added local iterator loop variables
	* src/tms/proposition.h (is_destroying(), value()) : made const
	  (remove_positive(), remove_negative()) : added local variable in
	  iterator loop

2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified Proposition::Proposition() to use initializers and refactored
	iterator loops in Proposition::set_destroying()
	* src/tms/proposition.cpp (Proposition()) : use initializers
	  (set_destroying()) : refactored iterator loops
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted and refactored iterator loop in LTMS::finish_destroying
	* src/tms/ltms.cpp (finish_destroying()) : reformatted and refactored
	  iterator loop
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted and lightly refactored Ptheory::finish_destroying
	* src/tms/ptheory.cpp (finish_destroying()) : reformatted, removed
	  two superfluous continues, moved loop variables inside iterator
	  loops
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Ptheory::assign() and Ptheory::unassign() protected
	* include/tms/ptheory.h (assign(), unassign()) : made protected
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted and lightly refactored Ptheory::assign() and
	Ptheory::unassign()
	* src/tms/ptheory.cpp (assign(), unassign()) : reformatted, moved
	  variables more locally. Changed an erroneous L2_assert message.
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Reformatted Ptheory::add() and Ptheory::remove()
	* src/tms/ptheory.cpp (add(), remove()) : reformatted and added curly
	  braces to if-then-else statements
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Ptheory::add()
	* src/tms/ptheory.cpp (add()) : refactored iterator loop
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified virtual intialization methods in LTMS to invoke methods in
	base class Ptheory for common functionality
	* src/tms/ltms.cpp (initialize_self()) : call
	  Ptheory::initialize_self() for common functionality
	  (initialize_prop()) : call Ptheory::initialize_prop() for common
	  functionality
	  (initialize_clause()) : call Ptheory::initialize_clause() for common
	  functionality
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored Ptheory::intialize()
	* src/tms/ptheory.cpp (initialize()) : refactored iterator loop
	
2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made LTMS::initialize_self(), LTMS::initialize_prop() and
	LTMS::initialize_clause() protected rather than public
	* include/tms/ltms.h (initialize_self()) : made protected
	 (initialize_prop()) : made protected
	 (initialize_clause()) : made protected

2001-08-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Re-formatting and shallow refactoring to src/tms/ltms.cpp
	* src/tms/ltms.cpp (get_clause_support()) : Added local variable,
	 commented out debugging code that doesn't compile
 	 (last_conflict()) : proceduralized debugging code
	 (move_support()) : reformatted, moved local variables closest to point
	 of first use
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Changed the loop in LTMS:partial_propagate to make it clearer
	* src/tms/ltms.cpp (partial_propagate()) : rewrote loop
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored LTMS::partial_propagate() to put variable declarations
	within loop
	* src/tms/ltms.cpp (partial_propagate()) : refactored
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Refactored LTMS::propagate() to put variable declarations within loop
	* src/tms/ltms.cpp (propagate()) : refactored
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Proposition::depth.
	Note that these accessors have no clients.
	* include/tms/proposition.h (get_depth(), set_depth()) : added
	  definition
	* include/tms/ptheory.h (get_depth(), set_depth()) : removed definition
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Proposition::supported_by
	* include/tms/proposition.h (set_supported_by()) : added definition
	* include/tms/ptheory.h (set_supported_by()) : removed definition
	* src/tms/ltsm.cpp (initialize_prop(), assign(), unassign()) : 
	  substituted accessor 3 times

2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Proposition::value
	* include/tms/proposition.h (set_value()) : added definition
	* include/tms/ptheory.h (set_value()) : removed definition
	* src/tms/ltms.cpp (initialize_prop(), assign(), unassign()) :
	  substituted accessors 3 times
	* src/tms/ptheory.cpp (initialize_prop()) : substituted accessor 1 time
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Clause::flags
	* include/tms/clause.h (set_deleted()) : added definition
	  (clear_unsatisfied()) : added definition
	* include/tms/ptheory.h (set_deleted()) : removed definition
	  (clear_unsatisfied()) : removed definition
	* src/tms/ltms.cpp (insert_into_unsat(), remove_from_unsat(), add(),
	   initialize_clause()) : substituted accessors 4 times
	* src/tms/ptheory.cpp (add(), remove()) : substituted accessors 2 times
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Clause::supports
	* include/tms/clause.h (set_supports()) : added definition
	  (clear_supports()) : added definition
	* include/tms/ptheory.h (set_supports()) : removed definition
	  (clear_supports()) : removed definition
	* src/tms/ltms.cpp (set_supports(), clear_supports()) : substituted
	  accessors 5 times
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Clause::satisfying_prop
	* include/tms/clause.h (set_satisfying_prop()) : added definition
	* include/tms/ptheory.h (set_satisfying_prop()) : removed definition
	* src/tms/ltms.cpp (initialize_clause(), assign(), unassign()) :
	  substituted accessors 3 times
	* src/tms/ptheory.cpp (add(), initialize_clause()) : substituted
	  accessors 2 times
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Clause::time_stamp
	* include/tms/clause.h (get_time_stamp()) : added definition
	  (set_time_stamp()) : added definition
	* include/tms/ptheory.h (get_time_stamp()) : removed definition
	  (set_time_stamp()) : removed definition
	* src/tms/ltms.cpp (get_clause_support(), initialize_clause()) :
	  substituted accessors 3 times
	* src/tms/ptheory.cpp (initialize_clause()) : substituted accessors
	  1 time
	
2001-08-23  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed unnecessary indirection in access to Clause::num_unassigned
	* include/tms/clause.h (set_unassigned_count()) : added definition
	  (incr_num_unassigned()) : added declaration
	  (decr_num_unassigned()) : added declaration
	* include/tms/ptheory.h (get_num_unassigned()) : removed definition
	  (set_num_unassigned()) : removed definition
	  (incr_num_unassigned()) : removed definition
	  (decr_num_unassigned()) : removed definition
	* src/tms/clause.cpp (incr_num_unassigned()) : added definition
	  (decr_num_unassigned()) : added definition
	* src/tms/ltms.cpp (add(), initialize_clause(), assign(), unassign(),
	  move_support()) : substituted accessors 12 times
	* src/tms/ptheory.cpp (add(), initialize_clause()) : substituted
	  accessors 4 times
	
2001-08-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made Ptheory::add_listener(NULL) and Ptheory::remove_listener(NULL) no-ops
	* include/tms/ptheory.h (add_listener) body executed only if listen arg is non-null
	  (remove_listener) body executed only if listen arg is non-null
	
2001-08-22  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed definition that is no longer needed since I replaced the C array
	with Array<Assignment *>
	* include/conflict_db/candidate.h removed definition of macro
	  MAX_CANDIDATE_SIZE

2001-08-08  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (executeWarpCommandsJNI): added
        * src/livdll/LivingstoneEngine.h (executeWarpCommandsJNI): added

2001-08-08  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	In conflict_db/candidate.*, the set of Assignments was represented as
	a C array of Assignment * of size 400. I replaced this with an object
	of class Array<Assignment *>
	* include/conflict_db/candidate.h
	  (include) : add #include <mba_utils/array.h>
	  (constructors) : removed initializer for last_assign (2 overloaded)
	  (copy constructor) : replaced index loop with iterator loop
	  (operator=()) : replaced index loop with iterator loop
	  (size()) : gets size from Array, not last_assign
	  (contains()) : replaced index loop with iterator loop
	  (assignments) : changed from C array to Array<Assignment *>
	  (last_assign) : removed
	  (superset_of_aux) : replaced index loop with iterator loop
	* src/conflict_db/candidate.cpp
	  (assign()) : replaced index loop with iterator loop
	  (add()) : replaced array access with push
	  (remove()) : replaced index loop with iterator loop
	  (truncate()) : replaced index loops with iterator loop
	  (smallest_unresolved_conflict()) : replaced index loop with iterator
	  loop
	  (get_conflict_assignments()) : replaced index loop with iterator loop
	  (equivalent()) : replaced index loop with iterator loop
	  (add_consistently()) : replaced index loop with iterator loop
	  (conflict_not_resolved()) : replaced index loop with iterator loop
	  (consistent_assignment()) : replaced index loop with iterator loop
	  (sum_assignment_weights()) : replaced index loop with iterator loop
	  (get_assignment()) : compared index against size(), not last_assign
	
2001-08-07  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	The previous changes broke the regression tests, and I wasn't able to
	fix the problem, but I was able to back up the changes minimally to
	make the problem go away.
	* include/conflict_db/variable.h (get_value_index()) : removed const
	(begin_props()) removed const iterator
	(end_props()) removed const iterator
	* src/conflict_db/variable.cpp (get_value_index()) : removed const;
	  reverted to prop_iterator
	* include/debuggers/conflict_db_debug.h (get_variable_value()) :
	  removed const from method and Variable parameter (2 overloaded)
	  (print_assignment()) : removed const from Assignment parameter (2
	  overloaded)
	* src/debuggers/conflict_db_debug.cpp (get_variable_value()) : removed
	  const; changed name of Variable and int parameters (2 overloaded)
	  (print_assignment()) : removed const from Assignment parameter
	
2001-08-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	To handle Problem Report 1381 "Casting away const in debugger"
	Had to propagate const several levels, and define a const iterator
	* include/conflict_db/assignment.h (get_clause()): made const
	* include/conflict_db/variable.h (get_value_index()) made const
	  (begin_props()) added a const iterator
	  (end_props()) added a const iterator
	* include/debuggers/L2_string_map.h (get_variable_name()) : made parameter const
	  (get_variable_values()) : made parameter const
	  (get_variable_domain()) : made parameter const; renamed parameter; cached
	  value of variable.get_id() in local variable
	* include/debuggers/conflict_db_debug.h (get_variable_value()) : made parameter
	  const in both overloaded methods
	  (get_var_name()): made parameter const
	  (print_assignment()): made parameter const in both overloaded methods
	* src/conflict_db/variable.cpp (get_value_index()) made const; uses new const
	  interator
	  (get_variable_values()) : made parameter const
	  (get_variable_domain()) : made parameter const
	* src/debuggers/L2_string_map.cpp (get_variable_name()) : made parameter const
	* src/debuggers/conflict_db_debug.h (get_variable_value()) : made parameter
	  const in both overloaded methods; renamed parameters
	  (get_var_name()) : made parameter const
	  (print_assignment()) : made parameter const	  
	
2001-08-03  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Moved "#include <mba_utils/pair.h> from
	include/conflict_db/conflict_db.h to include/transition/T_system.h
	It was not needed by class Conflict_db, but was needed by class
	T_system, which does #include <conflict_db/conflict_db.h>
	* include/conflict_db/conflict_db.h (includes) : removed
	  #include <mba_string/pair.h>
	* include/transition/T_system.h (includes) : added
	  #include <mba_string/pair.h>
	
2001-08-01  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	* src/readers/from_memory.cpp (includes): removed #include <unistd>,
	  which is no longer needed for anything and prevents compilation on
	  non-Unix systems
	
2001-07-30  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	* src/readers/from_memory.cpp (read()): modified to return false if
	  dest() == 0, theModel == 0 or static_cast<int>(modelSize) <= 0
	
2001-07-27  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* RELEASE 2.5: tagged L2Skunk_2_5
	* src/livingstone/version.c : update for 2.5

2001-07-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        * doc/developer_man/l2dev.manual : fixed the code so that it will
                write version & date in the html, and added some talk
                about the user manual and purpose of this manual.  Also
                bumped the version number to 2.5
        * doc/developer_man/l2dev.html : regenerated

2001-07-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added the beautiful graph of the configure interdependencies;
        note config.png is generated but is already implicitely in
        l2_update.
        * doc/developer_man/config.graph
          doc/developer_man/config.png
          doc/developer_man/graph_reader.pl : added
        * doc/developer_man/Makefile.in (DOT, PERL): added variables
                (ALL_FIGURES): added config.png
                (html rule): switched to using ALL_FIGURES
                (texi from manual rule): use ${PERL} not @ PERL @
                (config.png from config.dot from config.graph): added
        * doc/developer_man/configuration.manual : added all the detail
        * doc/developer_man/l2dev.html : regenerated

2001-07-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        * doc/developer_man/philosophy.manual
          doc/developer_man/loop.c
          doc/developer_man/configuration.manual : added
        * doc/developer_man/Makefile.in (TEXI_FILES): added them
        * doc/developer_man/l2dev.manual (DATE): updated
                (menu): added philosophy and configuration
                And added the includes at the appropriate spots.
        * doc/developer_man/l2dev.html : regenerated

2001-07-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/mba_utils/hash_table.cpp (includes): removed utils.h

2001-07-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed the ugliness that was utils.h ; the more acceptable parts
        have been moved to l2conf.h so we only have one globally-included
        file.
        * include/mba_utils/utils.h : removed
        * include/livingstone/l2conf.h (MAX_LINE_SIZE, VC++ pragmas):
                        lifted from utils.h

        * include/mba_utils/MBA_string.h (includes): removed utils.h
                (char_p and const_char_p): changed to char*/const char*
                (compare): moved with other comparison operators
                (operators !=, <=, >=, >): added
        * include/mba_utils/hash_table.h (includes): removed utils.h
                (iterator::operator!=): added
        * src/mba_utils/hash_table.cpp (EOS, const_char_p): replaced
                        by '\0' and const char*
        * include/mba_utils/slist.h (includes): removed utils.h
                (begin): C-style cast, not "static_cast" that was actually a
                        macro for it

        * src/debuggers/conflict_db_debug.cpp (assign): changed a comment
                to remove the string 'EOS' from the file

        * include/conflict_db/assignable.h
          include/conflict_db/assignment.h
          include/conflict_db/assumption.h
          include/conflict_db/conflict.h
          include/conflict_db/variable.h
          include/tms/clause.h
          include/tms/ptheory.h
          include/mba_utils/array_allocator.h
          include/mba_utils/pair.h
          include/mba_utils/prime.h
          include/mba_utils/slist_iterator.h (includes): removed utils.h


2001-07-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (requirements): removed verbiage about the Ames
                installation, since everyone's on Solaris 8 now.
                Also added verbiage about gcc-3.0 not yet supported.

2001-07-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (with-purify): added

2001-07-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * TODO : added a word about adding enables for the readers

2001-07-25  Scott Christa  <schrista@arc.nasa.gov>
        Updated Tornado and Microsoft project files.
        * src/readers/readers.dsp: Added from_memory.cpp and from_memory.h.
        * src/mba_utils/mba_utils.dsp: Removed MBA_string.cpp.
        * src/readers/l2test/l2test.wpj: Regenerated the dependencies and
                removed MBA_string.cpp
        * src/readers/readers.wpj: Added from_memory.cpp and regenerated
                the dependencies.

2001-07-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changes to make it compile with gcc-3.0.  I'm not sure it runs
        yet.  Of note, I don't have it running quite yet under 3.0.

        * include/livingstone/L2_assert.h (L2_throw as print&abort): added
                extraneous while(1) loop since 3.0/c++ doesn't know
                that abort is noreturn (see PR gcc-bugs c++/3821)

        * include/api/livingstone.h (invalid): made a function
        * src/api/livingstone.cpp (invalid): made a function
                (get_failure): add parens to call invalid()

        * src/api/parameters.cpp (read_from_file): don't specify ios::nocreate
                since it's nonstandard.  Note that this may cause the
                file to be created on Win32 ; if so, we'll need to
                add an ifdef WIN32 to specify nocreate only on that
                platform.

        * include/readers/common.h (bounds_check_access): added a version
                with one less const ; gcc-3.0 doesn't otherwise find the
                template.

        * configure.in (CHECK_HEADERS(new), CXX_HAS_PLACEMENT_NEW): added checks
        * aclocal.m4 (LIV_CXX_THROW_BADALLOC): conditionally include new,
                    *unrelated* restore the language at the end
                (LIV_CXX_HAS_PLACEMENT_NEW): added
        * configure : regnerated
        * acconfig.h (HAVE_PLACEMENT_NEW): added
        * include/livingstone/gnu_conf.h.in : regenerated
        * include/mba_utils/array_allocator.h (includes): new, conditionally
                (placement-new): only if not already defined

2001-07-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Made MBA_string::npos an enum value, removed the cpp file.
        Prompted by GCC-3.0's complaint about it not having a newline at
        eol.
        * include/mba_utils/MBA_string.h (public_constants): added
                (npos): removed
        * src/mba_utils/MBA_string.cpp : removed
        * src/mba_utils/Makefile.in (OBJECTS): removed MBA_string.o

2001-07-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Removed mutual recursion between L2_allocate_exp2() and
	get_two_blocks_from_larger()
	* src/mba_utils/array_allocator.cpp
	  (get_two_blocks_from_larger): removed
	  (push_one_free_block): added
	  (pop_one_free_block): added
	  (L2_allocate_exp2): modified to be non-recursive

2001-07-24  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified to print out modes as well as observations and commands. While
	it was checked out, I refactored a bit and tidied up comments and
	formatting
	* src/liv_utils/api_gen/api_gen.cpp
          (write_domains): made into a template
	  (write_mode_domains): created
	  (write_names): made into a template
	  (write_mode_names): created
	  (writeToFile): newly split off from from main(); with modes

2001-07-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/developer_man/file_layout.manual : Actually, we do include a
                        Tcl/Tk interpreter (!).  Unrelated: made a sentence
                        out of the mba/cpp comment.
        * doc/developer_man/l2dev.html : regenerated

2001-07-23  Benoit Hudson  <bhudson@arc.nasa.gov>
        Purify disables the allocators.
        * configure.in (DISABLE_L2_ALLOCATORS): added when purify is
                        defined
        * configure : regenerated
        * acconfig.h (DISABLE_L2_ALLOCATORS): added
        * include/livingstone/gnu_conf.h.in : regenerated

        * src/mba_utils/array_allocator.cpp (DISABLE_L2_ALLOCATORS):
                added conditional which ignores the file, except for
                bogus L2_alloc / L2_free / L2_alloc_reclaim

2001-07-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	The lseek function did not work with MSVC++ and VxWorks, so Scott
	Christa proposed fseek, and also used fread. I modified his code to
	split fileSize from readIntoMemory.
        * src/readers/from_bin.cpp (fileSize) : made it a non-member
                function and modified it to take a FILE* rather than a
                const char* pathname
	  (readIntoMemory) : now uses fread()
        * include/readers/from_bin.h (fileSize): removed to make it a
                non-member function
          (modelSize): changed from size_t to fpos_t

2001-07-20  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method Livingstone_reader::read_model_array() so that flight
	code can load a model without using the file system.
	* src/readers/livingstone_reader.cpp (read_model_array): added
	* include/readers/livingstone_reader.h (read_model_array): added

2001-07-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (with_purify): error if XMPL is enabled;
                (with_purify_despite_threads): added; demote above to a warning
        * configure : regenerated

2001-07-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * TODO: added a word about T_system's proliferate lists

2001-07-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Adding the Variable_datum made for a memory leak.  This hack fixes
        it.  Comments are included on what might be a nicer solution.
        * include/transition/T_system.h (Old_variable_acceptor): added
        * src/transition/T_system.cpp (dtor): added code to delete the
                        Variable_datum
                (Old_variable_acceptor): moved as inner to T_system
                        (accept): delete the Variable_datum

2001-07-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * TODO : added a paragraph about cover

2001-07-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/developer_man/file_layout.manual (introductory paragraph):
                added many details
        * doc/developer_man/l2dev.html : regenerated

2001-07-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/array_allocator.cpp (L2_alloc): added check for
                DISABLE_L2_ALLOCATORS which uses malloc/free on calls to
                L2_alloc/L2_free instead of using our code.  This makes it
                easier to use purify, although there isn't yet configury
                to have --with-purify define D_L_A.

2001-07-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/developer_man/Makefile.in (INSTALLED_MANUALS): removed l2dev.info
        * doc/user_man/Makefile.in (MANUALS): removed l2.info
                (MCLEANFILES): changed from l2.info to $(MANUALS)
                (CLEANFILES): add l2.info
                (INSTALLED_MANUALS): removed l2.info
        * doc/user_man/l2.info : removed
        * l2_update (FILES_TO_CHECK): removed l2.info and l2dev.info

2001-07-18  Benoit Hudson  <bhudson@arc.nasa.gov>

	* doc/developer_man/README : added a word about generating .texi from
		.manual files

2001-07-18  Benoit Hudson  <bhudson@arc.nasa.gov>
	Added much more details about the readers.
	* doc/developer_man/readers.manual  : added
	* doc/developer_man/Makefile.in (TEXI_FILES): added readers.texi
	* doc/developer_man/software_components.manual
		(node Components - Readers): moved to readers.manual ;
			unrelated, added comment-lines of stars to
			separate the sections
	* doc/developer_man/l2dev.manual (DATE): updated
		(TITLE): added the version number
		(HTML_base): added
	* doc/developer_man/l2dev.html : regenerated

2001-07-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Decided to squash the info manual, and only distribute the html
        manual.
        * doc/developer_man/Makefile.in (l2dev.info target):
                add l2dev.info to OTHER_MANUALS instead of MANUALS
        * doc/developer_man/l2dev.info : removed

2001-07-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reimplemented the algorithm in cover-search that tries to make
        sure not to report duplicate candidates.  The old one ran in time
        O(n^2*k^2), n the number of candidates, k the number of assignments per
        candidate.  The new one runs in O(nk^2) -- an O(n) improvement.
        On the dt1 scenario, with n=81 and k=4, we see a factor of 45 to 50
        improvement overall.  Most likely we could see more large speedups
        here, but cover is non-flight; I only attacked this problem because
        it was slowing down the regression tests.
        The fix has the marked disadvantage of outputting candidates in
        hash-table order, which is hard to follow.  I have code to make
        each candidate output its assignments in ID and time order (cheaper
        would be to output them in address order).
        * src/cover/cover.cpp (add_to_candidates,
                 remove_equivalent_candidates): removed
                (class Proto_candidate, Proto_candidate::set): added
                (rho_coverage_aux): use Proto_candidate::set instead of
                        Slist<Candidate*>; use add instead of push_front;
                        use acquire instead of += ; don't use r_e_c
                (rho_coverage): create a Proto_candidate::set and use
                        make_candidates to translate it into Slist<Candidate*>

        Minor things I needed to implement Proto_candidate::set :
        * include/conflict_db/assignment.h src/conflict_db/assignment.cpp
                (get_time_step): made const
        * include/mba_utils/hash_table.h (erase): added

2001-07-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added commands 'h' (help) and 't' (termination reason)
	* src/readers/l2flight/l2flight.cpp (main) added cases for 'h' and 't';
	  (doHelp): added; (doTermination): added

2001-07-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added method to Livingstone_debug to map enum SearchTermination onto
	name string
	* include/debuggers/livingstone_debug.h (search_termination_string):
	  added

2001-07-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Undid previous change, since Livingston.h is flight code
	* include/api/livingstone.h (get_search_termination_reason): changed
	  declaration to definition; return enum SearchTermination
	* src/api/livingstone.cpp (get_search_termination_reason): removed
	  definition

2001-07-17  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Modified get_search_termination_reason() to return an MBA_string
	instead of an enum
	* include/api/livingstone.h (get_search_termination_reason): changed
	  definition to declaration
	* src/api/livingstone.cpp (get_search_termination_reason): added
	  definition, changed to return an MBA_string

2001-07-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added member function get_search_termination_reason() to API
	* include/api/livingstone.h (get_search_termination_reason): added

2001-07-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * flight_files : added

2001-07-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed the check for whether new throws an exception or returns
        zero; it's no longer needed.
        * configure.in (LIV_CXX_THROW_BADALLOC): don't check
        * configure : regenerated
        * acconfig.h (NEW_THROWS_EXCEPTION): removed
                (IRIX): moved nearer the top
                (comments): much longer comments for the system-specific
                        values ; the user might directly change them
        * include/livingstone/gnu_conf.h.in : regenerated

2001-07-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Added from_memory to read a model from an array of unsigned char, and
	then modified from_bin to delegate most of its work to from_memory
	* include/readers/from_memory.h: added, based on from_bin.h
	* include/readers/from_bin.h: modified to delegate most of its work to
	  from_memory.h
	* src/readers/from_memory.cpp: added, based on from_bin.cpp
	* src/readers/from_bin.cpp: modified to delegate most of its work to
	  from_memory.cpp
	* configure.in : modified conf_readers to include from_memory and added
	  a dependency so that require_from_bin implies require_from_memory
	* configure : regenerated from configure.in

2001-07-16  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Made some non-const member functions const
	* include/opsat/binaryheap.h (top): made member function top() const
	* include/opsat/cbfs_agenda.h (top_weight): made member function
	  top_weight() const
	* include/opsat/opsat.h (terminate_search): made member function
	  terminate_search() const and removed public data member
	  Opsat_CBFS::search_status
	* include/opsat/cbfs_tracker.h (search_termination): modified
	  search_termination() to return the result of method call
	  terminate_search instead of public data member search_status
	* src/opsat/opsat.cpp (terminate_search): made member function
	  terminate_search() const by not having it not modify
	  Opsat_CBFS::search_status

2001-07-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * TODO: added

2001-07-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a developer's manual.
        * configure.in (NOLIB_FEATURE_DIRS): added doc/developer_man
        * configure : regenerated
        * l2_update (FILES_TO_CHECK): added doc/developer_man files
                (png, info, and html) ; unrelated: added user_man/l2.html
        * doc/developer_man : added directory

2001-07-12  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (createCheckpointJNI, restoreCheckpointJNI,
		deleteCheckpointJNI): added
        * src/livdll/LivingstoneEngine.h (createCheckpointJNI,
                restoreCheckpointJNI, deleteCheckpointJNI) : added
	* src/livdll/LivingstoneEngine.h (setAttributeModeJNI): deleted

2001-07-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reversed the order of adding conflicts, which is more likely to be
        in small -> large order, and thus makes it more likely that the later
        conflicts are subsumed by earlier ones.
        * include/transition/T_system.h (new_conflicts): turned into an Array
                        of Slist
        * src/transition/T_system.cpp (summarize_conflicts): append to the
                        array rather than prepending to the list
                (install_new_state): update the iterator type for new_conflicts

2001-07-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/liv_utils/api_gen/api_gen.cpp : fixed the comment characters
                on afore-mentioned CVS Id tag.

2001-07-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Proto_constraint is only needed by full-progress and recovery.
        * include/transition/T_system.h (class Proto_constraint,
                state_constraint_prototypes): conditionalized on being needed,
                by recovery or full-progress
        * src/transition/T_system.cpp (class Proto_constraint): conditional
                (dtor, create_constraint): conditionalized the code that
                        dealt with Proto_constraint

2001-07-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp (setAttributeModeJNI): removed

2001-07-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        This was an early attempt at allowing checkpointing; it's not
        useful anymore.
        * include/transition/transitioned.h
          src/transition/transitioned.cpp (set_mode): removed

        * include/debuggers/T_system_debug.h (assign_mode): removed
        * src/debuggers/T_system_debug.cpp (parse_cmd, listener_usage): removed
                        assign-mode command
                (assign_mode): removed

2001-07-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/liv_utils/api_gen/api_gen.cpp : added CVS Id tag

2001-07-12  Scott Christa  <schrista@arc.nasa.gov>

        * src/api/livingstone.cpp: Removed #include <fstream.h> because it's
                not needed.

2001-07-12  Scott Christa  <schrista@arc.nasa.gov>
        Removed the #include <mba_utils/hash_table.h> out of source files
        that don't need them. Now the functions for the hash_table do not
        need to be tested using CodeTEST for VxWorks.
        * include/conflict_db/conflict_db.h: Changed hash_table.h to
                pair.h.
        * include/opsat/opsat.h
          src/cover/cover.cpp: Removed #include <mba_utils/hash_table.h>.
        * include/readers/to_t_system.h: Removed #include <mba_utils/
                hash_table.h> and added #include <mba_utils/slist.h>


2001-07-11  Benoit Hudson  <bhudson@arc.nasa.gov>
        I screwed up and managed not even to compile the previous changes
        to to_l2!  This fixes things.
        * include/readers/to_l2.h (forward): added L2rClause,
                L2rEnumeration, L2rPropVarValue, L2rPropVarVar,
                L2rTransition, L2rVariable
        * src/readers/to_l2.cpp (print_clauses): pass the stream to p_o_c
                (print_one_clause): call prop, not props
                (print_propositions): the local is 'prop' not 'p'
                (print_one_transition): fixed to calls to things that
                        are member functions

2001-07-11  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed several places where we included streams into the code
        without really needing to do so.
        * include/readers/common.h (WITH_OSTREAM): not defined
                (if WITH_OSTREAM): changed to if ENABLE_L2_VERBOSE
                (tostream): removed

        * include/readers/clause.h
          include/readers/enumeration.h
          include/readers/proposition.h
          include/readers/transition.h
          include/readers/variable.h
                (toL2file): removed
                (tostream calls): replaced by its argument
                (if WITH_OSTREAM): changed to if ENABLE_L2_VERBOSE

        * src/readers/L2_file.cpp
          src/readers/livingstone_reader.cpp
          src/readers/to_t_system.cpp
          src/readers/xlate_merge_eq_vars.cpp
                (verbose): replaced tostream(expr) with expr

        * include/readers/from_l2.h (if WITH_OSTREAM): changed to if
                ENABLE_L2_VERBOSE
        * src/readers/from_l2.cpp (tostream): added as a no-op macro
                (if WITH_OSTREAM): changed to if ENABLE_L2_VERBOSE

        * include/readers/to_l2.h (ctor): take name as const-ref
                (print_one_enum, print_one_var, print_one_varval,
                 print_one_varvar, print_one_clause,
                 print_one_transition): added
        * src/readers/to_l2.cpp (print_enums, print_variables,
                 print_propositions, print_clauses, print_transitions): use
                        print_one functions
                (print_one_enum, print_one_var, print_one_varval,
                 print_one_varvar, print_one_clause,
                 print_one_transition): added

2001-07-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/debuggers/tracker_debug.h (create_checkpoint,
                restore_checkpoint, delete_checkpoint, list_checkpoints,
                ckpt_descriptor): made public
                (ckpt_iterator, begin_checkpoints, end_checkpoints): added

2001-07-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Minor fix to bounds_check_access ; takes const char* now, which
        avoids creating several MBA_strings.
        * include/readers/common.h (bounds_check_access,
                bounds_check_access_friend): name arg is const char* not
                        MBA_string; in the exception, cast it
        * include/readers/clause.h (prop)
          include/readers/transition.h (clause): just pass a string, removed
                        propstr

2001-07-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed the 3-list functions to create constraints.  These failed
        to really isolate the caller from the fact that L2 speaks propositional
        logic under the hood, yet imposed a performance penalty.  Also
        removed the 'datum' field in creating clauses since the Conflict_db
        uses it.
        * include/conflict_db/conflict_db.h (create_simple_constraint): removed
                (create_clause): removed 'datum' argument
          src/conflict_db/conflict_db.cpp (create_simple_constraint): removed
        * src/conflict_db/assignable.cpp (ctor): use LTMS::create_clause
                        directly to set the datum

        * include/transition/T_system.h (Proto_assignment_list): added
                (create_simple_constraint): removed
                (create_constraint, do_create_constraint): added
                (friend): added inner class Proto_constraint
        * src/transition/T_system.cpp (Proto_constraint):
                    (ctor): args are two const-ref P_a_l, instead of three
                        lists; inlined
                    (dtor): inlined (still empty)
                    (instantiate_in_past): void return, call to
                        T_system::do_create_constraint
                    (iterator, positive, negative): changed type to P_a_l
                        -- aka Array<P_a> -- instead of Slist<P_a>
                (T_system):
                    (create_simple_constraint): removed
                    (create_constraint, do_create_constraint): added

        * src/transition/transitioned.cpp (set_initial_mode,
                add_idle_transitions, Proto_transition::instantiate):
                        T_system::create_clause no longer accepts a datum
                        argument

        * src/readers/to_t_system.cpp (VarValueSign, vvslist_to_clause): removed
                (expandClause): use T_system::Proto_assignment_lists instead
                        of one Slist<VarValueSign>, and call
                        T_system::create_constraint directly
                (createInitialState): removed code to create state=s0 =>
                        var=initial ; instead, assert against this since it
                        doesn't work in min-progress at all, and only counter-
                        intuitively in full-progress.

2001-07-06  Lee Brownston  <lbrownston@ptolemy.arc.nasa.gov>
	Fixed two incorrect equality tests in configure.in and re-ran autoconf.
	* configure.in (enable-l2-format): changed x$require_to_l2 to
	  $require_to_l2
	  (enable-l2bin-format): changed x$require_to_bin to $require_to_bin

2001-07-05  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (create_cmd_assumption_in_past):
                register the new variable as a command, don't bother
                asserting the out-of-memory error


2001-07-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/ltms.cpp (get_clause_support): use an array to implement
                the stack rather than a list ; also, use do/while since
                we know the stack isn't empty in the first iteration

2001-07-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/to_t_system.cpp (createTransition): fixed using the
                i instead of j in the inner loop on cls->prop

2001-07-03  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl.cpp (start_cmd): check that the domain
                of commandable variables includes "noCommand"

2001-07-02  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed bug pointed out by Will Taylor, that the state variable
        was not in the string mapping.
        * include/debuggers/L2_string_map.h (state_var): added
        * src/debuggers/L2_string_map.cpp (get_var_or_null): handle "state"
                        specially
                (add_variable, remove_variable): set/unset state_var as needed

2001-07-02  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed issue pointed out by Charles Pecheur that checkpoints cannot
        be deleted from the debugger, and that this matters when doing v&v.
        * include/debuggers/tracker_debug.h (delete_checkpoint): added
                (ckpt_descriptor, find_ckpt, register_ckpt, delete_ckpt,
                 briefly_print_ckpt): added
                (checkpoints, ckptid_by_name): removed
                (ckpt_by_name, ckpt_by_id, nckpt, last_ckpt_id): added
        * src/debuggers/tracker_debug.cpp (ctor): added initializing
                        the four new fields
                (parse_cmd): added "ckpts" alias to list-ckpt, added
                        delete-checkpoint and its alias delete-ckpt
                (listener_usage): added delete-checkpoint
                (print_stats): use nckpt not checkpoints.size
                (all checkpoint functions): largely rewritten
                (class ckpt_name): removed
                (ckpt_is_smaller): added

2001-07-02  Scott Christa  <schrista@arc.nasa.gov>
        Updated Tornado and Microsoft project files.
        * src/readers/readers.wpj: Updated the dependencies.
        * src/readers/l2test/l2test.wpj: Removed theory.cpp and updated the
                dependencies.
        * src/tms/tms.dsp: Removed theory.cpp and Formula.h.

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Got rid of a now-obsolete array in to_t_system (since we keep the same
        array in T_system itself now).
        * include/readers/to_t_system.h (putVar, variables_by_id): removed
                (findVar): made const
        * src/readers/to_t_system.cpp (ctor): don't initialize variables_by_id
                (dtor): don't delete it
                (createVariable): don't call putVar
                (putVar): removed
                (findVar): use t_system->get_present_variable

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Got rid of those places where we called L2_initialize_array and
        didn't need to.
        * include/mba_utils/array.h (template args): added boolean, default true
                (ctor, erase, ensure): use do_allocate/do_free
                (do_allocate/do_free): use no_ctor form if boolean is false
        * include/tms/ltms.h (UnsatType, undo_list): use no_ctor form
                (Fringe): use no_ctor form, added typedef 'super'
        * src/tms/ltms.cpp (Fringe fn's): use 'super' not Array<Clause*>
                (remove_marked_from_array): take no-ctor form
        * include/tms/proposition.h (positive, negative, iterator)
          include/tms/ptheory.h (prop_list, clause_list)
          src/tms/clause.cpp (ctor, dtor)
          include/transition/T_system.h (present_variables)
          src/readers/L2_file.cpp (free_array, alloc_and_zero)
          src/readers/transition.cpp (ctor, dtor)
          include/opsat/binaryheap.h (arr): use no_ctor form
                : use no_ctor

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Made Livingstone::get_value be constant w.r.t the number of variables
        (it's still linear w.r.t the number of timesteps).
        * include/transition/T_system.h (npresent_variables,
                get_present_variable): added
        * src/api/livingstone.cpp (get_value): use the above two instead
                of searching through all variables in C_db.

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed that senseless downcasting of Formulae and Theory,
        entirely removing Formula and largely removing Theory.  It's now
        just the class that holds time_step_t !
        * include/tms/theory.h (includes): removed utils, slist, formula
                (forward): removed Ptheory
                (ctor): made protected -- it's unused, but prot gives no
                        warnings
                (dtor, initialize, add, remove): removed
                (commented-out portion): removed
        * src/tms/theory.cpp : removed
        * include/tms/formula.h : removed

        * include/tms/ptheory.h  (includes): removed theory.h
                (superclass): made Pooled, not Theory
                (add, remove): removed Formula versions,
                (put_in, take_out): removed, replaced by add/remove(Clause&)
        * src/tms/ptheory.cpp (create_clause): use add not put_in
                (add, remove): remove Formula version
                (put_in, take_out): renamed to add/remove(Clause&)
        * include/tms/ltms.h
          src/tms/ltms.cpp (put_in, take_out): renamed to add/remove(Clause&)

        * include/tms/clause.h (includes): removed formula, added pooled
                (superclass): made Pooled, not Formula

        * src/tms/Makefile.in (OBJECTS): removed theory.o

        * src/transition/T_system.cpp (create_state_var): use unsigned
                rather than Ptheory::time_step_t

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix for speeding up the API that deals with IDs.
        * include/transition/T_system.h (VarType, Variable_datum): added
                (get_variable_type, register_new_variable): added
                (present_variables): added
        * src/transition/T_system.cpp (create_*): added call to r_n_v
                (get_variable_type, register_new_variable): added
                (get_variable_by_id): removed
                (get_command, get_observable, get_transitioned,
                (is_command, is_observable, is_transitioned): rewritten to
                        use present_variables and get_variable_type, and
                        thus run in constant-time rather than linear

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Finally, there's a global has function for integral types;
        use it everywhere.
        * src/readers/L2_file_translator.cpp
          src/debuggers/L2_string_map.cpp (hash_pointer_key): removed
                        (all users of it): changed to hash_integral_key
        * src/readers/xlate_strip.cpp (hash_unsigned): removed
                (copy_all_enums): use hash_integral_key instead

2001-06-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Stopped using datum for cover algorithm.
        * include/mba_utils/hash_table.h (hash_integral_key): added
        * src/cover/cover.cpp (Mark_table): added
                (rho_coverage_aux): added Mark_table argument,
                        use Mark_table::set/unset rather than the variable
                        datum
                (rho_coverage): initialize the Mark_table

2001-06-29  Scott Christa  <schrista@arc.nasa.gov>
        Updated the Tornado project files.
        * src/readers/l2test/l2test.wpj
          src/readers/readers.wpj: Updated the project source file list so
                that it will build like the big boys--Microsoft & Solaris.

2001-06-29  Scott Christa  <schrista@arc.nasa.gov>
        Fixed compiler warnings for GCC 2.7.2.
        * include/debuggers/ltms_debug.h
          include/debuggers/conflict_db_debug.h: Add virtual destructors.

2001-06-29  Scott Christa  <schrista@arc.nasa.gov>

        * src/livingstone/livingstone.dsp: Added checkpoint.cpp and
                L2_assert.cpp to the project.

2001-06-29  Scott Christa  <schrista@arc.nasa.gov>
        Fixed compiler warnings for VC++.
        * src/api/livingstone.cpp (get_value): Typecast T_system::NOW to
                unsigned.
        * src/checkpoint/checkpoint.cpp (reset_times): Typecast T_system::NOW
                to unsigned and changed the order of the arithmetic for
                time_delta.
        * src/transition/T_system.cpp (remove_old_variables): Typecast
                T_system::NOW to unsigned.

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Bug fix in scr2names, and better error output in names2ids.
        * src/readers/names2ids/names2ids.cpp (linenum, error): added
                (split): made void, give an error & exit instead
                (tofile): removed
                (main): require 2 args, don't open 'out', made a more
                        robust loop condition, no prompt, update linenum
        * src/readers/names2ids/scr2names.in (unassign): added
                (progress, assign, fc): require them to be at BOL
        * doc/user_man/names2ids.manual : updated to be one-arg
        * doc/user_man/l2.manual (DATE): update
        * doc/user_man/l2.html , doc/user_man/l2.info : regenerated

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix C-d and EOF in l2flight after a restart.
        * src/readers/l2flight/l2flight.cpp (main): if we get to EOF or
                error, set exit_exec_loop and break out of the read loop

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Save some time for the debugger:
        * include/mba_utils/MBA_string.h (String_value ctor): use no_ctor
                        version of L2_alloc
                (String_value dtor): use no_dtor

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Several functions here were spuriously copying Slists of
        candidates.  Fully 5% of allocations were related to this.
        Instead, they are now const-ref arguments, or I just removed
        the function if it was unused.
        * include/opsat/cbfs_tracker.h
          src/opsat/cbfs_tracker.cpp (ctor): removed form with initial
                candidates
        * include/opsat/opsat.h
          src/opsat/opsat.cpp (initialize_search, superset_candidate):
                        const-ref Slist arg
                (ctor): removed version with initial candidates
        * include/opsat/cbfs_agenda.h (ctor): removed version with initial
                        candidates
                (initialize_agenda): const-ref arg, which we copy and
                        reverse (we could certainly do better!)

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Switched Ptheory to use Array for its clauses & props.
        * include/tms/ptheory.h (prop_list, clause_list): added typedefs
                (begin/end_clauses/propositions, props, clauses): use new
                        typedefs
        * src/tms/ptheory.cpp (dtor, create_clause, create_prop,
                initialize, initialize_clause, initialize_time_stamps,
                finish_destroying): use new typedefs, and use array
                        functions instead of list functions
        * src/tms/ltms.cpp (finish_destroying): use new typedefs

        * src/debuggers/ltms_debug.cpp
          src/debuggers/conflict_db_debug.cpp
          src/livdll/livdll.cpp (cprops, print_propositions,
                clause_iterator): use new typedefs


2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/ltms.h (unsatisfied): turned into an Array
                (begin/end_unsatisfied): added
                (get_unsatisfied): removed
                (insert_into_unsat, remove_from_unsat): moved to cpp
                Also indented the file, changed some /// comments
                to /**, and repaginated some paragraphs.
        * src/tms/ltms.cpp (insert_into_unsat, remove_from_unsat): added
                (remove_marked_from_array): renamed from *_list
                (finish_destroying): use r_m_f_a
                (last_conflict): only get the first unsat clause, don't
                        get them all and then pick out only the first.
                        Note that since we now append instead of
                        prepending, leaving this at getting the first
                        changes the output.
        * src/debuggers/ltms_debug.cpp (unsat): use begin/end_unsatisfied,
                not get_unsatisfied

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/ltms.h (take_out, put_in, assign): made public
                (enqueue_for_undo, undo_propagations): moved to cpp
                (undo_list): turned into an Array
        * src/tms/ltms.cpp (enqueue_for_undo, undo_propagations): added

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/array.h (ensure): fixed so that it doesn't
                always resize, which it was doing before!

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Performance enhancements:
        * src/mba_utils/array_allocator.cpp (lg2): return 0 for lg(0),
                which saves a few instructions ; also reordered to put
                the extern functions last, which allows inlining the
                static ones in gcc-2.95.2 and saves lots of time

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/array_allocator.cpp (INITIAL_BLOCK_LG2): reduced to
                20; turns out 1 Mb is sufficient to run the BatteryFail
                scenario of X-37.

2001-06-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added an option for error handling which makes it very similar
        to an 'assert'.  Perhaps this will be sufficient for flight?
        * include/livingstone/L2_assert.h (EXPR_OUT): removed
                (L2_error_enum): removed
                (L2_throw): removed DISABLE_L2_ERROR_CLASS implementation,
                        changed from DISABLE to ENABLE_EXCEPTIONS,
                        added L2_error_function case
        * src/livingstone/L2_assert.cpp : added
        * src/livingstone/Makefile.in (OBJECTS): added L2_assert.o
        * configure.in (disable-exceptions): define ENABLE instead of DISABLE
                (disable-print-error): added
        * configure : regenerated
        * acconfig.h (DISABLE_EXCEPTIONS): removed
                (ENABLE_EXCEPTIONS, ENABLE_PRINT_ERROR): added
        * include/livingstone/gnu_conf.h.in : regenerated
        * include/livingstone/def_conf.h : regenerated

2001-06-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed several constants, replacing them with enums instead,
        whose values can be inlined.  This saves about 1.5 Kb in the flight
        version of the code, and speeds it up very slightly.

        * include/tms/clause.h (includes): added limits.h
                (MAX_TIME_STAMP): made member of public_constants
                (DELETED, IN_FRINGE, UNSATISFIED, TRACE, BREAK, VOLATILE,
                 DESTROYING) : made members of enum bit_masks
                (NO_PROPOSITION): made member of private_constants
        * src/tms/clause.cpp (includes): removed limits.h
                (all constants above): removed
        * include/tms/proposition.h (TRACE, BREAK, DESTROYING): made members of
                        enum bit_masks
        * src/tms/proposition.cpp (TRACE, BREAK, DESTROYING): removed

        * include/conflict_db/assignment.h
        * src/conflict_db/assignment.cpp (LOWEST_WEIGHT): removed
        * src/conflict_db/assumption.cpp (ctor): use 0 not LOWEST_WEIGHT

        * include/transition/T_system.h (NOW, STATE_VAR_ID): made members of
                        public_constants
        * src/transition/T_system.cpp (NOW, STATE_VAR_ID): removed

        * include/transition/tracker.h (DEFAULT_HISTORY_LENGTH,
                DEFAULT_NUM_HISTORIES, MIN_HISTORY_LENGTH): made members of
                        public_constants
        * src/transition/tracker.cpp (DEFAULT_HISTORY_LENGTH,
                DEFAULT_NUM_HISTORIES, MIN_HISTORY_LENGTH): removed
                (ctor): cast to unsigned, use M_H_L not MIN_HISTORY

        * include/opsat/cbfs_tracker.h (DEFAULT_CBFS_MAX_CUTOFF_WEIGHT): made
                        member of public_constants
        * src/opsat/cbfs_tracker.cpp (DEFAULT_CBFS_MAX_CUTOFF_WEIGHT): removed

2001-06-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/user_man/Makefile.in (CLEANFILES): don't add $(MAN).html

2001-06-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Now that L2_alloc_array works for types with constructors, switched
        to using that for L2_string_map.
        * include/debuggers/L2_string_map.h (id2name): removed
                (name_by_id): removed the fn, added the ivar
        * src/debuggers/L2_string_map.cpp (ctor): don't init id2name
                (get_variable_name, remove_variable): use array access for
                        name_by_id, not a function call syntax
                (add_variable): use grow_and_set not insert for name_by_id

2001-06-26  Scott Christa  <schrista@arc.nasa.gov>
        Fixed compiler warnings for VC++ and VxWorks GCC.
        * include/mba_utils/utils.h: Disabled warning concerning no matching
                operator delete found; memory will not be freed if
                initialization throws an exception.
        * include/mba_utils/array_allocator.h: Included utils.h to disable
                the above warning.
        * include/opsat/binaryheap.h (get_order): Fixed compiler warning.
        * include/readers/L2_file_writer.h (~L2_file_writer): Added virtual
                destructor.
        * src/tms/clause.cpp (get_unassigned_literal): Fixed a compiler
                warning.

2001-06-26  Scott Christa  <schrista@arc.nasa.gov>

        * include/livingstone/def_conf.h: Defined ENABLE_L2BIN_FORMAT.

2001-06-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/api/parameters.cpp (set_to_default_values): default to cover
                if cbfs is disabled, min if full-progress is disabled

2001-06-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (enable_recovery): check for l2test only if recovery
                        is enabled
        * configure : regenerated

2001-06-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/user_man/l2test.manual (restart): added
        * doc/user_man/l2.html , doc/user_man/l2.info : regenerated

2001-06-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (disable-cheap-memory-tests, enable-prohibitive-memory-tests):
                added

2001-06-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added the configury to enable/disable some asserts in memory usage.
        * configure.in (enable_count_allocated, enable_dynamic_memory):
                        moved down to put all memory-related options together
                (enable_cheap_memory_tests, enable_prohibitive_memory_tests):
                        added
        * configure : regenerated
        * acconfig.h (ENABLE_MEMORY_CHECKS_1/2/3): added
        * include/livingstone/gnu_conf.h.in : regenerated

2001-06-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        The fix of 06-20 didn't actually do (1).  This does, fixes many
        instances where the wrong alloc/dealloc pair was used, and fixes
        a few places where new[]/delete[] were used.
        * include/mba_utils/array_allocator.h (L2_initialize_array): use ::new
        * src/mba_utils/array_allocator.cpp (is_from_our_chunks): added
                (dec, inc): added, switched all ++/-- for the counts
                                to use them
                (get_two_blocks_from_larger): removed GCC attribute,
                        added updating freelist_size
                (get_one_block_from_malloc): added updating freelist_size
                (L2_allocate_exp2): removed debugging code, so we actually
                        do use get_two as per the 2.4 release comments;
                        update the counts using inc/dec
                (L2_free): update the counts using inc/dec
                (L2_alloc_reclaim): update the counts when adding a chunk

        * include/mba_utils/hash_table.h (ctor): use L2_alloc_array
                (dtor): use L2_free_array
        * include/readers/enumeration.h
          src/readers/enumeration.cpp (ctor): take ename by const-ref, use
                        L2_alloc_array
                (dtor): moved to cpp, use L2_free_array
        * src/readers/L2_file_translator.cpp (copy_clause, copy_transition)
          src/readers/xlate_remove_duplicates.cpp (create_clause)
          src/readers/xlate_strip.cpp (copy_all_clauses, copy_transition)
                Use L2_alloc_array not new[]

        * src/readers/from_xmpl.cpp (list_to_array): reverted to form
                        before 2001-06-15 , except using L2_alloc_array
                (create_enumeration): use L2_free_array

2001-06-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/opsat/binaryheap.h (get_order): VC++ wants an explicit
                cast here

2001-06-20  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (mapOverAttributeNamesJNI):
		corrected handling of attribute names from debugger
	* RELEASE 2.4: tagged L2Skunk_2_4
	* src/livingstone/version.c : update for 2.4

2001-06-20  Scott Christa  <schrista@arc.nasa.gov>
        * src/mba_utils/mba_utils.dsp: Removed list_allocator.cpp and
                list_allocator.h.

2001-06-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Major overhaul of allocation.  This fixes: (1) using malloc for
        each block; (2) risk of using the wrong alloc/dealloc pair; (3)
        some memory bugs.
        * include/mba_utils/array_allocator.h
          src/mba_utils/array_allocator.cpp : rewritten entirely using some
                fragments from before
        * include/mba_utils/pooled.h (operator new[]/delete[]): removed,
                requires the user to know and decide how to implement it
        * src/readers/clause.cpp (ctor): use L2_alloc_array_no_ctor rather
                        than new[]
                (dtor): use no_dtor version to free, cast away a const
        * src/readers/transition.cpp (dtor): cast away a const

2001-06-15  James Kurien <jkurien@arc.nasa.gov>
        * src/readers/from_xmpl.cpp (list_to_array):
	This templated class crashes Visual C++.
	Put #ifndef WIN32 around it and submitted PR.

2001-06-15  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/readers/l2test/l2test.cpp (main): use no-arg run

2001-06-15  James Kurien <jkurien@arc.nasa.gov>
        * src/debuggers/L2_string_map.cpp (get_variable_domain):
	If ENABLE_RECOVERY, then assumption that all assumption
	variables are transition variables is removed.

2001-06-15  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/debuggers/livingstone_debug.cpp (run): added some help

2001-06-15  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added 'restart' command.
        * include/debuggers/livingstone_debug.h (run): both versions
                return bool ; istream version has new bool arg
        * src/debuggers/livingstone_debug.cpp (run): no-arg calls 2-arg
                and returns its return value ; 2-arg returns true or false,
                and has 'restart' command if it's interactive
        * src/readers/l2test/l2test.cpp (main): put it in a loop, loop back
                if run returns true

2001-06-15  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/readers/from_xmpl.cpp (list_to_array): T* version uses
                        L2_alloc_array, MBA_string uses ::new[] ; this
                        fixes a problem with crashing on exit

2001-06-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        * BUILD (enable-recovery, disable-checkpoint): added
                (disable-report-leaks, disable-static-memory): removed
                (enable-names2ids): added a word about scr2names

2001-06-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        * configure.in (disable-report-leaks, disable-static-memory): removed
        * configure : regenerated
        * acconfig.h (ENABLE_POOL_FIND_LEAKS, DISABLE_STATIC_MEMORY): removed
        * include/livingstone/gnu_conf.h.in : regenerated

2001-06-14  Benoit Hudson  <bhudson@arc.nasa.gov>
	Added an HTML version of the manual.

	* doc/user_man/Makefile.in (all): depends on manuals
		(MANUALS, manuals, INSTALL_MANUALS): added
		(install-docs, uninstall-docs): use INSTALL_MANUALS
	* doc/user_man/README doc/user_man/l2.html : added

2001-06-14  Benoit Hudson  <bhudson@arc.nasa.gov>
	* doc/user_man/l2.manual (DATE, VERSION): updated
	* doc/user_man/l2flight.manual (commands): added f, F
	* doc/user_man/l2test.manual (commands): added checkpoint, ckpt,
	  	restore, list-checkpoints, list-ckpt
	* doc/user_man/l2.info : regenerated

2001-06-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added naming checkpoints.
        * include/mba_utils/algos.h (sort): added
        * include/debuggers/tracker_debug.h (create_checkpoint,
                restore_checkpoint, list_checkpoints,
                briefly_print_checkpoint, ckptid_by_name) : added
        * src/debuggers/tracker_debug.cpp (includes): added ctype, algos
                (commands "ckpt", "restore"): move work to a diff. function
                (command "list-checkpoints", "list-ckpt"): added
                (create_checkpoint, restore_checkpoint, list_checkpoints,
                 briefly_print_checkpoint, class ckpt_name): added

2001-06-14  James Kurien <jkurien@arc.nasa.gov>
        * configure.in ( ENABLE_RECOVERY): added
        * configure : regenerated
        * include/livingstone/gnu_conf.h.in : regenerated

2001-06-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Implemented checkpointing.  It has minimal implications on the rest
        of the system -- a few accessors mainly.
        * configure.in (disable-checkpoint): added
        * configure : regenerated
        * acconfig.h (ENABLE_CHECKPOINT): added
        * include/livingstone/gnu_conf.h.in : regenerated

        * src/checkpoint/checkpoint.cpp src/checkpoint/Makefile.in
          include/checkpoint/checkpoint.h : added

        * include/debuggers/tracker_debug.h (includes): added checkpoint.h
                (checkpoints): added
        * src/debuggers/tracker_debug.cpp (parse_cmd, listener_usage):
                added commands "checkpoint"/"ckpt" and "restore"
                (print_stats): added printing the number of checkpoints

        * include/conflict_db/assignable.h (erase_conflicts): added
        * include/conflict_db/assignment.h (set_weight): moved to public
                (erase_conflicts): added
        * include/conflict_db/conflict_db.h (destroy_variables): now public
        * include/conflict_db/variable.h (set_time_step): added
        * include/transition/T_system.h (set_oldest_timestep): added
        * include/transition/tracker.h src/transition/tracker.cpp
                (add_candidate): added

2001-06-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Minor fix to below:
        * src/debuggers/L2_string_map.cpp (start_new_trajectories):
                added code to update state_domain

2001-06-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changed mappings to generate names as needed, rather than keeping
        them all.  The main reason is that checkpointing, which I'm about
        to finalize, changes the timesteps.  A secondary reason is that
        it's faster and uses less memory since we only keep track of
        variables at read time, except for propositions which are like before.
        * include/debuggers/L2_string_map.h (includes): added array
                (name2var, var2name, var2read, read2nowvar,
                 has_variable_named()): removed
                (name2id, id2name, nowvar_by_id, readvar_by_id,
                 name_by_id(), get_var_or_null()): added
                (get_variable_by_name, has_variable_named): const-ref arg
                (add_variable): removed string arg ; added version without
                        L2rVariable arg
        * src/debuggers/L2_string_map.cpp (includes): added transitioned.h
                (get_element_for_key): const-ref string args
                (ctor): removed var2name, var2read, read2nowvar; added
                        id2name
                (str_pound, str_Transition): added
                (get_variable_name): generates the name from timestep,
                        whether it's an assumption, and the id->name mapping
                (get_variable_by_name, has_variable_named): use get_var_or_null
                (get_var_or_null): parse the name to find the Variable
                (get_model_variable): use readvar_by_id
                (get_now_variable): use nowvar_by_id
                (add_variable): generate the string from the read var;
                        set the new fields not the old; moved prop code to
                        version without the L2rVariable arg
                (remove_variable): only remove non-assumption NOW variables;
                        we don't explicitely keep track of the rest
        * src/debuggers/L2_string_map_listener.cpp (includes): removed strstream
                (created_variable, progressed_variable,
                 created_state_variable, created_mode_transition): don't
                        create the string for add_variable

2001-06-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added an array function; and made sure we don't suffer from the
        bug of using the default copy constructor or operator=.  Later,
        we might consider implementing them.
        * include/mba_utils/array.h (grow_and_set): added
                (copy ctor, operator=): declared private but not defined

2001-06-13  Scott Christa  <schrista@arc.nasa.gov>
        Updated the Microsoft project files.
        * mba.dsw: Added dependencies to the api_gen project.
        * src/liv_utils/api_gen/api_gen.dsp: Change include paths and
                compiler options.
        * src/readers/l2flight/l2flight.dsp: Removed options.cpp and
                options.h.

2001-06-13  James Kurien <jkurien@arc.nasa.gov>
	* include/transition/T_system.cpp
	(planner_progress, create_cmd_assumption_in_past) : Added

	* src/debuggers/T_system_debug.cpp
	(parse_cmd): Added plan-steps command to set up a planning
	problem of n steps by calling planner_progress.

2001-06-13  James Kurien <jkurien@arc.nasa.gov>
        Changed transitioned variables to allow their use in planning
	rather than diagnosis.  When planning, we don't consider failures
	so we do not need mode transition variables.  We also instantiate
 	clauses for all commands when transitioning a mode, since the search
	algorithm will be picking the command.

	* src/transition/transitioned.cpp
	(planner_transition, instantiate_all_indexed_clauses) : Added

	(create_transition_variable) : Does not create mode transition variable
	if ENABLE_RECOVERY is defined

	(set_initial_mode): Does not put mode transition variable in
	transition clase or create failure clauses if ENABLE_RECOVERY is defined

	(Proto_transition::instantiate) : Does not add mode transition
	variable to instantiated transition if ENABLE_RECOVERY is defined.

	* src/readers/to_t_system.cpp
	(createTransitions): Does not create failure transitions if ENABLE_RECOVERY
	is defined.


2001-06-13  James Kurien <jkurien@arc.nasa.gov>
	* acconfig.h : Added ENABLE_RECOVERY, undefined by default.

2001-06-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/slist_item.h (includes): include pooled, not
                        list_allocator
                (superclass): added Pooled
                (operator new, delete): removed
        * include/mba_utils/list_allocator.h
          src/mba_utils/list_allocator.cpp : removed
        * src/mba_utils/Makefile.in (OBJECTS): removed list_allocator.o

2001-06-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/MBA_string.h (copy ctor): added explicit call to
                        empty superclass ctor

2001-06-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Duplicate conflicts were being added in truncation, which led to a
        monotonic growth in the number of conflicts over time as failures
        happened.  This fixes that.
        * include/conflict_db/conflict_db.h (find_subsuming_conflict):
                        private not public
                (add_conflict): moved to cpp with different arg & return
        * src/conflict_db/conflict_db.cpp (includes): added algos.h
                (conflict_is_smaller, add_conflict): added
                (conflict): moved sorting code to add_conflict

        * include/mba_utils/algos.h (insert_sorted): added

        * include/transition/T_system.h (new_conflicts): list of lists
                        rather than of conflicts
        * src/transition/T_system.cpp (summarize_conflicts): store lists of
                        conflicting assignments, don't create conflict here
                (install_new_state): changed iterator data type over the
                        conflicts

        * include/conflict_db/conflict.h
          src/conflict_db/conflict.cpp (ctor): take arg by const-ref

2001-06-06  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/enumeration.cpp (dbg_L2rClause ctor): wrapped in
                ifdef -- it shouldn't be present if the class doesn't exist

2001-06-06  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/clause.cpp (L2rClause, dbg_L2rClause): Fixed a
                redefinition of default parameter compiler error for VC++.

2001-06-06  Scott Christa  <schrista@arc.nasa.gov>

        * src/mba_utils/mba_utils.dsp: Removed memory_pool.cpp and
                memory_pool.h.

2001-06-05  Benoit Hudson  <bhudson@arc.nasa.gov>
        Memory handling change.  Now everything is allocated using the
        Array_allocator mechanism and an overloaded operator new, except
        for what's done in Xerces and in iostreams.
        * include/mba_utils/pooled.h : rewritten.  Now it just provides
                public operator new/delete and protected ctor/dtor to avoid
                anybody creating it, or calling delete on the wrong thing
        * src/mba_utils/Makefile.in (OBJECTS): removed memory_pool.o
        * include/mba_utils/memory_pool.h  src/mba_utils/memory_pool.cpp :
                removed

        Updated the Pooled mechanism in all these.  That means
        we removed make/initialize; free/destroy; a no-arg no-effect ctor;
        the dtor that just calls destroy; pool; chunk; and friend
        Memory_pool.  We added a constructor in the image of the old
        initialize, and a destructor in the image of the old destroy.
        We also removed the define_static_chunk ; and we use new/delete
        instead of make/free.  Finally, the dtor is virtual only if there's
        a subclass.  For some classes, that's conditional on preprocessor
        defines.
        * include/conflict_db/assignable.h src/conflict_db/assignable.cpp
          include/conflict_db/assignment.h src/conflict_db/assignment.cpp
          include/conflict_db/assumption.h src/conflict_db/assumption.cpp
          include/conflict_db/candidate.h  src/conflict_db/candidate.cpp
          include/conflict_db/conflict.h   src/conflict_db/conflict.cpp
          include/conflict_db/conflict_db.h src/conflict_db/conflict_db.cpp
          include/conflict_db/dependent.h  src/conflict_db/dependent.cpp
          include/conflict_db/variable.h   src/conflict_db/variable.cpp
          include/cover/cover_tracker.h
          include/opsat/agenda_types.h     src/opsat/agenda_types.cpp
          include/readers/clause.h         src/readers/clause.cpp
          include/readers/enumeration.h    src/readers/enumeration.cpp
          include/readers/modes.h          src/readers/modes.cpp
          include/readers/proposition.h    src/readers/proposition.cpp
          include/readers/transition.h     src/readers/transition.cpp
          include/readers/variable.h       src/readers/variable.cpp
          include/tms/clause.h             src/tms/clause.cpp
          include/tms/proposition.h        src/tms/proposition.cpp
          include/transition/transitioned.h src/transition/transitioned.cpp


        The following weren't Pooled before, but now are.  This means
        we added pooled.h to the includes; Pooled as a superclass.  We
        also examined whether it was worthwhile to have a virtual dtor;
        if there's no subclass, it's not.  Finally, any array
        allocation is done with Array_allocator if it wasn't already.
        Anything noted is in addition to the above, and refers to only one
        file.
        * include/debuggers/L2_string_map_listener.h
          include/debuggers/domain.h
          include/debuggers/ltms_debug.h
          include/debuggers/trajectory.h
          include/readers/L2_file.h             src/readers/L2_file.cpp
          include/readers/L2_file_reader.h      src/readers/from_bin.cpp
          src/readers/from_l2.cpp               src/readers/from_xmpl.cpp
         include/readers/L2_file_translator.h src/readers/L2_file_translator.cpp
          src/readers/xlate_remove_duplicates.cpp src/readers/xlate_strip.cpp
          include/readers/L2_file_writer.h      src/readers/to_t_system.cpp
          include/tms/theory.h
          include/transition/tracker.h          src/transition/tracker.cpp
          include/mba_utils/MBA_string.h
        * include/debuggers/L2_string_map.h (nvars): added
          src/debuggers/L2_string_map.cpp


        Just new/delete instead of make/free, and using Array_allocator.
        * src/cover/cover.cpp src/opsat/cbfs_tracker.cpp
          src/opsat/opsat.cpp src/tms/ptheory.cpp


        Other:
        * include/opsat/binaryheap.h (GPtrArray): removed
                (BinaryHeap): use Array instead
                (set_allocated_size): removed
                (heapsize): removed; use last_index instead
                (last_index, get_order): added
                (compare, order): made private not public
        * include/opsat/cbfs_agenda.h (super): inherit privately
                Use new/delete rather than make/free.
        * include/opsat/opsat.h (set_max_candidates): don't set the heap
                        size yet
        * include/readers/common.h (includes): removed memory_pool
                        (l2_virtual): added
        * include/tms/ltms.h (Fringe): private inherit from Array
                        (Fringe::grow): removed
        * src/tms/ltms.cpp (INITIAL_FRINGE_SIZE): upped to 16
                        (Fringe ctor): call superclass ctor
                        (dtor): empty
                        (push, pop, remove, remove_destroying, empty):
                                use Array functions
                        (grow): removed
        * include/transition/T_system.h (Proto_constraint): moved to cpp
        * src/transition/T_system.cpp (Proto_constraint): un-pooled ; moved
                        its functions to the top of the file
        * include/mba_utils/list_allocator.h (LIST_ALLOCATE_MAX_ITEM_SIZE):
                        removed
                (MAX_PAYLOAD): added
                (freelists_): made array of size MAX_PAYLOAD
        * src/mba_utils/list_allocator.cpp (MAX_ITEM_SIZE): removed,
                        replaced everywhere by MAX_PAYLOAD
                (includes): added iomanip
                (ctor): don't allocate freelists_
                (dtor): use setw
        * include/mba_utils/array.h (size, empty): added
                (operator[], end, push, pop, remove, erase, ensure):
                        if read-only, use size()
                (push_back, pop_back): added


2001-06-01  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (printPropClausesJNI):
		const_iterator => iterator;
		corrected typo in negative clause iterator variable.

2001-06-01  Scott Christa  <schrista@arc.nasa.gov>
        Changed some of the Microsoft project files.
        * mba.dsw: Added dependencies to the names2ids project.
        * src/readers/readers.dsp: Added options.cpp, to_l2.cpp, options.h,
                and to_l2.h.
        * src/readers/l2test/l2test.dsp
          src/readers/names2ids/names2ids.dsp: Removed options.cpp and
                options.h.
        * src/readers/xmpl2l2/xmpl2l2.dsp: Removed options.cpp and to_l2.cpp.

2001-05-31  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/to_bin.cpp (to_bin::put): Fixed a redefinition of
                default parameter for VC++.

2001-05-31  Scott Christa  <schrista@arc.nasa.gov>
        Made minor format changes so that a source line counting program will
        work with the Livingstone source files.
        * include/tms/ltms.h: Used a C++ comment instead of a C comment.
        * include/transition/termination.h
          src/transition/T_system.cpp: Added carriage returns to a line so
                  that it doesn't exceed 132 characters.

2001-05-31  Scott Christa  <schrista@arc.nasa.gov>
        Updated the Microsoft project files.
        * mba.dsw: Added the l2flight and names2ids projects.
        * src/mba_utils/mba_utils.dsp: Added array_allocator.cpp and
                array_allocator.h to the project file.
        * src/readers/names2ids/names2ids.dsp
          src/readers/l2flight/l2flight.dsp: Added Microsoft project files.

2001-05-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/api/livingstone.h (invalid): -W wants static before const

2001-05-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/transitioned.cpp (set_initial_mode): fixed finding
                the oldest mode on or after the horizon, which was off by one

2001-05-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed unused arguments which misled one about the behaviour of
        the function.
        * include/opsat/opsat.h (next_consistent_candidate) : removed args
        * src/opsat/opsat.cpp (find_consistent_candidates): don't pass args
                (next_consistent_candidate) : removed args
        * include/opsat/cbfs_tracker.h (next_consistent_candidate) :
                        removed args, don't pass to opsat
        * src/opsat/cbfs_tracker_debug.cpp (parse_cmd): don't pass args to
                        next_consistent_candidate

2001-05-24  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a growable array that uses the new Array_allocator.
        Switched the Proposition class to use it, since a good percentage
        of the execution time is spent iterating through its lists of
        clauses.
        * include/mba_utils/array.h : added

        * include/tms/proposition.h (includes): array instead of slist
                (iterator): is Array::iterator
                (const_iterator): removed
                (positive_clauses, negative_clauses): removed
                (begin/end_positive/negative): return iterator
                (positive, negative): made into arrays
                (add/remove_positive/negative): use array functions not
                        list ones
        * src/debuggers/ltms_debug.cpp (find_literal_clause): use Prop::it
                not Slist<>::it
        * src/tms/ltms.cpp (assign, unassign): use Prop::it instead of
                Prop::const_it

2001-05-24  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added code to avoid adding duplicate clauses in min-progress when
        truncating.
        * include/transition/transitioned.h (now_has_failure_from_horizon):
                        added
        * src/transition/transitioned.cpp (ctor): set new flag to false
                (create_transition_var): erase transitions list unset flag
                (set_initial_mode): only instantiate failures if flag is set
                (instantiate_autonomous): set flag if appropriate

2001-05-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_bin.cpp (read)
          src/readers/to_bin.cpp (write): open file as binary, which
                only matters on some unnamed OS

2001-05-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/pooled.h (includes): added stddef

2001-05-23  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed --enable-count-allocated for arrays.
        * src/mba_utils/array_allocator.cpp (includes): conditionally added
                        iostream
                (dtor): only print 'dumping' once, translate we to bytes
        * include/mba_utils/array_allocator.h (includes): added l2conf

2001-05-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (all AC_MSG_ERROR and AC_MSG_WARN): don't write
                        quotes; autoconf puts them there already, so
                        they cause problems
        * configure : regenerated

2001-05-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_bin.cpp (read_header -- version): check it's 3
        * src/readers/to_bin.cpp (put): write in reverse order so we can
                        read easily
                (write_header): use put for version number; upped version to 3

2001-05-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/array_allocator.cpp (deallocate): ignore frees on
                        null pointers

2001-05-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/array_allocator.cpp (includes): use string, not strings

2001-05-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (enable_apigen): require from_any, not from_xmpl
                (require_from_xmpl): blame JNI, now the only one that
                        requires it
                (require_from_l2): don't claim to blame anyone
        * configure : regenerated

2001-05-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Allocating arrays out of a pool.  The pool is currently empty and
        extended whenever needed by using malloc; but that shouldn't be
        hard to fix.
        * include/mba_utils/array_allocator.h (dtor): not virtual
                (MAX_ITEM_SIZE, b2we, we2b, freelists): added
                (free_item, freelist): removed size ivar, all fn's
                (chunk_item, heaps): removed
                (allocate_array, free_array): removed
                (L2_alloc, L2_alloc_array, L2_free, L2_free_array): added
        * src/mba_utils/array_allocator.cpp : almost entirely rewritten
        * src/mba_utils/Makefile.in (OBJECTS): added array_allocator

        * src/readers/L2_file.cpp (includes): added array_allocator
                (free_array): use L2_free_array
                (alloc_and_zero): use L2_alloc_array
        * src/tms/clause.cpp (includes): added array_allocator
                (initialize): use L2_alloc_array
                (destroy): use L2_free_array

2001-05-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Some better error handling, along with access to the new API:
        * src/readers/l2flight/l2flight.cpp (split): print error message
                                on error before return false
                (main): break, don't return, on errors ;
                (case 'f', 'F'): added

2001-05-21  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added the read part of the API:
        * include/api/livingstone.h (forward): added Candidate
                (have_installed, class failure, nfailures, get_failure):
                        added
                (curent_candidate_): added
        * src/api/livingstone.cpp (ctor, command, idle, diagnose): clear
                        current_candidate_
                (install): set current_candidate_
                (have_installed, failure::is_valid, failure::invalid,
                 nfailures, get_failure): added

        * include/transition/tracker.h (get_candidate): added
        * src/transition/tracker.cpp (install): use get_candidate
                (get_candidate): added


2001-05-21  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added getting the full path to perl, needed for the previous
        checkin:
        * configure.in (PERL): added
        * configure : regenerated
        * doc/user_man/Makefile.in (texi from manual rule): use @PERL@

2001-05-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a perl script to translate stanley scripts to names2ids
        scripts; making it easier to create l2flight scripts.
        * src/readers/names2ids/scr2names.in : added
        * src/readers/names2ids/Makefile.in (BININSTALL): added scr2names
                (scr2names rule): added

2001-05-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Some constification; some of it has positive performance benefits.
        Also changed a constant to an enum value, which allows for
        constant-folding.
        * include/conflict_db/variable.h (is_assignable, is_assumption):
                made const, pure virtual ; removed nonsense part of the
                comment
        * include/conflict_db/assignable.h (is_default): const, const-ref arg
                (is_assignable, is_assumption): made const, virtual
        * include/conflict_db/assumption.h (DEFAULT_VALUE_INDEX): enum
                        value rather than static
                (is_assumption): made const, virtual
                (is_default): make virtual, const, const-ref arg
                (restore_default): don't bother checking, the check is done
                        anyway
        * src/conflict_db/assumption.cpp (DEFAULT_VALUE_INDEX): removed
        * include/conflict_db/dependent.h (is_assignable, is_assumption):
                made const, virtual, correctly indented

        * include/conflict_db/assignment.h (is_inconsistent): const-ref arg
                (get_variable): return pointer-to-const, not const pointer
                (get_resolved_conflicts, get_conflicts, get_other_values):
                        return const-ref, made const

2001-05-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed a large number of warnings in order to be able to have gcc
        compile with "-O2 -W -Wwrite-strings -Wconversion -Wall
        -Wno-non-virtual-dtor -Wno-non-template-friend -Werror"
        Exception: Xerces doesn't, so from_xmpl needs -Wno-unused

        * include/conflict_db/candidate.h (copy ctor): explicitely call
                superclass ctor
        * include/tms/theory.h (is_consistent, is_entailed, last_conflict,
            cast_to_Ptheory): commented out ; they had warnings but it
                    turns out they aren't used anyway
        * include/mba_utils/MBA_string.h (npos): static should be first
                (operator[]): no need to check >= 0 on unsigned
        * src/debuggers/livingstone_debug.cpp (create_debugger): init style
                to something, in case of a wacked-out get_fc_style
        * src/debuggers/ltms_debug.cpp (always_true): static, removed arg name
                (explain_proposition): pass in indent
        * include/conflict_db/assignable.h (is_default)
          include/cover/cover_tracker.h (ctor)
          include/readers/enumeration.h (destroy)
          include/readers/proposition.h (destroy)
          include/readers/transition.h (destroy)
          include/debuggers/conflict_db_debug.h (VariableCallbackObject)
          include/debuggers/ltms_debug.h (ClauseCallbackObject)
          src/debuggers/L2_string_map_listener.cpp (created_clause,
                created_variable, destroying_clause)
          src/debuggers/T_system_debug.cpp (true_for_all_clauses)
          src/opsat/opsat.cpp (next_consistent_candidate)
          src/readers/from_l2.cpp (parse_propositions, parse_observed,
                parse_commands, parse_modes)
          src/readers/l2test/l2test.cpp (main)
          src/readers/xmpl2l2/xmpl2l2.cpp (main)
                : removed name for unused arg[s]

2001-05-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a few functions to the API, along with a bit of testing.
        * include/api/livingstone.h
          src/api/livingstone.cpp (ncandidates, install, get_value): added
        * src/readers/l2flight/l2flight.cpp ('o', 'c'): added an
                        echo and error output
                ('i'): use Livingstone::install, added echo and error
                ('v'): use Livingstone::get_value, added echo and error

2001-05-18  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* RELEASE 2.3.1: tag branch Frozen_2_3_1 to L2Skunk_2_3_1
	* src/livingstone/version.c : update for 2.3.1 release on branch

2001-05-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/theory.h (MAX_TIME_STEP): removed
                        also reindented the file and reparagraphed comments
        * src/tms/theory.cpp (MAX_TIME_STEP): removed; should remove it now
        * include/debuggers/T_system_debug.h (print_variables_at_time):
                        fixed a comment to not refer to MAX_TIME_STEP
        * src/debuggers/T_system_debug.cpp (PrintValueAndTime, parse_cmd):
                        use T_system::NOW, not Theory::MAX_TIME_STEP

2001-05-17  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/l2test/vxmain.cpp (l2test): Increased the number of
                command line arguments that can be tokenized.

2001-05-17  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/readers.dsp: Added from_bin.cpp and from_bin.h to the
                project file.

2001-05-17  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/from_bin.cpp (read_transitions): Fixed a
                redefinition of default parameter for VC++.

2001-05-17  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/opsat/cbfs_tracker_debug.cpp (search_termination) :
		WEIGHT_CUTOFF reason_string: weight cutoff => rank

2001-05-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * RELEASE (tagging it all): Frozen_2_3_1
	* added -b argument (making branches)

2001-05-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Some idiotic fixes that didn't make it somehow...
        * src/api/livingstone.cpp (observe) : fixed check being done in the
                        wrong direction
                (command): same, plus a cut&paste error from above

2001-05-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/names2ids/names2ids.cpp (includes): added tracker_debug
                (main): update to new API ; changed prompt ; fixed
                        one-letter commands to include newline

2001-05-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2flight/Makefile.in
          src/readers/names2ids/Makefile.in (DEPS): added loc_libXERCES,
                        (TARGET rule): link with xerces if needed

2001-05-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        VC++ doesn't grok templates quite correctly, so I rewrote things so
        as to avoid the template, along the lines of an old suggestion
        Scott C had a while ago when we discovered gcc-2.7 doesn't either.
        * include/readers/livingstone_reader.h (apply_translator): removed
                        L2_file arg
        * src/readers/livingstone_reader.cpp (l2r_translate): removed
                (apply_translator): updated assertions, set source & dest
                (merge_eq_vars, strip, remove_duplicates, sort_props):
                        stack-allocate the object of note; use
                        apply_translator directly

        * include/readers/xlate_merge_eq_vars.h
          include/readers/xlate_remove_duplicates.h
          include/readers/xlate_sort_props.h
          include/readers/xlate_strip.h (ctor): default args to null
        * include/readers/L2_file_translator.h (set_source, set_dest):
                        added
                (ctor): default to null
        * src/readers/L2_file_translator.cpp (translate): assert non-null
                        source and dest

        * include/livingstone/L2_assert.h (L2_uninitalized_error): added

2001-05-15  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (allocateCoverDebuggerJNI)
		renamed from allocateCoverDebugger -- Skunkworks
		could not allocate cover debugger.
		tagged to L2Skunk_2_3

2001-05-15  Benoit Hudson  <bhudson@arc.nasa.gov>
        * include/debuggers/livingstone_debug.h (get_string_mapping): added

2001-05-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        Last big addition to the manual, to fix both previous checkins:
        * doc/user_man/l2.manual (table of contents): 'next' is intro,
                'prev' is (dir)
        * doc/user_man/executables.manual (stanley/skunkworks): moved to
                stanley.manual
        * doc/user_man/stanley.manual : added
        * doc/user_man/Makefile.in (TEXI_FILES): added stanley.texi
        * doc/user_man/texinfo.tex : added
        * doc/user_man/l2.info : added

2001-05-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        * top.mk (infodir): added

2001-05-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        A brand-spankin' new user manual!  Much of it is stand-ins for
        something to add later.
        * doc/user_man/Makefile.in              doc/user_man/ack.manual
          doc/user_man/api.manual               doc/user_man/apigen.manual
          doc/user_man/executables.manual       doc/user_man/intro.manual
          doc/user_man/l2.manual                doc/user_man/l2flight.manual
          doc/user_man/l2test.manual            doc/user_man/names2ids.manual
          doc/user_man/overview.manual          doc/user_man/strip_leading_ws
          doc/user_man/xmpl2l2.manual : added
        * configure.in (NOLIB_FEATURE_DIRS): initialize to doc/user_man
        * configure : regenerated
        * l2_update (FILES_TO_CHECK): added l2.info

2001-05-13  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livingstone/version.c: pre-2.4

2001-05-13  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* Released version 2.3, tagged L2Skunk_2_3
	  src/livingstone/version.c
	* doc/starting/stanley-build.html: modified
	* doc/releases/history.html: updated 2.3 contents

2001-05-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (remove_old_variables): fix up the
                        zenith field of Transitioned
        * include/transition/transitioned.h
          src/transition/transitioned.cpp (remove_old_modeTransition): added
        * src/conflict_db/variable.cpp (insert_previous): fixed so we don't
                truncate the list when 'this' is actually being added after
                var, rather than var before this

2001-05-11  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* doc/starting/skunkworks.html: modified
	* doc/starting/stanley-build.html: modified
	* doc/releases/history.html: updated 2.3 contents
	* doc/L2_refman/TOCFrame.htm: added link
	* doc/L2_refman/truncated-failures.html: new

2001-05-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/L2_refman/truncate.html (truncate): removed find-horizon-vars
                (find-horizon-vars): removed
                (summarize-variables): rewritten
                (time complexity): updated for additional O(t) factor

2001-05-11  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed oldest_timestep reporting.
        * src/transition/T_system.cpp (create_state_var): put it
                before the variables about to be removed (those before the
                horizon) ; otherwise, if all we have in the new timestep is
                the state var, the code to find the oldest fails

2001-05-11  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed idle min-progress by side-stepping the issue.  Somehow,
        this breaks the reporting of oldest_timestep until a real progress
        happens.
        * src/transition/T_system.cpp (minimal_progress): do nothing (and
                        comment why) if no command is given

2001-05-11  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed the fix, which was fundamentally borken.
        * include/transition/transitioned.h (transition, idle): timestep is
                        unsigned
                (set_initial_mode): value is signed, added horizon and
                        in_theory args
                (instantiate_indexed_clauses,
                 instantiate_autonomous_clauses,
                 instantiate_unindexed_clauses): shed "at_time" suffix;
                        timestep arg is unsigned, defaults to NOW
                class Proto_transition:
                    (instantiate): added a comment, timestep is unsigned
                    (prop_closest_before, prop_closest_after): added
                    (set_antecedants): added
                    (consequent): turned into a Proto_assignment
                    (mode_var): renamed from transitioned_var
                    (transition_value): renamed from transition_value_index
        * src/transition/transitioned.cpp (idle): timestep is unsigned;
                    no arg to i_a_c
                (transition): timestep is unsigned, don't bother with
                    timestep arg to several
                (set_initial_mode): added arguments; look for mode on or
                        after horizon ; allow negative value => set the
                        value to what it is now ; instantiate the failures
                (instantiate_indexed_clauses,
                 instantiate_autonomous_clauses,
                 instantiate_unindexed_clauses): shed "at_time" suffix;
                        some cosmetic changes
                class Proto_transition:
                    (initialize): fix for member name changes; store var
                                and value for consequent rather than prop
                    (prop_closest_before, prop_closest_after,
                     set_antecedants): created
                    (instantiate): time arg unsigned ; removed
                        commented-out code ; move most of the work
                        to set_antecedants ; use horizon or zenith
                        depending on timestep

        * include/transition/T_system.h (find_horizon_modes,
                horizon_modes): removed
        * src/transition/T_system.cpp (NOW) : removed an obsolete comment
                (remove_old_variables): don't erase horizon_modes
                (summarize_variables): push most of the implementation into
                        set_inital_mode
                (find_horizon_modes): removed

        * src/debuggers/T_system_debug.cpp (print_proto_transition):
                        reindented ; fixed for new Proto_transition member
                        type ; changed output to be easier to read

        * src/readers/to_t_system.cpp (createInitialState): added the new
                        arguments to set_initial_mode

2001-05-10  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix for history=1 bug.  We keep track of a `horizon' transition
        that's before everything else; and a `zenith' (opposite of horizon)
        which is the most recent transition; and a linked list from the
        zenith down to the horizon.  That makes things easier.

        Next to be done, keeping from having a duplicate modeTransition at
        the beginning which was broken by this change.

        * include/transition/transitioned.h (get_transition_var,
                transition_var): removed
                (get_horizon, horizon_transition, get_zenith,
                 zenith_transition): added
                (add_idle_transitions): no args needed
                (idle): take timestep as unsigned not signed
                (create_transitioned_variable): don't return, take timestep
                        as unsigned not signed
        * src/transition/transitioned.cpp (initialize): initialize the
                        horizon by creating a modeTransition ; initialize
                        zenith to it
                (create_transition_variable): maintain the linked list of
                        variables ; don't return
                (idle): return zenith; fixed arguments
                (transition): fix arguments for c_t_v, return zenith
                (constrain_with_failures): removed
                (set_initial_mode): added
                (add_idle_transitions): updated for new naming
                (add_transition_cost): also set weights in horizon_transition

        * include/transition/T_system.h (create_horizon_transition): added
                (horizon_modes): stores both the dependent mode and the
                        assumption modeTransition
        * src/transition/T_system.cpp (summarize_variables): build the
                clauses up given the new info in horizon_modes
                (find_horizon_modes): collect both variables
                (create_horizon_transition): added

        * include/debuggers/L2_string_map.h (has_name_of_variable): added
                (form_name_at_time): name by const-ref
        * src/debuggers/L2_string_map.cpp (get_variable_domain): check
                        for transition by seeing if it's an assumption; only
                        state is a non-transition assumption variable and we
                        already check for it
                (add_variable): check if we already have the variable;
                        allowtimestep=now and read==0
                (form_name_at_time): don't prepend timestep if at time NOW
        * src/debuggers/L2_string_map_listener.cpp (includes): added L2_file
                (created_mode_transition): add the mode if it doesn't
                        already exist ; more name hacking

        * src/readers/to_t_system.cpp (createInitialState): use
                        set_initial_mode if applicable ; vvslist otherwise

2001-05-10  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/memory_pool.cpp (dealloc): call destroy
                even when static memory is disabled

2001-05-09  James Kurien <jkurien@arc.nasa.gov>
        * src/readers/to_t_system.cpp (createInitialState): fixed
	 off by one error in timestep arg to constrain_with_failures
	* transition/transitioned.cpp (constraint_with_failures):
	 Fixed off by one error in usage of timestep arg.
	(create_transition_variable):
	No longer needs to check for duplicate modeTransitions.

2001-05-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/conflict_db_debug.cpp (print_domain_members): don't
                print first element twice
                (cdomains): colon after domain name

2001-05-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Generate names for domains:
        * src/debuggers/domain.cpp (ctor with L2rEnumeration): if no name,
                base name on number of values
                (ctor with L2rMode): base on name of mode variable

2001-05-09  James Kurien <jkurien@arc.nasa.gov>
     * src/transition/transitioned.cpp (create_transition_variable):
	Checks whether transition var already exists to avoid duplicates


2001-05-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/domain.cpp (ctor with L2rEnumeration): fixed for
                case of debug sections disabled

2001-05-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changed how the output filename is specified -- strips off the last
        extension (if any) and replaces it with l2 or l2s (ASCII,
        non-stripped or stripped) or l2bin (binary).  This means `xmpl2l2
        -a cb.l2' (harmlessly) overwrites cb.l2, but also `xmpl2l2 -a
        cb.l2s' (deleteriously) overwrites cb.l2 with a stripped model.

        * src/mba_utils/stringops.cpp (split_filename): return dir as '.'
                if empty
        * src/readers/xmpl2l2/xmpl2l2.cpp (main): filename hacking as above

2001-05-09  James Kurien <jkurien@arc.nasa.gov>
     * src/transition/transitioned.cpp (create_transition_variable):
	Checks whether transition var already exists to avoid duplicates

2001-05-09  Scott Christa  <schrista@arc.nasa.gov>

        * src/api/parameters.cpp (read_from_file): Stopped the ifstream from
                creating an empty params file under Windows.

2001-05-09  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/l2test/l2test.cpp (main): Fixed a compile error if the
                DISABLE_OPTIMIZER macro was defined.

2001-05-09  Scott Christa  <schrista@arc.nasa.gov>
        Updated the VxWorks project files.
        * src/readers/readers.wpj
          src/readers/l2test/l2test.wpj: Updated to build under Livingstone
                version 2.3.

2001-05-09  Scott Christa  <schrista@arc.nasa.gov>
        Updated the Microsoft project files.
        * src/api/api.dsp: Added parameters.cpp and parameters.h.
        * src/mba_utils/mba_utils.dsp: Added stringops.cpp and stringops.h.

2001-05-09  Scott Christa  <schrista@arc.nasa.gov>

       * doc/starting/building_l2.html: Updated the build instructions for
                Windows and VxWorks.

2001-05-09  James Kurien <jkurien@arc.nasa.gov>
     * src/transition/transitioned.cpp (constrain_with_failures) :
	 now returns clause, clause may be in or out according to arg
     * src/transition/t_system.cpp (summarize_variables): now calls
	  constrain_with_failures if it needs to constrain "now" mode
	  from start state

2001-05-09  James Kurien <jkurien@arc.nasa.gov>
        * src/readers/to_t_system.cpp (createInitialState): calls
	t_system->propagate to ensure db has inferred values in place

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Final work on the API for 2.3; added a comment that the parameters
        stuff still needs work and will be changed in 2.4.
        * include/api/livingstone.h (forward): removed L2_file
                (comments): added comment about stability
                (verbose_writer, set_verbosity, set_verbose_writer,
                 get_tracker, get_parameters): moved further down the file
                (read_file, optimize, create_tracker, initialize_tracker):
                        updated comments
                (observe, command, idle, diagnose): added
                (set_parameters): added
        * src/api/livingstone.cpp (observe, command, idle, diagnose): added

        * src/readers/l2flight/l2flight.cpp (main): use the API

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (enable-apigen): moved with the other executables
                (enable-l2strip): removed
                (xmpl2l2): updated docs
                (enable-l2flight, enable-names2ids): added
                (l2flight, names2ids, api_gen, api_scr): added
                (disable-l2bin-format): added
                (disable-debug-sections): reworded

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Updated api_scr to the Livingstone interface.
        * src/liv_utils/api_scr/api_scr.cpp (includes): removed L2_file,
                    from_xmpl, to_t_system, cover_tracker,
                    cover_tracker_debug, L2_string_map,
                    L2_string_map_listener;
                    added livingstone_debug, tracker_debug, version, T_system
                (map, l2): removed
                (main): switched to using the Livingstone object

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Updated api_gen to the Livingstone interface, and some cosmetic
        changes.
        * src/liv_utils/api_gen/api_gen.cpp (includes): added
                        livingstone_debug, tracker_debug, T_system ;
                        removed L2_file, from_xmpl, to_t_system,
                        cover_tracker, cover_tracker_debug, L2_string_map,
                        L2_string_map_listener
                (map, l2): removed
                (convert_to_enum_name): take & return MBA_string
                (write_domains): added
                (write_observable_domains, write_command_domains): use it
                (write_names): added
                (write_observable_names, write_command_names): use it
                (main): switched to using the Livingstone object ;
                        print a comment of when we generated the file

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/api/livingstone.cpp (read_file): added a printout if
                we read parameters from the file

2001-05-08  James Kurien <jkurien@arc.nasa.gov>
	Prevent created of unneeded mode variables
	* src/transition/transitioned.cpp (constrain_with_failures) :
	 changed how it creates transition var
	* src/transition/T_system.cpp (create_mode_transition): sets
	  new var to default.  Previously caller's responsiblity.

2001-05-08  James Kurien <jkurien@arc.nasa.gov>
	Fixed initial time step numbering
        * src/transition/T_system.h (next_timestep) : Made public
                so the reader can timestep from .ini file
        * src/transition/T_system.cpp (ctor) : Put intial time steps back to 0
        * src/readers/to_t_system.cpp (createInitialState): now calls next_timestep()

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changes to how parameters are taken care of.  There we lots of
        duplicates in the previous incarnation.
        * include/api/livingstone.h (includes): removed tracker_debug,
                        tracker, cbfs_tracker, slist; added parameters
                (create_cbfs_tracker, create_cover_tracker): removed
                (create_tracker): added
                (set_verbose_writer, get_parameters): added
                (using_cbfs, is_system_l2): removed
                (get/set*): too many changes to list
                (ivars): removed all but tracker, verbose_writer; added
                        params, filename, filetype, use_optimizer
        * src/api/livingstone.cpp (ctor): renamed all the fields
                (read_file): read the params first
                (create_cbfs_tracker, create_cover_tracker): removed
                (create_tracker): added
                (is_system_l2, read_search_params_file): removed
                (print_search_parameters): print the file name and type,
                        then farm the call off to the parameters
        * include/api/parameters.h : renamed trajectories_tracked to
                max_truncated_candidates ;
                (FC_style): removed invalid since we have invalid_fc
        * src/api/parameters.cpp : renamed trajectories_tracked_ to
                max_truncated_candidates_
        * src/api/Makefile.in (OBJECTS): added parameters.o

        * src/debuggers/livingstone_debug.cpp (create_debugger): name
                changes, set fc style
        * include/readers/livingstone_reader.h (set_verbose_reader,
                set_verbose_optimizer): added

        * src/readers/l2test/l2test.cpp (includes): added from_any
                (main-handling switches): write compare("") as == "" ;
                        name change for verbosity settings ;
                        -p option feeds the argument to the params ;
                        --cover and --cbfs feed as cover/cbfs, not strings
                        and booleans ;
                (main-checking if model is xmpl): use from_any to discover
                        the file type
                (main-creating things): use create_tracker
        * src/livdll/livdll.cpp (setCBFSEngineParamsJNI,
                setCoverEngineParamsJNI): updated for new interface
                (allocateCBFSEngineJNI, allocateCoverEngineJNI): call
                        create_tracker and assert it created the right kind
                        of tracker
                (loadModelJNI): name changes

2001-05-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/stringops.cpp (split_filename, split_equality):
                take first arg as const-ref as per declaration
        * src/mba_utils/Makefile.in (OBJECTS): added stringops.o

2001-05-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/domain.cpp (ctor with L2rMode arg): correctly
                unfreeze the stream

2001-05-07  James Kurien <jkurien@arc.nasa.gov>
        * src/transition/transitioned.cpp (initialize) : Initialized
                transition_var to NULL

2001-05-07  Scott Christa  <schrista@arc.nasa.gov>

        * src/debuggers/tracker_debug.cpp: Removed the VxWorks' include that
                is not needed.

2001-05-07  Scott Christa  <schrista@arc.nasa.gov>
        Updated the Microsoft project files.
        * mba.dsw: Removed the l2strip project.
        * src/livingstone/livingstone.dsp: Added def_conf.h and l2conf.h.
                Removed Livingstone.h and Livingstone_debug.h.
        * src/tms/tms.dsp: Removed tms_utils.h.
        * src/mba_utils/mba_utils.dsp: Removed slist_item.cpp and Resource.h.

2001-05-07  Scott Christa  <schrista@arc.nasa.gov>
        Fixed build errors.
        * src\readers\from_any.cpp (discover_file_type, from_any): Fixed a
                redefinition of default parameter for VC++.
        * cpp/include/mba_utils/list_allocator.h: Moved the dtor to public
                area so that GCC 2.7.2 and VC++ can access it.

2001-05-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2test/l2test.cpp (main): catch exceptions we may
                have missed lower down

2001-05-07  Benoit Hudson  <bhudson@arc.nasa.gov>
        Made a common dictionary type for trivial searches (it's linear,
        but over an expected < 10 elements, expected ~1-2 times per
        execution).
        * include/mba_utils/array_dict.h : added

        * include/api/parameters.h (includes): added array_dict
                (all const MBA_string& return values): now MBA_string
                (struct Dict_item, find_in_dict): removed
                (Search_item, Progress_item, FC_item): added
                (search_dict, progress_dict, fc_dict): changed type to above
        * src/api/parameters.cpp (includes): added stdlib
                (find_in_dict): removed
                (get_search_style, get_progress_style,
                 get_find_candidates_style): added

        * include/readers/from_any.h (includes): added array_dict
                (enum FileType): added
                (ctor): moved to cpp, added version with integral format
                (format_): changed to integral value
                (Type_item, extension_dict, format_dict): added
        * src/readers/from_any.cpp (enum ReaderType,
                 DiscoverTypeEntry, get_type): removed
                (discover_file_type): added
                (ctor): added
                (read): format_ is already integral; no need to check it

2001-05-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/stringops.h , src/mba_utils/stringops.cpp : added

2001-05-07  James Kurien <jkurien@arc.nasa.gov>
      Rather than idling system at start up to enable initial failure,
      the constraints from the start state include failure transitions.
      * include/transition/transitioned.h (constrain_with_failures) :added
      * src/transition/transitioned.cpp (constrain_with_failures) :added
      * src/api/livingstone.cpp : don't call tracker_->progress()
      * src/readers/to_t_system.cpp (createInitialState): now calls
	  constrain_with_failures to create constraints from start state
	  to first time step
      * src/transition/T_system.cpp (ctor) : first timestep is now 1 not 0

2001-05-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/api/parameters.h , src/api/parameters.cpp : added ; to
                be integrated with everything else later

2001-05-04  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (throw_error calls): pass method name
		as an arg

2001-05-04  Benoit Hudson  <bhudson@arc.nasa.gov>
        Bug fix on exit with disable-static-memory
        * include/mba_utils/memory_pool.h (destroy): added
                (Memory_pool::deallocate): don't call destroy
        * src/mba_utils/memory_pool.cpp (dealloc): call destroy

2001-05-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/to_t_system.cpp (includes): removed strstream

2001-05-04  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added reporting to the list allocator; and a performance bug fix
        immediately pointed out by the report.
        * include/mba_utils/list_allocator.h (singleton): added
                (ctor, dtor): made private
                (b2w, w2b): added
                (max_size): conditionally added
        * src/mba_utils/list_allocator.cpp (singleton): define the symbol
                (includes): conditionally added iostream
                (dtor): added printing the largest item, and the number
                        of items on each freelist
                (allocate): use b2w, conditionally update max_size
                (deallocate): use b2w
                (item::allocate): use w2b

        * include/mba_utils/slist_item.h (class Slist_item_common):
                        removed, as it needlessly adds a word to
                        every list item
                (class Slist): no longer inherits from Slist_item_common
                (Slist operators new, delete): added
        * src/mba_utils/slist_item.cpp : removed
        * src/mba_utils/Makefile.in (OBJECTS): removed slist_item.o


2001-05-04  Benoit Hudson  <bhudson@arc.nasa.gov>
        Made the pools large enough to run cb, optimized, with no
        dynamic memory.
        * include/mba_utils/pooled.h (define_static_chunk): added
        * src/conflict_db/assignable.cpp src/conflict_db/assignment.cpp
          src/conflict_db/assumption.cpp src/conflict_db/candidate.cpp
          src/conflict_db/conflict.cpp   src/conflict_db/dependent.cpp
          src/opsat/agenda_types.cpp     src/readers/clause.cpp
          src/readers/enumeration.cpp    src/readers/modes.cpp
          src/readers/proposition.cpp    src/readers/transition.cpp
          src/readers/variable.cpp       src/tms/clause.cpp
          src/tms/proposition.cpp        src/transition/T_system.cpp
          src/transition/transitioned.cpp : set the sizes of everything
                appropriately

2001-05-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/mba_utils/memory_pool.cpp (initialize): include the
                close-brace in the name

2001-05-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (CLEANFILES): add 'objects'
                (liblivdll rules): depend on objects, use it instead of loop
                (objects rule): added

2001-05-03  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a "flight" UI that only knows about IDs, and
        another UI that can turn a name-based script into an ID-based one.
        * src/readers/names2ids/Makefile.in
          src/readers/names2ids/names2ids.cpp
          src/readers/names2ids/.cvsignore
          src/readers/l2flight/Makefile.in
          src/readers/l2flight/l2flight.cpp
          src/readers/l2flight/.cvsignore : added
        * configure.in (enable-names2ids, enable-l2flight): added
        * configure : regenerated

2001-05-03  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added --disable-optimizer
        * include/readers/livingstone_reader.h
          src/readers/livingstone_reader.cpp
                (includes, forward L2_file_translator, l2rtranslate,
                 apply_translator, merge_eq_vars, strip, remove_duplicates,
                 sort_props, optimize): conditional on DISABLE_OPTIMIZER
        * configure.in (disable-optimizer): added
                (require_livingstone_reader): only require if optimizer is
                        enabled
        * configure : regenerated

2001-05-03  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed compiling with --disable-cover
        * src/api/livingstone.cpp (create_cover_tracker): fixed typo in
                conditional

2001-05-03  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed compiling with --disable-report-leaks and
        --disable-dynamic-memory.
        * include/mba_utils/memory_pool.h (POOL_NEEDS_NAME): removed
                (everywhere): don't conditionialize on POOL_NEEDS_NAME
                (Memory_pool<T> ctor): pass in sizeof(T) if not gcc
                (dtor): delete_dyn_on_freelist is conditional on
                        DISABLE_DYNAMIC_MEMORY
        * src/mba_utils/memory_pool.cpp : don't conditionialize on
                        POOL_NEEDS_NAME
                (initialize): include "Memory_pool" in the printout

2001-05-03  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added -s or --strip option to xmpl2l2, which obsoletes l2strip.
        * src/readers/xmpl2l2/xmpl2l2.cpp (OPT_STRIP): added
                (options): added -s/--strip option
                (main): added do_strip and OPT_STRIP case; use
                        to know whether to strip the model (just before
                        optimizing)

        * configure.in (enable_l2strip): removed
                (require_from_l2, require_to_l2): don't blame l2strip
        * configure : regenerated

        * src/readers/l2strip/l2strip.cpp
          src/readers/l2strip/Makefile.in
          src/readers/l2strip/l2strip.dsp : removed

2001-05-02  Scott Christa  <schrista@arc.nasa.gov>
        Made Pooled the base class of Proto_constraint.
        * include/transition/T_system.h
          src/transition/T_system.cpp (make, initialize, destroy, free):
                Added required methods to remove dynamic memory allocation
                of the Proto_constraint class.

2001-05-02  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (throw_error calls): prefix method name
		to message
	* src/livdll/livdll.cpp (mapOverCommandAttributeNamesJNI,
	mapOverObervableAttributeNamesJNI, setAttributeModeJNI): added
	* src/livdll/LivingstoneEngine.h (mapOverCommandAttributeNamesJNI,
	mapOverObervableAttributeNamesJNI, setAttributeModeJNI): added

2001-05-01  Scott Christa  <schrista@arc.nasa.gov>
        Seperate VxWorks stuff into its own file.
        * src/readers/l2test/l2test.cpp (strdup, l2test): Removed from file.
        * src/readers/l2test/vxmain.cpp (strdup, l2test): Created new file
                for VxWorks stuff to call main().

2001-05-01  Scott Christa  <schrista@arc.nasa.gov>

        * src/readers/to_l2.cpp (print_background): Fixed a redefinition
                error in VC++.

2001-05-01  Scott Christa  <schrista@arc.nasa.gov>
        Updated Microsoft project files.
        * src/conflict_db/conflict_db.dsp: Removed Domain.cpp and Domain.h.
        * src/debuggers/debuggers.dsp: Added Domain.cpp and Domain.h.
        * src/mba_utils/mba_utils.dsp: Removed Alloc.cpp and Alloc.h. Added
                list_allocator.cpp, memory_pool.cpp, slist_item.cpp, and
                list_allocator.h.
        * src/readers/readers.dsp: Added to_bin.cpp and to_bin.h.
        * src/readers/l2strip/l2strip.dsp: Link the release and debug build
                with the mba_utils.lib.

2001-05-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        A fairly major speedup in truncation in the not-uncommon case where
        the system is in fact consistent.
        * include/transition/tracker.h (map_command,
                map_over_observations): added
        * src/transition/tracker.cpp  (map_over_observations): added
                (truncate): only unassign if needed

2001-05-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/xlate_sort_props.cpp (count_props): equality &
                positive case increments nsame, not npos

2001-05-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Very minor speedups in XMPL reader.
        * include/readers/from_xmpl.h (all MBA_string arguments): pass by
                        const-ref
        * src/readers/from_xmpl.cpp (list_to_array): take list by ref
                (all MBA_string arguments): by const-ref

2001-05-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed 'dump' command.
        * include/debuggers/tracker_debug.h (dump): removed
        * src/debuggers/tracker_debug.cpp (parse_cmd): removed 'dump' case
                (PrintTimeVariableValue, dump): removed

2001-04-30  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed 'Domain' class from the engine, replacing it with just
        integer counts of the number of values.  A new 'Domain' class
        loosely based on the old was added to the debuggers.

        * src/conflict_db/domain.cpp
          include/conflict_db/domain.h : removed
        * src/conflict_db/Makefile.in (OBJECTS): removed domain.o

        * include/conflict_db/variable.h (no-arg ctor): moved to protected
                (initialize): replaced domain arg with nvalues
                (ctor with args): removed
                (make, pool, chunk, friend Memory_pool): removed
                (free): made pure virtual
                (domain, get_domain): removed
                (props_size): removed
                (get_nvalues): added
        * src/conflict_db/variable.cpp (includes): removed Domain
                (chunk, pool): removed
                (ctor with args): removed
                (initialize): replaced domain arg with nvalues
                (get_prop): renamed props_size
        * include/conflict_db/assignable.h (forward): removed Domain
                (make, initialize): replaced domain arg with nvalues
                (ctor): removed version with args
        * src/conflict_db/assignable.cpp (ctor with args): removed
                (intialize): replaced domain arg with nvalues
        * include/conflict_db/assumption.h (ctor with args): removed
                (make, initialize): replaced domain arg with nvalues
        * src/conflict_db/assumption.cpp (ctor with args): removed
                (initialize): replaced domain arg with nvalues
        * include/conflict_db/dependent.h (no-arg ctor): move to protected
                (make, initialize): replaced domain arg with nvalues
                (ctor with args): removed
        * include/transition/transitioned.h (ctor with args): removed
                (make, initialize): replaced domain arg with nvalues, added
                        transition domain size arg
                (ntransitions, get_ntransitions): added
                (transition_domain, set_transition_domain,
                 get_transition_domain): removed
        * src/transition/transitioned.cpp (pool, Proto_transition::pool):
                        put in BSS
                (ctor with args): removed
                (initialize): replaced domain arg with nvalues, added
                        transition domain size arg that we store
                (create_transition_variable): use ntransitions not domain
                (add_idle_transitions): use get_nvalues not props_size
                (add_transition_cost): assert we don't add too many

        * include/conflict_db/conflict_db.h (forward): removed Domain
                (CONFLICT_DB_ESTIMATED_DOMAINS, friend Conflict_db_debug,
                 create_domain, DomainHtType, domainHt): removed
                (create_assumption, create_assignable, create_dependent):
                        Domain arg becomes unsigned nvalues
        * src/conflict_db/conflict_db.cpp (includes): removed domain.h
                (ctor): don't initialize domainHt
                (dtor): don't destroy the domains
                (create_domain): removed
                (create_assumption, create_assignable, create_dependent):
                        Domain arg becomes unsigned nvalues
        * include/transition/T_system.h (create_present_dependent,
                create_present_assignable, create_present_command,
                create_present_observable, create_present_transitioned,
                create_mode_transition) : Domain arg becomes unsigned nvalues
        * src/transition/T_system.cpp (includes): removed domain, stdio
                (splice, copy_in_past): use get_nvalues instead of
                        props_size or get_domain
                (create_state_var): don't create the domain
                (install_new_state): don't sort the domain
                (create_present_dependent, create_present_assignable,
                 create_present_command, create_present_observable,
                 create_present_transitioned, create_mode_transition) :
                        Domain arg becomes unsigned nvalues
        * src/transition/tracker.cpp (truncate): use get_nvalues for props_size

        * include/readers/to_t_system.h (forward): removed Domain,
                        L2rEnumeration
                (createEnum, findDomain, domainHT, dHTit): removed
                (putVar, variables_by_id): added
                (varHT, vHTit): removed
        * src/readers/to_t_system.cpp (includes): removed domain
                (hash_enum, hash_var): removed
                (ctor): don't init domainHT, varHT; do init variables_by_id
                (dtor): delete variables_by_id
                (write): don't createEnum
                (createEnum): removed
                (createVariable): use size not domain, putVar not varHT
                (createTransitions): removed creating the domain
                (findDomain): removed
                (putVar): added
                (findVar): rewritten

        * include/debuggers/L2_string_map.h (forward): added Domain, L2_file
                (var2values): removed
                (domains, varid2domain, xvarid2domain, state_domain): added
                (get_variable_domain): added
                (begin_domain, end_domains): added
                (create_domains): added
        * src/debuggers/L2_string_map.cpp (include): updated domain
                        directory, added L2_file
                (ctor): don't init var2values, do init state_domain and
                        varid2domain/xvarid2domain (last two to zero)
                (dtor): don't muck with var2values ; clear out the new fields
                (get_variable_values): call get_variable_domain
                (get_variable_domain): added
                (create_domains): added
                (add_variable): removed code to set domain except for state var
                (remove_variable): removed code to remove domain
                (get_prop_by_name): ask domain to search by name
        * src/debuggers/L2_string_map_listener.cpp (ctor): ask map to
                        create the domains now that we know the file
                (created_mode_transition): get_nvalues not props_size
        * include/debuggers/conflict_db_debug.h (includes): removed domain
                (forward): added Domain
                (find_domain): removed
        * src/debuggers/conflict_db_debug.cpp (includes): added domain.h
                (find_domain): removed
                (cdomains, print_domain_members, print_domains): rewritten
                        for new Domain class

        * include/debuggers/domain.h
          src/debuggers/domain.cpp : added
        * src/debuggers/Makefile.in (OBJECTS): added domain.o

        * src/debuggers/tracker_debug.cpp (dump): disabled

2001-04-30  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (setCBFSEngineParamsJNI,
                setCoverEngineParamsJNI): added; store args into
                Livingstone_debug slots for create_cbfs_tracker to access.
		(allocateCBFSEngineJNI, allocateCoverEngineJNI )
		 remove search params printout, remove args
		(allocateCBFSDebuggerJNI, allocateCoverDebuggerJNI )
		call print_search_parameters
		(loadModelJNI ) remove optimizeP arg; add String return arg
	* src/livdll/LivingstoneEngine.h revised args
	* src/api/livingstone.h remove params_file_read
	* src/api/livingstone.cpp (read_search_params_file ) remove
		params_file_read

2001-04-29  Shirley Pepke  <spepke@arc.nasa.gov>
        * include/cbfs_agenda.h: 'initialize_agenda' now reverses order of
                candidates added to heap so that in case of all consistent
                same-weight, they are returned in same order... a user
                convenience.
        * include/opsat.h: 'set_max_candidates' now calls 'set_allocated_size'
                on heap.
        * src/opsat.cpp: Constructors call 'set_max_candidates' rather than
                directly assigning max_cands.
                'find_candidates' calls 'zero_candidate_count' so that max_cands
                is applied on each search rather than to the accumulated total.
        * include/binaryheap.h: 'GPtrArray::SetAllocLength' reallocates so that,
                for instance, once 'set_max_candidates' is called on Opsat,
                no additional memory allocation should need to take place.
                BinaryHeap::set_allocated_size(unsigned int) added for access
                to this from other classes (that have no knowledge of the
                GPtrArray class, in general).

2001-04-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Allows some more constant-folding to happen.
        * include/tms/proposition.h (PFALSE, PTRUE, UNKNOWN): moved to an enum
                (truth_value_t): added
        * src/tms/proposition.cpp (PFALSE, PTRUE, UNKNOWN): removed

2001-04-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Memory allocation routines for arrays.  Not convinced this is the
        right approach, but at least it gets us away from new[]/delete[].
        * include/mba_utils/array_allocator.h
          src/mba_utils/array_allocator.cpp : added

2001-04-27  Shirley Pepke <spepke@arc.nasa.gov>
        Fixed bug wherein candidates for differing initial states aren't
        returned if consistent.
        * src/opsat/cbfs_tracker.cpp: 'find_fresh_candidates' now
                initializes the search agenda with a candidate for each
                initial state assignment.

2001-04-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed obsolete memory handling routines.
        * include/mba_utils/alloc.h
          include/mba_utils/resource.h
          src/mba_utils/alloc.cpp : removed
        * include/opsat/cbfs_agenda.h (includes): removed resource.h
        * src/mba_utils/Makefile.in (OBJECTS): removed alloc.o

2001-04-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        An attempt to reduce the code size by putting common memory
        handling code into a non-templated class.
        * include/mba_utils/memory_pool.h (includes): assert, stdio removed
                (class Generic_memory_pool): added
                (class Memory_pool): inherit from it
                (Memory_pool functions): turned into type-safe wrappers of
                        G_m_p functions
        * src/mba_utils/memory_pool.cpp : added implementation of G_m_p fns
        * src/mba_utils/Makefile.in (OBJECTS): added memory_pool.o

2001-04-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/slist_item.h (includes): added stdlib, needed
                on solaris

2001-04-26  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/readers.wpj
          src/readers/l2test/l2test.wpj: Added more source files to the
                VxWorks' project.

2001-04-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Mostly fixes PR 1417, list memory handling.  It still uses malloc,
        but that should be easy to remove now.
        * include/mba_utils/slist_item.h (includes): added list_allocator
                (class Slist_item_common): added
                (class Slist_item): inherit from above
                (Slist_item new, delete, freelist): removed
        * include/mba_utils/list_allocator.h : added
        * src/mba_utils/list_allocator.cpp
          src/mba_utils/slist_item.cpp : added
        * src/mba_utils/Makefile.in (OBJECTS): added list_allocator,
                        slist_item

2001-04-26  Scott Christa  <schrista@arc.nasa.gov>
        * include/opsat/cbfs_tracker.h: Placed the static definition of
                DEFAULT_CBFS_MAX_CUTOFF_WEIGHT outside the class definition.
        * src/opsat/cbfs_tracker.cpp (CBFS_tracker): Added
                DEFAULT_CBFS_MAX_CUTOFF_WEIGHT definition and typed cast
                max_cutoff_weight.
        * include/readers/to_t_system.h: Made dtor virtual.
        * src/api/livingstone.cpp (read_search_params_file): Made the
                "ifstream input" compatable with VC++ and GCC.
        * src/readers/from_any.cpp (read): Changed one ENABLE_L2_FORMAT to
                ENABLE_L2BIN_FORMAT.
        * src/readers/readers.dsp: Added xlate_sort_props to the project.
        * src/transition/T_system.cpp (get_command, is_command,
                get_observable, is_observable, get_transitioned,
                is_transitioned): Added the template arguments for
                get_variable_by_id.

2001-04-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix PRs 1363, 1364, 1365 (duplicates of each other).
        * src/readers/to_t_system.cpp (write): added checks that the model
                is not empty
        * include/livingstone/L2_assert.h (L2_empty_model_error): added

2001-04-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/debuggers/ltms_debug.h
          include/debuggers/conflict_db_debug.h
          include/debuggers/T_system_debug.h
          include/debuggers/tracker_debug.h
          include/cover/cover_tracker_debug.h
          include/opsat/cbfs_tracker_debug.h (parse_cmd): made virtual
                (listener_usage): made const, virtual
        * src/debuggers/ltms_debug.cpp
          src/debuggers/conflict_db_debug.cpp
          src/debuggers/T_system_debug.cpp
          src/debuggers/tracker_debug.cpp
          src/cover/cover_tracker_debug.cpp
          src/opsat/cbfs_tracker_debug.cpp (listener_usage): made const;
                re-indented and changed coding style slightly

2001-04-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed the various 'props' parts of the L2_file structure,
        merging them all into one.  Again, reading and optimizing is
        made cheaper, writing more expensive.
        * include/readers/L2_file.h (forward): removed VarValue and VarVar
                (npos_props_, nneg_props_, nsame_props_, ndiff_props_,
                 pos_props_, neg_props_, same_props_, diff_props_): removed
                (nprops_, props_): added
                (ctor): init props, don't init removed fields
                (getPosProp, getNegProp, getSameProp, getDiffProp): removed
                (getProp): inlined like the other get* functions
                (nposprops, nnegprops, nsameprops, ndiffprops): removed
                (nprops): just return nprops_
                (allocProps): only one argument
                (setPosProp, setNegProp, setSameProp, setDiffProp): removed
        * src/readers/L2_file.cpp (dtor): delete props, don't delete
                        removed fields
                (allocProps): only allocate the one field
                (getProp): removed
                (setPosProp, setNegProp, setSameProp, setDiffProp): removed
                (setProp): much simpler, just set it

        * configure.in (conf_xlators): added xlate_sort_props
                (require_livingstone_reader): require xlate_sort_props
        * configure : regenerated

        * include/readers/livingstone_reader.h (sort_props): added
        * src/readers/livingstone_reader.cpp (includes): added xlate_sort_props
                (sort_props): added
        * include/readers/from_xmpl.h (nprops_): added
                (ctor): init nprops to zero
        * src/readers/from_xmpl.cpp (find_or_create_prop): set the prop ID
                        immediately, increment nprops_
                (read): simpler code to move from list to L2_file
        * src/readers/from_bin.cpp (read_propositions): allocProps takes
                only one arg
        * src/readers/from_l2.cpp (parse_propositions): renamed eq/ne_count
                        to same/diff_count ; allocProps takes only one arg

        * include/readers/L2_file_translator.h (copy_prop): added
        * src/readers/L2_file_translator.cpp (copy_prop): added
                (copy_all_props): use copy_prop
        * src/readers/xlate_remove_duplicates.cpp (copy_all_props):
                much simpler that all props are equal
        * src/readers/xlate_sort_props.cpp
          include/readers/xlate_sort_props.h : added

        * include/readers/to_bin.h (forward): added L2rProposition, removed
                        L2rPropVarVar and VarValue
                (write_one_varvalue, write_one_varvar): take L2rProposition
                (npos, nneg, nsame, ndiff): added
        * src/readers/to_bin.cpp (includes): added xlate_sort_props
                (ctor): set the new fields and assert that the props are
                        sorted
                (write_header): use the new fields
                (write_one_varvalue, write_one_varvar): take L2rProposition
                        and assert it's of the right type
                (write_props): use L2_file::getProp rather than its removed
                        functions
        * src/readers/to_l2.cpp (includes): added xlate_sort_props
                (print_propositions): count, assert they're sorted, and
                        print uniformily

        * src/readers/xmpl2l2/xmpl2l2.cpp (main): sort the props before
                writing to l2 or bin

2001-04-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed the 'background' part of the L2_file structure.
        As usual, this saves code and time when reading (and optimizing),
        but makes the writers more complicated.
        * include/readers/L2_file.h (nbackground_, background_): removed
                (ctor): don't init removed fields
                (getBackground, nbackground, allocBackground, setBackground):
                        removed
                (addBackground): added
        * src/readers/L2_file.cpp (dtor): don't delete removed field
                (allocBackground, setBackground): removed
                (addBackground): added

        * include/readers/from_bin.h (read_background): removed
        * src/readers/from_bin.cpp (read): don't read_background
                (read_background): removed
        * include/readers/from_l2.h (getBackground, nbackground): removed
        * src/readers/from_l2.cpp (parse_background): add rather than alloc
                        and set
        * include/readers/from_xmpl.h (background_, backgroundIT): removed
        * src/readers/from_xmpl.cpp (end_clause): just put into the background
                (read): don't go through the background model

        * include/readers/L2_file_translator.h (copy_all_background): removed
        * src/readers/L2_file_translator.cpp (translate): don't copy background
                (copy_all_background): removed
        * src/readers/xlate_merge_eq_vars.cpp (find_equivalences): iterate
                through all clauses and check if it's a background clause,
                rather than only going through the background (since we no
                longer can)

        * src/readers/to_l2.cpp (print_background): count the background
                clauses, iterate through all and print only the background
                ones
        * src/readers/to_t_system.cpp (write): iterate through all clauses
                (createBackground): check if it's actually a bg clause

2001-04-25  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* include/api/livingstone.h: added (is_system_l2), removed
		args from (create_cbfs_tracker, create_cover_tracker)
	* src/api/livingstone.cpp: added (is_system_l2), removed
		args from (create_cbfs_tracker, create_cover_tracker)
	* src/livdll/livdll.cpp: removed args from
		create_cbfs_tracker & create_cover_tracker
	* src/readers/l2test/l2test.cpp: (main) removed args from
		(create_cbfs_tracker, create_cover_tracker) ;
		added clarifying output -- "Reading model file(s): "
	        & "Optimizing model ..."

2001-04-24  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed a bad commit:
        * src/debuggers/T_system_debug.cpp (assign_mode): don't use
                find_assignment, modes aren't assignable

2001-04-24  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed PR 1208, and requests from ICS, Charles Pecheur, and others.
        * include/debuggers/T_system_debug.h (assign_mode): added
        * src/debuggers/T_system_debug.cpp (parse_cmd, listener_usage):
                        added assign-modes
                (print_transitioned): don't print deleted clauses
                (assign_mode): added

        * include/transition/transitioned.h
        * src/transition/transitioned.cpp (set_mode): added

        * include/transition/T_system.h (is_observable, get_transitioned,
                is_transitioned): added
        * src/transition/T_system.cpp (get_variable_by_id): added
                (get_command, is_command, get_observable): rewritten to use it
                (is_observable, get_transitioned,
                is_transitioned): added

2001-04-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/conflict_db_debug.cpp (assign): removed unused
                variable

2001-04-23  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/api/livingstone.cpp (read_search_params_file):
		correct error reading .xmpl model files.
	* src/readers/l2test/l2test.cpp (main): set use_optimizer
		true, when .params file specifies min-progress

2001-04-22  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* include/livingstone/L2_assert.h: add  L2_parse_params_error

2001-04-22  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/readers/l2test/l2test.cpp (main): add default progress_uses_full
		to arg lists of create_cbfs_tracker & create_cover_tracker;
		add max_cutoff_weight to arg list of create_cbfs_tracker;
		uniform print out of search parameters with livdll.cpp;
		call (read_search_params_file) and override
		cmd line/default params.
	* include/api/livingstone.h (create_cbfs_tracker, create_cover_tracker):
		add progress_uses_full arg
	* include/api/livingstone.h (create_cbfs_tracker):
		add max_cutoff_weight arg; add (read_search_params_file)
	* src/api/livingstone.cpp (create_cbfs_tracker, create_cover_tracker):
		add progress_uses_full arg; add (read_search_params_file) and
		(print_search_parameters)
	* src/api/livingstone.cpp (create_cbfs_tracker):
		add max_cutoff_weight arg
	* src/livdll/livdll.cpp (allocateCBFSEngine, allocateCoverEngine):
		add progress_cmd_type and fc_cmd_type; pass progress_cmd_type
		to create_cbfs_tracker & create_cover_tracker.
	* src/livdll/livdll.cpp (allocateCBFSDebugger, allocateCoverDebugger):
		add fc_cmd_type; call set_fc_style with it
	* src/livdll/livdll.cpp (allocateCBFSEngine): add max_cutoff_weight
		to arg list for create_cbfs_tracker.
	* src/opsat/cbfs_tracker.h (ctors): add max_cutoff_weight;
		define DEFAULT_CBFS_MAX_CUTOFF_WEIGHT
	* src/opsat/cbfs_tracker.cpp (ctors): add max_cutoff_weight;
		replace 100 with max_cutoff_weight.

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed PR 1407.
        * src/debuggers/T_system_debug.cpp (variable_time_iterator): L2_assert
                rather than cerr
        * src/debuggers/conflict_db_debug.cpp (assign): L2_assert rather
                than if, sprintf, cerr, throw
                (parse_cmd): don't catch exceptions that may be thrown here
        * src/debuggers/tracker_debug.cpp (parse_cmd): L2_assert rather
                than cerr ; don't catch exceptions

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/clause.h
          include/tms/ptheory.h
          src/tms/clause.cpp
          src/tms/ltms.cpp
          src/tms/ptheory.cpp : removed assert.h include, changed all
                C-style assert to L2_assert or L2_throw

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed PR 1378.
        * include/readers/clause.h (L2rClause::destroy): added
                        a comment w.r.t. the const_cast
                (dbg_L2rClause::make, initialize): added a const
        * src/readers/from_xmpl.cpp (find_or_create_clause): fixed const
                hacking

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/tms_utils.h : removed
        * include/debuggers/ltms_debug.h (includes): removed tms_utils

2001-04-19  Shirley Pepke <spepke@arc.nasa.gov>
	* src/liv_utils/api_gen/api_gen.cpp: NUM_observation_types and
		NUM_command_types assigned values.

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Incorporated Pat's changes to the debuggers to correctly deal
        with a stream argument.
        * include/debuggers/T_system_debug.h (print_assignment,
                print_start_state_assignment)
        * include/debuggers/conflict_db_debug.h (print_assignment,
                print_candidate, print_conflict): added versions with
                        stream argument ; versions without call other
                        version with the debugger's default stream

        * src/debuggers/T_system_debug.cpp (print_assignment,
                print_start_state_assignment)
        * src/debuggers/conflict_db_debug.cpp (print_assignment,
                print_candidate, print_conflict)
        * src/debuggers/tracker_debug.cpp (print_candidates): use new
                outstream argument and pass it to sub-functions

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_bin.cpp (read_one_variable)
          src/readers/to_bin.cpp (write_one_variable) : added default case
                for translating kind to/from integers, lack of which
                cause a warning

2001-04-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a binary file format.
        * include/readers/from_bin.h
          include/readers/to_bin.h
          src/readers/from_bin.cpp
          src/readers/to_bin.cpp : added

        * src/readers/from_any.cpp (includes): conditionally added from_bin
                (ReaderType): added l2bin
                (extension_dict, format_dict): added l2bin
                (read): added handling for l2bin

        * configure.in (conf_readers): added from_bin
                (conf_writers): added to_bin
                (enable_xmpl2l2): added requiring to_bin
                (--disable-l2bin-format): added
        * configure : regenerated
        * acconfig.h (ENABLE_L2BIN_FORMAT): added
        * include/livingstone/gnu_conf.h.in : regenerated

        * include/readers/modes.h (nnominal, nfailure): added
                (domain_size): use nfailure

        * include/livingstone/L2_assert.h (L2_writer_error): added

        * src/readers/xmpl2l2/xmpl2l2.cpp (includes): added to_bin
                (OPT_BINARY, OPT_ASCII): added
                (options): added -a (--ascii) and -b (--binary)
                (main): added parsing those options; reading any input
                        format ; creating ascii and/or binary output files

2001-04-19  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/modes.cpp (destroy): Removed "++it" to fix memory leak.

2001-04-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added API for the fc-style command.
        * include/debuggers/tracker_debug.h (set_fc_style, get_fc_style):
                        added
        * src/debuggers/tracker_debug.cpp (ctor, parse_cmd): use set/get
                        fc_style rather than the ivar

2001-04-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added fc-style command to specify what 'fc' means.
        * include/debuggers/tracker_debug.h (FC_style, FC_dict_item,
                fc_dict, find_style, fc_style): added
        * src/debuggers/tracker_debug.cpp (fc_dict, find_style): added
                (parse_cmd): added fc-style ; find-candidates now
                        does something based on current fc_style
                (listener_usage): added fc-style, removed findfresh

2001-04-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/from_l2.h (dtor): added
        * src/readers/from_l2.cpp (dtor): close the file

2001-04-18  Scott Christa  <schrista@arc.nasa.gov>
        * include/mba_utils/utils.h: Added a progma to disable all VC++ 4786
                warning messages.
        * src/mba_utils/mba_utils.dsp: Added memory_pool.h and pooled.h to
                the project Header Files folder.
        * src/readers/readers.dsp: Added modes.cpp, xlate_merge_eq_vars.cpp,
                and xlate_strip.cpp to the project.

2001-04-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/transition.h (dbg_L2rTransition::destroy) :
                remember to call superclass destroy if needed

2001-04-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        New mechanism for representing the transitions: they are now stored
        with the variable.  This simplifies reading and putting into the
        tracker (two steps required in-flight), at the cost of complicating
        writing to file (not required in-flight).

        * include/readers/modes.h
          src/readers/modes.cpp : added
        * src/readers/Makefile.in (OBJECTS): added modes.o

        * include/readers/transition.h (id_, mode_transition_): removed
                (make, initialize): removed id argument
                (id, setID, modeTransition, setModeTransition): removed
                (ostream functions): removed printing id
        * include/readers/variable.h (forward): added L2rMode
                (mode_): added
                (initialize, L2rVariable::destroy): moved to cpp file
                (dbg_L2rVariable::destroy): fixed to actually call
                        superclass destroy as it should
                (setKind, setInitial): moved to cpp
                (mode, mode_friend): added
        * src/readers/variable.cpp (includes): added modes
                (initialize, destroy, setKind, setInitial): added from
                        header file

        * src/transition/transitioned.cpp (initialize): add the nominal
                cost immediately

        * include/readers/L2_file.h (nnom_x_, nfail_x_, nom_x_, fail_x_,
                getTransition. nnominal. nfailures, ntransitions,
                allocTransitions, setTransition) : removed
                (ctor): don't initialize removed fields
                (addTransition): added
        * src/readers/L2_file.cpp (includes): added modes
                (dtor): don't free removed fields
                (allocTransitions, setTransition): removed
                (addTransition): added

        * include/readers/from_l2.h (getTransition, ntransitioned): removed
                (parse_one_transition): removed unsigned argument
        * src/readers/from_l2.cpp (parse_one_transition): removed index
                        argument ; set the kind of the mode variable if
                        not already set ; don't specify id to transition
                (parse_transitions): don't allocTransitions, don't pass
                        in x_index
        * src/readers/from_xmpl.cpp (end_transition): don't give transition
                        an id
                (read): don't count/alloc/set, just add them

        * src/readers/to_l2.cpp (includes): added modes.h
                (gather_one_transition): added
                (print_transitions): gather the nominal and failure
                        transitions seperately, keeping track of whether
                        there's any debug info ; use that instead
                        of dbg_transitions

        * include/readers/to_t_system.h (createTransitions): added
                (createTransition): added unsigned arg
        * src/readers/to_t_system.cpp (includes): added modes
                (x_cmp, x_find_pivot, x_partition, x_qsort,
                 sort_transitions) : removed
                (write): removed code to sort the transitions, loop through
                        variables to find their transitions instead
                (createTransitions): added
                (createTransition): index is given; use it instead of
                        x->modeTransition()
                (findVar): print the ID of the variable not found

        * include/readers/L2_file_translator.h (get_dest_transition,
                 get_source_transitions, add_mapping on transitions,
                 fore_transition_map_, back_transition_map_): removed
                (copy_enum, copy_var, copy_clause): made virtual
                (copy_transition): made virtual, removed id arg
        * src/readers/L2_file_translator.cpp (includes): added modes
                (ctor): don't init the transition mappings
                (get_dest_transition, get_source_transitions, add_mapping):
                        removed
                (copy_transition): removed id arg ; don't set new transition
                        id ; use addTransition rather than set
                (copy_all_transitions): rewritten

        * include/readers/xlate_strip.h (copy_all_transitions): removed
                (copy_transition): added
        * src/readers/xlate_strip.cpp (copy_all_transitions): removed
                (copy_transition): added from the inner loop of the old
                        copy_all

2001-04-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file_translator.cpp (add_mapping on variables):
                only set flags if source has interesting ones -- needed
                when merging command/obs/mode var with dependents.

2001-04-16  Scott Christa  <schrista@arc.nasa.gov>
        * doc/starting/building_l2.html: Updated the Livingstone build
                documentation under Windows to reflect the new changes.
        * src/api/api.dsp: Changed the build settings to be consistent with
                the other projects.
        * src/readers/l2test/l2test.dsp: Removed the livingstone.cpp from the
                project file because it's in the API project file.
        * src/readers/readers.dsp: Added header files to the Header Files
                folder.

2001-04-16  Scott Christa  <schrista@arc.nasa.gov>
        * mba.wsp: Removed the l2run project.
        * include/readers/clause.h
          include/readers/transition.h (destroy): Cast away the pointer
                 constant for VC++.
        * src/debuggers/debuggers.dsp: Added livingstone_debug.h to the
                 project file.
        * src/readers/l2test/l2test.dsp: Added livingstone.cpp and .h to the
                 project file.
        * src/readers/xmpl2l2/xmpl2l2.dsp: Changed the path to the to_l2.cpp.

2001-04-16  James Kurien <jkurien@arc.nasa.gov>
	Fixed to compile on VC++
        * src/readers/livingstone_reader.cpp (ctor): removed spurious ':'
	  src/readers/L2_file_translator.cpp: Fixed usual VC++ problem with
            declaring a varible in a for loop header

2001-04-16  James Kurien <jkurien@arc.nasa.gov>
	Fixed after src updates so VC++ knows which files to compile
	* src/api/api.dsp: Added file
	  src/debuggers/debuggers.dsp: Added entries
	  src/readers/readers.dsp: Added entries

2001-04-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/L2_file_translator.h
          src/readers/L2_file_translator.cpp (add_mapping): var and
                    clause versions no longer take a bool, and always
                    check the flags
                (add_mapping_unchecked): added, never check the flags

2001-04-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file_translator.cpp (ctor): removed spurious ':'

2001-04-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed set_output not actually redirecting optimizer output.
        * include/readers/L2_file_translator.h (set_output, get_output,
                out): added
        * src/readers/L2_file_translator.cpp (ctor): init out to cout

        * src/readers/livingstone_reader.cpp (apply_translator):
                tell optimizer to set output

        * include/readers/xlate_merge_eq_vars.h (ctor with ostream, out):
                removed
        * src/readers/xlate_merge_eq_vars.cpp (ctor with ostream): removed
                (copy_all_vars): use get_output rather than out

        * src/readers/xlate_remove_duplicates.cpp (verbose): made send to
                get_output
                (all references to cout): removed

2001-04-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added the optimization of removing duplicate clauses, tautologies,
        and propositions of the form vi=vi.  And lots of things required
        by that or by debugging that.

        * include/readers/xlate_remove_duplicates.h
          src/readers/xlate_remove_duplicates.cpp : added

        * configure.in (conf_xlators): added xlate_remove_duplicates,
                (enable_xmpl2l2): require livingstone_reader, not from_any
                (require_livingstone_reader): require strip and
                        remove_duplicates
        * configure : regenerated

        * include/readers/livingstone_reader.h (forward): added
                        L2_file_translator
                (merge_eq_vars, strip, remove_duplicates,
                 apply_translator): added
        * src/readers/livingstone_reader.cpp (includes): added
                        L2_file_reader, L2_file_translator, xlate_strip,
                        xlate_remove_duplicates
                (l2r_translate, apply_translator, merge_eq_vars, strip,
                 remove_duplicates): added
                (optimize): rewritten to use new functions

        * include/readers/L2_file_translator.h (translate): no longer pure
                (add_mapping): added bool arg to variable, clause
                (copy_all_*): made virtual
                (copy_all_vars): added
        * src/readers/L2_file_translator.cpp (translate): added
                (add_mapping): added checks for flags that should (almost)
                        always be copied
                (copy_all_vars): added
                (copy_all_background): nclauses is based on dest, not source

        * include/readers/xlate_merge_eq_vars.h (translate): removed
                (copy_all_vars): added
        * src/readers/xlate_merge_eq_vars.cpp (translate): removed
                (copy_all_vars): has most of the code translate did

        * include/readers/xlate_strip.h (translate): removed
                (strip_enums, strip_variables, strip_propositions,
                 strip_clauses, strip_background, strip_transitions): removed
                (copy_all_enums, copy_all_vars, copy_all_clauses,
                 copy_all_transitions): added
        * src/readers/xlate_strip.cpp (translate): removed
                (copy_all_enums, copy_all_vars, copy_all_clauses,
                 copy_all_transitions): renamed from strip_*
                (strip_propositions, strip_background): removed

        * src/readers/L2_file.cpp (setPosProp, setNegProp, setSameProp,
                setDiffProp): assert no previous occupant, set ID
                        which either sets it or asserts
        * include/readers/proposition.h (setID)
          include/readers/variable.h (setKind, setInitial): use L2_assert;
                accept setting to the same thing again

        * include/readers/varkind.h (VarKind_to_string): added

        * src/readers/from_l2.cpp (parse_var_modifier): check
                the kind, report the error

2001-04-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/livingstone_debug.cpp (create_debugger,
                init_tracker_created_writer): conditionally create the
                        mapping so that we can call them in either order

2001-04-13  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (pruneAndSearchJNI): added
	* src/livdll/LivingstoneEngine.h: updated
	* doc/starting/skunkworks.html: revised

2001-04-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Made Sun CC 6.0 compile it:
        * include/debuggers/livingstone_debug.h (forward): removed istream
        * include/readers/livingstone_reader.h
          include/readers/xlate_merge_eq_vars.h (forward): removed ostream
        * src/readers/L2_file_translator.cpp (copy_*): don't write the
                default value
        * src/readers/from_any.cpp (ReaderType): remove the last comma

2001-04-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl.cpp (read): set the transition IDs
        * include/readers/transition.h (setID): added
        * src/readers/L2_file.cpp (setTransition): assert the transition
                is correctly nominal/failure depending on index

2001-04-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * l2_update (FILES_TO_CHECK): removed acconfig.h since it's not
                automatically generated

2001-04-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * xerces.mk (ROOT_XERCES_SO): added
                (XERCESCROOT, loc_libXERCES rules): use ROOT_XERCES_SO

2001-04-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (with-purify, PURIFY): added
        * configure : regenerated
        * top.mk (PURIFY): added
                (LINKEXEC): prefixed with PURIFY

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp (allocateCoverDebugger): somehow I'd
                forgotton to rewrite this one earlier

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/xmpl2l2/xmpl2l2.cpp (includes): replace L2_file and
                        from_xmpl with Livingstone_reader
                (OPT_VERBOSE): changed to [row] as with l2test
                (main): changed verbose handling, use Livingstone_reader
                        rather than piece-meal reader, optimize;
                        still uses to_l2

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl.cpp (try_to_open): return true if no
                        failure!
                (read): added outputing what file we're about to read
        * src/readers/from_any.cpp (read): make the reader verbose if
                appropriate

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl.cpp (includes): added errno.h
                (try_to_open): added
                (read): handler, parser are stack-allocated;
                        use try_to_open before asking Xerces to do it
                        in order to get useful error messages;
                        catch XMLException and rethrow as L2_reader_error

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2test/l2test.cpp (calls to Livingstone_debug):
                fixed setVerbosity -> set_verbosity, create_*_tracker
                has a new argument

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/api/livingstone.h (create_cbfs_tracker,
                create_cover_tracker): added max_truncated argument
                (verbose_writer): added
                (set_verbosity): renamed from setVerbosity
        * src/api/livingstone.cpp (create_cbfs_tracker,
                create_cover_tracker): added max_truncated argument

        * include/readers/livingstone_reader.h (forward): added ostream
                (set_verbosity): renamed from setVerbosity
                (verbose_reader, verbose_optimizer): added
                (get_output, set_output, out): added
        * src/readers/livingstone_reader.cpp (verbose): added
                (ctor): intialize out to cout
                (read_file, optimize): use verbose macro

        * src/livdll/livdll.cpp (includes): removed
                {cover,cbfs}_tracker{,_debug} , added livingstone_debug
                (struct livdll_package): removed
                (all refs to livdll_package or its fields): replaced
                        by Livingstone_debug or its accessor functions
                (allocateCoverEngine, allocateCoverDebugger,
                 allocateCBFSEngine, allocateCBFSDebugger,
                 loadModel):
                        use the new Livingstone_debug functions

2001-04-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/xlate_strip.cpp (strip_propositions): fixed call to
                        copy_all_propositions to new name copy_all_props
                (strip_background): use copy_all_background
                (strip_transitions): fix const hacking

2001-04-10  Benoit Hudson  <bhudson@arc.nasa.gov>

        * l2_update (FILES_TO_CHECK): removed l2test as it's no longer
                automatically generated

2001-04-10  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reinstated class Livingstone from 1.5.1 and prior.  But it
        now conforms to the new architecture.
        Livingstone_reader only knows how to read & optimize ;
        Livingstone knows how to talk to the tracker as well ;
        Livingstone_debug also knows about the map and debuggers.

        * include/readers/livingstone_reader.h
          src/readers/livingstone_reader.cpp : added class Livingstone_reader

        * include/api/livingstone.h
          src/api/livingstone.cpp
          src/api/Makefile.in : added class Livingstone

        * include/debuggers/livingstone_debug.h
          src/debuggers/livingstone_debug.cpp
          src/debuggers/Makefile.in : added class Livingstone_debug

        * configure.in (xlate_dirs): added livingstone_reader
                (enable_l2test): swapped from_any, xlate_*, and to_t_system
                        for livingstone_reader
                (interpreting require_ macros): added require_debuggers,
                        require_engine, require_livingstone_reader
                (FEATURE_DIRS for engine): added src/api
        * configure : regenerated

        * src/readers/l2test/l2test.cpp (includes): removed all but
                        options, version, MBA_string, stdlib ; added
                        livingstone_debug, tracker
                (class engine_package): removed
                (OPT_VERBOSE): now takes argument in [row]
                (main): verbose is now 3 variables, set by OPT_VERBOSE
                        pack is now a Livingstone_debug


2001-04-10  Benoit Hudson  <bhudson@arc.nasa.gov>
        Checked in new optimizer.
        This breaks livdll and xmpl2l2 ; fixes for those are forthcoming.

        * include/readers/xlate_merge_eq_vars.h
          src/readers/xlate_merge_eq_vars.cpp : added

        * configure.in (conf_xlators): added xlate_merge_eq_vars
                (enable_l2test): require xlate_merge_eq_vars
                (--disable-optimizer): removed
        * configure : regenerated

        * include/readers/L2_file.h (getVar_friend): added some comments
                (optimize, getBackground_private, deleteBackground,
                 deleteVar, replaceVarInClause, findOrCreateVarVarProp,
                 findOrCreateVarValProp) : removed
        * src/readers/L2_file.cpp (includes): removed slist
                (free_array): added
                (dtor): use it
                (deleteBackground, deleteVar, get_equivalence,
                 findOrCreateVarVarProp, findOrCreateVarValProp,
                 replaceVarInClause, class EqClass) : removed

        * include/readers/L2_file_translator.h (setVerbose, isVerbose,
                 isVerbose_): added
                (copy_enum, copy_var, copy_clause, copy_transition,
                 copy_all_enums, copy_all_props, copy_all_clauses,
                 copy_all_transitions, copy_all_background): added
        * src/readers/L2_file_translator.cpp (includes): added
                        enumeration, variable, clause, transition
                (add_mapping): handle adding the same mapping twice
                (ctor): init isVerbose_ to false
                (copy_enum, copy_var, copy_clause, copy_transition,
                 copy_all_enums, copy_all_props, copy_all_clauses,
                 copy_all_transitions, copy_all_background): added

        * include/readers/clause.h (props_): added const
                (make, initialize): added const to 'ps' argument
                (setProp_friend): removed
                (hasDebug): renamed from has_debug
                (component): renamed from get_component
                (toL2file): changed to 'component()'
        * include/readers/proposition.h (L2rPropVarVar ctor): removed
                        check for v1=v1 props
        * include/readers/transition.h (clauses_): added const
                (make, initialize): added const to cls arg
                (id, hasDebug, name): added
                (clause_friend): removed
        * include/readers/variable.h (hasDebug): renamed from has_debug

        * src/readers/from_l2.cpp (parse_one_transition): don't remove
                const from x_clauses
        * src/readers/l2test/l2test.cpp (includes): added xlate_merge_eq_vars
                (run_system): removed
                (class engine_package): added
                (DISABLE_OPTIMIZER): removed the condition; code is now
                        unconditionally included
                (main): removed l2, map, tracker, debugger,
                        code to create tracker/debugger,
                        code to read, optimize, write


2002-04-10  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (variableValueAtTimeJNI):
		inline throw_error, without the cerr call
		to prevent needless error msgs to cmd line

2001-04-10  Scott Christa  <schrista@arc.nasa.gov>
        * include/readers/from_xmpl.h (from_xmpl): Initialized nclause_props
                to zero.
        * src/readers/l2run/l2run.dsp
          src/readers/l2run/l2run.wpj: Removed, no longer needed because the
                l2test project does the same thing.
        * src/readers/l2strip/l2strip.cpp: Added the stdlib.h include file
                for the exit() function.
        * src/readers/l2test/l2test.dsp: Added files to the project's Header
                Files folder.
        * src/readers/l2strip/l2strip.dsp: Added. A Microsoft project file to
                build the l2strip executable.
        * src/readers/from_any.cpp: Added a constructor to initialize the
                DiscoverTypeEntry structure.
        * cpp/src/readers/readers.dsp: Added from_any.cpp to the project file
                and added header files to the project's Header Files folder.
        * mba.dsw: Removed the l2run project and added the l2strip project.

2002-04-10  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (throw_error): add cerr
		to print error msg to Skunkworks cmd line

2001-04-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_any.cpp (ReaderType): added 'reader_type_max' to
                placate both my wish to put a comma on the last real value
                and Sun CC's refusal to parse that

2001-04-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Allow more control over what's in the library.  If we don't need
        them, don't include the debuggers or even the engine.
        * configure.in (FEATURE_DIRS): start off without engine
                (all directions): now called 'require' rather than 'enable';
                        immediately initialize to 'no' rather than waiting
                (conf_engine, xlate_dirs): added
                (directions): now concatenation of conf_engine, xlate_dirs
                (enable_apigen, enable_l2test, enable_jni): added
                        requiring engine and debuggers
                (enable_xmpl_format, enable_l2_format): assume directions
                        are set to something
                (L2_TRANSLATIONS): loop only over xlate_dirs
                (require_engine): conditionally run the code for debuggers,
                        search method, progress method, RTI
                (require_debuggers): now is optional
        * configure : regenerated

2001-04-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/from_any.h : added (forgotten to add it in
                previous checkin)

2001-04-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (Requirements): removed mention of Sun CC, stated we only
                    support 2.8.1/Irix, 2.95.2/solaris and linux ; better
                    instructions that don't require changing the path on 2.6
                (disable-shared): longer description of why JNI is
                    incompatible
                (enable-apigen): mention they require XMPL and add code
                (enable-rti): mention it creates a library
                (enable-l2run): removed
                (enable-l2test): mention it reads any format
                (disable-xmpl-format, disable-l2-format): added
                (disable-debug-sections): no longer breaks everything
                (with-xerces, with-xerces-lib): ignored if not needed

2001-04-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added the from_any direction and removed l2run now that l2test does
        both.  This required some changes in the makefiles -- I don't want
        to link l2test against Xerces if I don't have to.

        New configure options:
        * configure.in (conf_readers): added from_any
                (enable-l2run): removed
                (enable-l2test): switched to from_any from from_xmpl
                (disable-xmpl-format, disable-l2-format): added
                (lXERCES, loc_libXERCES, libXERCES): added
                (XERCES): removed
        * configure : regenerated
        * acconfig.h (ENABLE_L2_FORMAT, ENABLE_XMPL_FORMAT): added
        * include/livingstone/gnu_conf.h.in : regenerated
        * include/livingstone/def_conf.h (ENABLE_L2_FORMAT,
                ENABLE_XMPL_FORMAT): added

        New code:
        * src/readers/from_any.cpp : added
        * src/readers/l2test/l2test.cpp (includes, main): use from_any rather
                than from_xmpl

        Removed old code:
        * src/readers/l2run/.cvsignore
          src/readers/l2run/Makefile.in
          src/readers/l2run/l2run.cpp : removed

        Makefile support for the change, where we no longer know based just
        on the directory whether we should link with xerces or not.
        * Makefile.in (LIB_TARGETS, rule for liblivdll.so): use the new
                substitutions for xerces
        * noxerces.mk (locXERCES, libXERCES): removed
        * xerces.mk (locXERCES, libXERCES): removed
                (rules): switched to new names loc_libXERCES, libXERCES
        * top.mk (XERCESCROOT, XERCES, XERCES_SO): removed
                (lXERCES, loc_libXERCES, libXERCES): added
        * src/readers/Makefile.in (XERCESCROOT): added
        * src/readers/l2test/Makefile.in (DEPS): switched to new name
                        loc_libXERCES which may be empty
                (l2test.cpp rule): removed
                (TARGET rule): switch to lXERCES which may be empty
        * src/readers/xmpl2l2/Makefile.in (DEPS): switched to new name
                        loc_libXERCES which may be empty
                (TARGET rule): switch to lXERCES which may be empty
        * src/liv_utils/api_scr/Makefile.in
          src/liv_utils/api_gen/Makefile.in (DEPS): switched to new name
                        loc_libXERCES
                (DEPS_L): switched to new name lXERCES


2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Cleaned up w.r.t the various directions and executables.
        * configure.in (enable_apigen): require from_xmpl and to_t_system
                (other executables): moved nearer top of file
                (SAFE_TO_READ_DIRECTIONS): added
                (enable_jni): moved with the executables, require from_xmpl
                        and to_t_system, changed error to warning about
                        static build
                (enable_debug_sections): check for illegal combos
        * configure : regenerated

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        First full loop of the reader-translator-writer architecture.
        l2strip now implements this.
        * include/readers/L2_file_translator.h
          src/readers/L2_file_translator.cpp
          include/readers/xlate_strip.h
          src/readers/xlate_strip.cpp : added

        * configure.in (conf_readers, conf_xlators, conf_writers): added
                (directions): concatenation of above
                (initialization): initialize to 'no' unless already 'yes'
                (enable_l2strip): added dependency on xlate_strip
                (conf_xlators loop): added implicit dependency on
                        L2_file_translator if any translator is selected
        * configure : regenerated

        * include/readers/L2_file.h (nnominal, nfailures): added

        * include/readers/clause.h (toL2file): removed bool arg; we
                always print the debug info if available

        * include/readers/to_l2.h (include_debug): added comment that
                it just refers to section headers
        * src/readers/to_l2.cpp (print_enums, print_variables,
                print_clauses, print_transitions): removed code to avoid
                        printing the debug info

        * src/readers/l2strip/l2strip.cpp (includes): added xlate_strip
                (main): read, translate (strip), and write in 3 different
                        steps -- and 3 scopes so we deallocate each as soon
                        as possible

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/MBA_string.h (void* ctor): added const quals

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2strip/l2strip.cpp (main): fixed for new arch

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Missed a few files before:
        * from_l2/.cvsignore
          from_xmpl/.cvsignore
          to_l2/.cvsignore
          to_t_system/.cvsignore : removed

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Bug fix; forgot to intialize the isVerbose field:
        * include/readers/L2_file_reader.h
          include/readers/L2_file_writer.h : initialize isVerbose to false

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixing up the readers build process.  Each executable now has its
        own directory like before, but directions are all in src/readers.
        * configure.in (L2_TRANSLATIONS): added as substitution
                (setting directions): add to L2_TRANSLATIONS not
                        FEATURE_DIRS
        * configure : regenerated

        * src/readers/Makefile.in (L2_TRANSLATIONS): added
                (OBJECTS): set to L2_TRANSLATIONS with .o suffix
                (from_xmpl.o): know to add xerces include path
        * src/readers/from_l2.cpp
          src/readers/from_xmpl.cpp
          src/readers/to_l2.cpp
          src/readers/to_t_system.cpp : moved from their respective
                        directories
        * src/readers/from_l2/Makefile.in
          src/readers/from_l2/from_l2.cpp
          src/readers/from_xmpl/Makefile.in
          src/readers/from_xmpl/from_xmpl.cpp
          src/readers/to_l2/Makefile.in
          src/readers/to_l2/to_l2.cpp
          src/readers/to_t_system/Makefile.in
          src/readers/to_t_system/to_t_system.cpp : removed

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/Makefile.in (CPPFLAGS): don't add xerces

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp (Java_LivingstoneEngine_loadModelJNI):
                update to new reader/writer arch ; model_name_str is
                now an MBA_string

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        New writer arch
        * include/readers/L2_file_writer.h : added

        * include/readers/to_l2.h (includes, extends): added L2_file_writer
                (l2): removed
                (filename_): added
                (ctor): added args that were in write
                (write): moved args to ctor
        * src/readers/to_l2/to_l2.cpp (write): removed args, fixed body to
                use stored filename
                (references to l2): turned into get_source()

        * include/readers/to_t_system.h (includes, extends):
                        added L2_file_writer
                (l2): removed
                (ctor): added args that were in write
                (write, createInitialState): moved args to ctor
        * src/readers/to_t_system/to_t_system.cpp (verbose): use verbose
                        flag in the writer
                (references to l2): turned into get_source()
                (ctor): added T_system arg
                (write, createInitialState): removed T_system arg

        * src/liv_utils/api_gen/api_gen.cpp
          src/liv_utils/api_scr/api_scr.cpp
          src/readers/xmpl2l2/xmpl2l2.cpp
          src/readers/l2run/l2run.cpp : fixed for new writer arch

        * src/readers/l2test/l2test.cpp : regenerated

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/liv_utils/api_gen/Makefile.in (API_GEN_L, API_GEN_LIBS): removed
                (api_gen): removed references to above
                (DEPS, LIBINSTALL): handle non-shared objects
        * src/liv_utils/api_gen/api_gen.cpp (main): deal with new reader arch

        * src/liv_utils/api_scr/Makefile.in (API_SCR_L, API_SCR_LIBS): removed
                (api_gen): removed references to above
                (DEPS, LIBINSTALL): handle non-shared objects
        * src/liv_utils/api_scr/api_scr.cpp (main): deal with new reader arch

2001-04-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        New reader interface.
        * include/readers/L2_file_reader.h : added
        * include/readers/from_l2.h
          include/readers/from_xmpl.h (includes, extends): added L2_file_reader
                (filename_): added
                (l2): removed
                (ctor): added string arg
                (read): removed string arg
                (all refs to l2): changed to get_dest()
        * src/readers/from_l2/from_l2.cpp
          src/readers/from_xmpl/from_xmpl.cpp (verbose): use superclass
                        isVerbose, not L2_file one
                (read): removed string arg, fix refs to the arg into refs
                        to the member variable
                (all refs to l2): changed to dest()
        * src/readers/l2run/l2run.cpp (main): added verbose variable;
                changed to new reader arch, and to deallocate reader
                immediately after we're done with it
        * src/readers/l2test/l2test.cpp : regenerated
        * src/readers/xmpl2l2/xmpl2l2.cpp (main): changed to new reader
                arch; deallocate reader & writer as done with them

2001-04-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Plugged some memory leaks in cover:
        * src/cover/cover.cpp (add_to_candidates): take list by ref
                (remove_equivalent_candidates): don't just remove from the
                        list; free them as well
                (rho_coverage_aux): put args on 4 lines
                (rho_coverage): free as well as remove from list
        * src/cover/cover_tracker.cpp (find_fresh_candidates): use erase
                to also free candidates
        * src/transition/tracker.cpp (prune_inconsistent_candidates):
                free as well as remove from list

2001-04-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Yet more speedups in dealing with strings (mostly for XMPL parser):
        * include/mba_utils/MBA_string.h (friends): removed all
                (operator==, operator<): the friends, put MBA_string == or
                        < other in MBA_string, sped up MBA_string ==
                        MBA_string by checking if length is identical
                (operator+): added const spec
        * include/readers/common.h (bounds_check_access,
                bounds_check_access_friend): take MBA_string by value
        * include/readers/transition.h (clause, clause_friend): keep a
                static copy of the MBA_string

2001-04-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Big constant-factor improvements.
        * include/readers/from_xmpl.h (nclause_props): added
        * src/readers/from_xmpl/from_xmpl.cpp (find_or_create_prop):
                        prepend new props rather than append
                (add_clause_prop): slightly faster in a common case, update
                        nclause_props
                (clause_eq_clause_props): use
                        nclause_props rather than size()
                (find_or_create_clause): use nclause_props rather than
                        size(), prepend new clauses rather than append
                (end_clause): clear nclause_props

2001-04-06  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl/from_xmpl.cpp (add_clause_prop,
                clause_eq_clause_props, find_or_create_clause): added an
                        analysis of a few possible algorithms to solve this
                        problem, switched to one which is O(n) faster

2001-04-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Bug fix: I was violating the assumption of no duplicate props
        in a clause.  Put the code in its own place so we can make sure
        not to violate any assumptions in the future.
        * include/readers/from_xmpl.h (add_clause_prop,
                clause_eq_clause_props): added
        * src/readers/from_xmpl/from_xmpl.cpp (add_clause_prop,
                clause_eq_clause_props): added
                (find_or_create_clause): use clause_eq_clause_props
                (characters): use add_clause_prop

2001-04-05  Scott Christa  <schrista@arc.nasa.gov>
        * include/transition/transitioned.h: Added lines required by the
                Memory_pool and Pooled classes.
        * src/tms/clause.cpp: Reformated the file and replaced
                __attribute__ ((section (".bss"))) with PUT_IN_BSS macro.
        * src/transition/transitioned.cpp: Changed the dynamic memory
                allocation of the Proto_transition class to use the Pooled
                class.

2001-04-05  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/proposition.h (L2rPropVarVar::initialize):
                sort variables by ID, var1 < var2 ; this fixes operator==
        * src/readers/L2_file.cpp (findOrCreateVarVarProp): no need for the
                reversed_new_prop hack ; use the operator== instead of
                checking for pointer equality

2001-04-05  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (observe): fixed check for negative
                written as value_index > 0 !

2001-04-05  Scott Christa  <schrista@arc.nasa.gov>
        * include/conflict_db/candidate.h
          src/conflict_db/candidate.cpp: Added lines required by the
                Memory_pool and Pooled classes. Untabified the files
        * include/cover/cover_tracker.h
          src/cover/cover.cpp
          src/opsat/opsat.cpp: Changed the dynamic memory allocation of the
                Candidate class to use the Pooled class. Also untabified the
                file.
        * src/transition/tracker.cpp: Changed the deallocation of the
                Candidate class to use the free() method.

2001-04-05  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* RELEASE: add "cvs co mba/xml" to instances of
		"cvs co mba/cpp"

2001-04-05  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* released version 2.2
	* src/livingstone/version.c: updated to 2.2

2001-04-05  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/clause.h (isInBackground_, isInBackground,
                putInBackground): added
        * src/readers/L2_file.cpp (setBackground): set the clause flag
        * src/readers/from_xmpl/from_xmpl.cpp (end_clause): only put
                clauses in background if not already there; push_front
                rather than back since order doesn't really matter (though
                it does change the cb.dt2 output).

2001-04-05  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/clause.h (prop): put the proposition string in
                a static MBA_string to avoid creating it every time; saves
                literally 90% of the time when loading the Ship1 model!

2001-04-04  Scott Christa  <schrista@arc.nasa.gov>
        * include/opsat/agenda_types.h
          src/opsat/agenda_types.cpp: Added lines required by the
                Memory_pool and Pooled classes. Untabified the files and
                removed the new and delete overloaded operators.
        * include/opsat/cbfs_agenda.h: Changed the dynamic memory allocation
                of the SummingCBFSElement class to use the Pooled class. Also
                untabified the file.

2001-04-04  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* RELEASE (Tag the release) & (Testing the release)
		typos corrected

2001-04-04  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix for bug when truncating in an inconsistent state.
        This includes making variables have a doubly-linked list
        for the time, which makes deassert/reassert easier, and
        a minor fix in Assignable::restore.

        * src/transition/tracker.cpp (truncate): deassert observations
                during truncation; reassert after
        * doc/L2_refman/truncate.html (truncate algorithm): as above
                (truncate time complexity): add comment, but it doesn't
                        change the overall number

        Changes for the doubly-linked list:
        * include/conflict_db/variable.h (leave_tms): removed
                (set_previous): removed
                (destroy): moved to cpp
                (get_next, insert_previous, next): added
        * src/conflict_db/variable.cpp (initialize): initialize next
                (leave_tms): removed
                (destroy): added
                (insert_previous): added

        * include/conflict_db/assignable.h (get_previous_assignable): added
                (assign): added Assignment* version ; ref version calls ptr
                (restore): always assign the old
        * src/conflict_db/assignable.cpp (assign): handle null assignment

        * src/conflict_db/conflict_db.cpp (destroy_variables): don't call
                leave_tms ; just call free which does it all
        * src/transition/T_system.cpp (copy_in_past): use insert_previous
                        rather than set_previous
                (remove_old_variables): don't set previous to null, that's
                        now automatic

2001-04-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * RELEASE (packaging) : added removing CVS directories and
                setting timestamps

2001-04-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * RELEASE : added

2001-04-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.cpp (alloc_and_zero): allocate
                array_size, not n (which happened to work up to now!)

2001-04-03  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/from_xmpl/from_xmpl.cpp: Matched the virtual function
                parameter list with that of the base class so that VC++ can
                override them correctly.

2001-04-03  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (mapOverCandidateAssignmentsJNI):
		pass current time with zero cost candidate

2001-04-02  Benoit Hudson  <bhudson@arc.nasa.gov>
        Don't require xerces at all if not used.
        * Makefile.in (LIB_TARGET, LIB_INSTALL): replaced libdir/libname
                        with xerces names that can go away entirely
                (xerces rules): removed
                (liblivdll.so): use xerces name that can go away
        * configure.in (with-xerces, xerces configuration): only run if
                        we need from_xmpl
                (OUTPUT_ARG): added xerces or noxerces
        * configure : regenerated
        * xerces.mk, noxerces.mk : added

2001-03-30  Benoit Hudson  <bhudson@arc.nasa.gov>
        A start on getting rid of the global dependency on Xerces:
        * top.mk (CPPFLAGS): removed xerces includes
        * src/readers/from_xmpl/Makefile.in (CPPFLAGS): added xerces
        * include/readers/from_xmpl.h (includes): removed HandlerBase
                (extends): removed HandlerBase superclass
                (startElement, characters, endElement, warning, error,
                 fatalError): removed
                (class HandlerBase_subclass): added
                (start_attribute, start_cmd, start_obs, start_assign,
                 start_attributetype, start_component, start_clause,
                 start_prop, start_statevector, start_transition,
                 characters, end_component, end_clause, end_prop,
                 end_transition): added
        * src/readers/from_xmpl/from_xmpl.cpp (class HandlerBase_subclass):
                added
                (startElement, characters, endElement, warning, error,
                 fatalError): removed
                (class HandlerBase_subclass): added
                (start_attribute, start_cmd, start_obs, start_assign,
                 start_attributetype, start_component, start_clause,
                 start_prop, start_statevector, start_transition,
                 characters, end_component, end_clause, end_prop,
                 end_transition): added

2001-03-30  Benoit Hudson  <bhudson@arc.nasa.gov>
        A start on rationalizing the naming for search methods:
        * include/debuggers/tracker_debug.h (ctor): moved to cpp
                (start_find_candidates, end_find_candidates,
                 nconflicts): added
        * src/debuggers/tracker_debug.cpp (ctor): moved from h, init nconflicts
                (parse_cmd): added prune-search/ps, find-fresh/ff,
                        find-candidates ; removed prune, findfresh,
                        findcandidates ; rewrote all to use
                        start/end_find_candidates
                (listener_usage): documented all 3 search methods
                (start_find_candidates, end_find_candidates): added
        * src/opsat/cbfs_tracker_debug.cpp (extend): rewrote to use
                        start/end_find_candidates

2001-03-29  Scott Christa  <schrista@arc.nasa.gov>
        * doc/starting/building_l2.html: Changed some nomenclature, added
                more detail on building L2 for VxWorks, and fixed the
                background colors.

2001-03-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/slist_item.h (delete_list): constant-time
                implementation was buggy (leaked memory); we're stuck with
                linear-time

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed last few strings and debugger hooks from transition system.
        Note this changes the order of the transitioned variables.
        * include/transition/T_system.h (find_transitioned,
                TransitionedHtType): removed
                (begin_transitioned, end_transitioned): updated return type
                        and member name
                (create_transitioned): removed
                (create_present_transitioned): added
                (transitionedHt): removed
                (transitioned): added
        * src/transition/T_system.cpp (idle, minimal_progress, summarize):
                updated name and type of transition list
                (find_transitioned): removed
                (create_transitioned): removed
                (create_present_transitioned): added

        * include/transition/transitioned.h (includes): removed MBA_string
                (make, initialize, ctor): removed 'name' arg
                (get_trans_name, trans_name): removed
        * src/transition/transitioned.cpp (includes): removed stdio,
                        T_system_debug
                (ctor, initialize): removed name arg
                (add_idle_transitions): don't use domain

        * include/debuggers/T_system_debug.h (find_current_mode): added
        * src/debuggers/T_system_debug.cpp (parse_cmd): use find_current_mode
                (find_current_mode): added

        * src/readers/to_t_system/to_t_system.cpp (createVariable): no
                longer need to make the transition name

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/ltms.cpp (finish_destroying): added call to propagate at
                end.  This fixed the buggy X-34 scenario.  I don't
                understand why, unfortunately.

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added 'load-scenario' command to the top-level.  This means
        the command-line executable can do it, but you can't do it from
        skunkworks.
        * src/readers/l2run/l2run.cpp (run_system): added istream arg,
                load-scenario command
                (main): call run_system with cin
        * src/readers/l2test/l2test.cpp : regenerated

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        A bug that kept deleted things in the fringe.
        * src/tms/ltms.cpp (Fringe::remove_destroying): don't iterate
                if we remove an element ; otherwise, two deleted clauses
                in a row -> we skip the second

2001-03-28  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/readers.wpj: Added -fno-inline compiler option.
        * src/readers/l2run/l2run.wpj: Added the trajectory.cpp file
                to the project.
        * doc/starting/building_l2.html: Modified the way the L2
                engine is built on Windows and added documentation
                on how to build the L2 engine for VxWorks.

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Another memory leak:
        * include/transition/tracker.h (erase): added
        * src/transition/tracker.cpp (dtor): call erase
                (erase): added
        * src/opsat/cbfs_tracker.cpp (find_fresh_candidates,
                extend_candidates): call erase, don't just clear the list

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/theory.h (last_conflict): commented out to eliminate
                a warning by Sun CC

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.cpp (deleteVar): actually delete; document
                        the function's evilness
                (optimize): delete the equivalences

2001-03-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/opsat/opsat.cpp (find_consistent_candidates): plugged a mem
                        leak -- rejected candidates weren't deleted

2001-03-28  Scott Christa  <schrista@arc.nasa.gov>
        * mba.wsp
          src/readers/l2run/l2run: Changed absolute paths to relative paths.
        * src/readers/l2test/l2test.wpj: Changed the output directory of the
                archive file.

2001-03-27  Scott Christa  <schrista@arc.nasa.gov>
        * mba.dsw: Removed unneeded dependencies.
        * src/debuggers/debuggers.dsp: Added trajectory.cpp and trajectory.h
                to the project file. Changed compiler and linker settings
                for a release build.
	* src/conflict_db/conflict_db.dsp
	  src/cover/cover.dsp
	  src/dlltest/dlltest.dsp
	  src/liv_utils/api_gen/api_gen.dsp
	  src/liv_utils/api_scr/api_scr.dsp
	  src/livdll/livdll.dsp
	  src/livingstone/livingstone.dsp
	  src/mba_utils/mba_utils.dsp
	  src/opsat/opsat.dsp
	  src/readers/readers.dsp
	  src/readers/l2run/l2run.dsp
	  src/readers/l2test/l2test.dsp
	  src/readers/xmpl2l2/xmpl2l2.dsp
	  src/realtime_api/realtime_api.dsp
	  src/tms/tms.dsp
	  src/transition/transition.dsp: Changed compiler and linker
                settings for a release build. Changed the run-time library
                back to using the multithreaded so that Microsoft debugging
                tools can be used.
        * src/livdll/livdll.plg: Removed a Microsoft generated file that
                doesn't need to be in CVS.

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed PR 1269: link from engine to debugger.
        * include/conflict_db/conflict_db.h (debugger): removed
        * src/debuggers/conflict_db_debug.cpp (ctor): removed hackery

        * include/transition/transitioned.h
          src/transition/transitioned.cpp
                (add_transition_clause_prototype): removed both
                (add_commanded_prototype, add_failure_prototype,
                 add_idle_prototype): added
                (Proto_transition ctor): changed args to avoid strings
                (initialize): added
                (create_proto_assignment): removed
                (transitioned_var): now a pointer
                (begin/end_positive/negative): added
                (positives, negatives): list of pair, not pointers to pair

        * include/readers/transition.h (mode_transition,
                modeTransition, setModeTransition): added
                (ctor): default to 0 for nominal, require setting for failure

        * include/readers/clause.h (format_for_tms): removed
        * include/readers/proposition.h (format_for_tms,
                format_for_tms_as_true): removed

        * include/transition/T_system.h
          src/transition/T_system.cpp (is_command): added

        * src/debuggers/T_system_debug.cpp (print_proto_transition):
                updated for list of pair, not pointer to pair

        * src/readers/to_t_system/to_t_system.cpp (includes): added domain
                (createTransition): pass in indices, not names

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Perhaps I should have tested the previous on a scenario...
        * include/transition/transitioned.h (Entry_type): list of pointers
                to Proto_transition
                (add_transition_prototype_to_table): second arg by pointer
                (find_transition_prototypes): return list of pointers
        * src/transition/transitioned.cpp (destroy): delete the pointers
                in the table
                (add_transition_clause): don't delete
                (add_transition_prototype_to_table): take trans by pointer
                (instantiate_indexed_clauses_at_time): list of pointers
                (find_transition_prototypes): list of pointers

        * src/debuggers/T_system_debug.cpp (print_transitioned): updated
                by adding a dereference

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed several memory leaks (totaling 80k for just loading the cb
        model!):
        * include/transition/T_system.h (Proto_constraint::signs): removed
                (Proto_constraint dtor): added
        * src/transition/T_system.cpp (dtor): delete state constraints,
                (Proto_constraint dtor): added

        * include/transition/tracker.h (dtor): moved definition to cpp
        * src/transition/tracker.cpp (dtor): delete the candidates

        * include/transition/transitioned.h (destroy): moved to cpp
                (Proto_transition dtor): added
        * src/transition/transitioned.cpp (initialize): silence warnings
                (destroy): delete unindexed and autonomous
                (add_transition_clause): delete trans if needed
                (add_transition_prototype): use automatic variable
                (Proto_transition dtor): added

        * src/debuggers/L2_string_map.cpp (dtor): free trajectories
        * src/readers/from_l2/from_l2.cpp (parse_enums): free the name array

2001-03-27  Shirley Pepke  <spepke@arc.nasa.gov>

	*src/T_system.cpp: get_observable(int) and get_command(int)
		use variable ids.
	*src/liv_utils/api_gen/api_gen.cpp: same as above
        *src/test/time_delays.h: same as above
        *src/liv_utils/api_scr.cpp: bug fix
        *src/test/scenario.rt: corresponds to scenario.scr in api_gen
	*src/test/enumapi.h: generated using new api_gen

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added --disable-static-memory to allow turning that mechanism off
        (useful i.e. for debugging memory).
        * configure.in (disable-static-memory): added
        * configure : regenerated
        * acconfig.h (DISABLE_STATIC_MEMORY): added
        * include/livingstone/gnu_conf.h.in : regenerated
        * include/mba_utils/memory_pool.h (allocate, deallocate): added
                conditionally just using new/delete
        * BUILD (disable-static-memory): added

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/debuggers/T_system_debug.h
          src/debuggers/T_system_debug.cpp (print_assignment,
                print_start_state_assignment): return number of lines
        * include/debuggers/conflict_db_debug.h (print_assignment): return
                    number of lines
        * src/debuggers/conflict_db_debug.cpp (print_assignment): return 1
                (print_candidate): if no lines printed, print a message
                        saying the candidate is empty
        * src/debuggers/tracker_debug.cpp (print_candidates): added some spaces

2001-03-27  James Kurien <jkurien@arc.nasa.gov>
	* src/readers/L2_file.cpp: fixed EqClass.setPreferredMember()
	      so it no longer mistakenly complains that two cmds
	      are equal to each other.

2001-03-27  Scott Christa  <schrista@arc.nasa.gov>
        * include/conflict_db/conflict.h (destroy): Added
                assignments.erase().
        * include/conflict_db/domain.h (destroy): Redid the tabs and added
                values.erase().
        * include/conflict_db/variable.h (destroy): Added
                all_props.erase().
        * include/transition/transitioned.h (destroy): Added
                indexed_transition_table.erase(),
                unindexed_prototypes.erase(), autonomous_transitions.erase(),
                transition_clauses.erase(), and transition_costs.erase().
        * src/conflict_db/assignable.cpp (destroy): Added
                Added conflicts.erase().
        * src/conflict_db/conflict_db.cpp (~Conflict_db): Undid the changes
                to rev. 1.54.

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/tracker.cpp (ctor)
          src/opsat/cbfs_tracker.cpp (ctor): previously we created an
                instance on the stack and then copied it; we now save a
                tiny bit of work.

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changed to make Sun CC 6.0 compile this:

        * configure.in (EXTRA_CXXFLAGS, EXTRA_LIBS): greatly reduced for
                SUNCXX
        * configure : regenerated

        Fixed errors under Sun CC 6.0 :
        * include/livingstone/l2conf.h (include): moved comment to previous
                line to avoid cpp warning, changed to c-style rather than
                c++-style.
        * include/mba_utils/hash_table.h (ctor): made no-arg and one-arg
                versions rather than one-arg with default value, removed
                size-arg version
        * src/conflict_db/conflict_db.cpp (ctor): init domainHt with
                no-arg, rather than size-arg
        * include/mba_utils/pair.h (includes): ostream doesn't exist for CC
        * include/readers/options.h (includes, forward): switched from
                forward-declare of ostream to including iostream
        * src/debuggers/T_system_debug.cpp (var_alpha_comp): made extern
                        "C" as SunCC wants it (!)
                (print_variable_values): removed 'static' which caused a
                        warning

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (main): catch L2_error during
                read/optimize/init engine; print error, exit
                (run_system): catch L2_error; print error, continue
        * src/readers/l2test/l2test.cpp : regenerated

2001-03-27  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (mapOverCandidateAssignmentsJNI):
		access candidate info using debugger->candidate_details.

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (enable-rti): added src/test to list
        * configure : regenerated
        * src/test/Makefile.in (TARGET, BINTARGET, CLEANFILES,
                L2TEST_O, L2TEST_L, L2TEST_LIBS, l2test target): removed

2001-03-27  Scott Christa  <schrista@arc.nasa.gov>
        * mba/cpp/src/conflict_db/conflict_db.cpp (~Conflict_db): Destroyed
          all the assumptions and assignables.

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/from_xmpl.h (read): take MBA_string, not const char*
        * src/readers/from_xmpl/from_xmpl.cpp (read): take MBA_string ;
                        compute name as late as possible

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/realtime_api/posix/livapi_rt.h (includes): removed
                those we could use forward-declare instead, and unused
                fstream
                (forward): added LivingstoneDispatcher, ReporterInterface,
                        Tracker
        * src/realtime_api/posix/livapi_rt.cpp (includes): added
                posix/livingstone_dispatcher, reporter

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (enable-rti): removed warning, fixed to work given
                the newer configure layout

2001-03-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/L2_string_map.cpp (get_prop_by_name): fixed assert
                for '='

2001-03-26  Shirley Pepke  <spepke@arc.nasa.gov>

	* src/liv_utils/api_scr/api_scr.cpp: Updated to function properly
		with L2 R2.

2001-03-26  Shirley Pepke  <spepke@arc.nasa.gov>

	* src/liv_utils/api_gen/api_gen.cpp: Updated to function properly
		with latest engine.

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added accessor to explain a candidate in terms of a human-readable
        trajectory which may correspond to truncated bits of the engine.
        * include/debuggers/L2_string_map.h (forward): added Trajectory
                (class Truncated_assignment, class Trajectory): removed
        * include/debuggers/T_system_debug.h (includes): removed redundant
                ltms_debug include, added trajectory (for Trajectory::Parts)
                (candidate_details): added
        * src/debuggers/L2_string_map.cpp (includes): added trajectory
                (Truncated_assignment ctor, Trajectory dtor): removed
                (get_trajectory): updated return type
                (set_trajectory): explicitely create temporary
        * src/debuggers/T_system_debug.cpp (includes): removed
                conflict_db_debug, added candidate
                (print_start_state_assignment): updated for Parts
                (candidate_details): added

        * src/debuggers/Makefile.in : added trajectory.o
        * include/debuggers/trajectory.h ,
          src/debuggers/trajectory.cpp : added

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (checking CXXRFLAG): fixed for non-gnu compiler
        * configure : regenerated

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/tracker_debug.cpp (print_candidates): no-arg
                version calls ostream version  ; ostream version has
                changed output format

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/assumption.cpp (ctor): fixed a typo in assertion

2001-03-26  Shirley Pepke  <spepke@arc.nasa.gov>
	*src/test/rtapi.cpp: Now works with L2 R2.

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (report-leaks): now on by default
        * configure : regenerated
        * include/livingstone/def_conf.h (ENABLE_POOL_FIND_LEAKS): added
        * BUILD (disable-report-leaks): updated for new default value

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/conflict_db.cpp (dtor): destroy the conflicts

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker_listener.h : added, missing from
                previous checkin

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added much better support for explaining state=si, now used by
        default in the command-line.
        * include/debuggers/L2_string_map.h (forward): added Assignment
                (class Truncated_assignment, class Trajectory): added
                (state_var_trajectories, n_trajectories, old_trajectories,
                 n_old_trajectories, get_trajectory,
                 start_new_trajectories_map, set_trajectory) : added
        * src/debuggers/L2_string_map.cpp (includes): added assignment
                (ctor): initialize new fields to zero
                (Truncated_assignment ctor, Trajectory dtor,
                 get_trajectory, start_new_trajectories_map,
                 set_trajectory): added

        * include/debuggers/L2_string_map_listener.h (includes): added
                        tracker_listener
                (class L2_string_map_listener): implements Tracker_listener
                (truncating_candidate, destroying_container): added
                        Tracker_listener callbacks
        * src/debuggers/L2_string_map_listener.cpp (ctor): add listener to
                        tracker as well
                (truncating_candidate, destroy_container): added Tracker
                        callbacks

        * include/transition/tracker.h (Tracker_listener, add_listener,
                remove_listener, listeners_): added
        * src/transition/tracker.cpp (record): added
                (truncate): record truncating a candidate

        * src/debuggers/T_system_debug.cpp (ctor): long defaults true now
                (print_assignment): if long, don't print state=si
                        assignment, just the trajectory
                (print_start_state_assignment): reimplemented to use
                        Trajectory

        * src/debuggers/conflict_db_debug.cpp (print_assignment): print
                        newline at end
                (print_candidate): always print indent, don't print newline
                        after assignment anymore

        * src/debuggers/tracker_debug.cpp (print_candidates): changed
                format to include candidate ID, and make it easier to
                indent nicely

2001-03-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reverted 'Fix for PR 1376' -- seems we actually need to install 0
        * src/transition/tracker.cpp (truncate): install 0 if we have
                any candidates ; propagate if we don't

2001-03-26  Shirley Pepke  <spepke@arc.nasa.gov>
	* include/debuggers/tracker_debug.h
	  src/debuggers/tracker_debug.cpp: Added print_candidates(ostream&).
	* include/debuggers/conflict_db_debug.h
	  src/debuggers/conflict_db_debug.cpp: Added
		print_variable_and_value(Variable&, ostream&) and
		print_all_variable_values(ostream &).
	* src/realtime_api/posix/livapi.cpp
          src/realtime_api/posix/guardedqueue.cpp
	  src/realtime_api/posix/threadobject.cpp: Changed L2_assert argument
		list from 2 to 3.
	* src/test/rti_user/userfcns.cpp,userfcns_debug.cpp: Updated output.
	* src/test/rtapi.cpp: Updated to compile with R2.

2001-03-23  Scott Christa  <schrista@arc.nasa.gov>
        * include/mba_utils/pooled.h
          src/readers/clause.cpp
          src/readers/enumeration.cpp
          src/readers/transition.cpp
          src/readers/variable.cpp: Capitalized the 'put_in_bss' macro.
                Added $ID:$ where needed so that CVS can insert header
                information.
        * include/transition/T_system.h: Cleaned up and untabified.
        * include/transition/transitioned.h
          src/transition/transitioned.cpp: Added lines required by the
                Memory_pool and Pooled classes. Also untabified the files.
        * src/transition/T_system.cpp: Changed the dynamic memory allocation
                of the Transitioned class to use the Pooled class. Also
                untabified the file.
        * src/conflict_db/assignable.cpp
          src/conflict_db/assignment.cpp
          src/conflict_db/assumption.cpp
          src/conflict_db/conflict.cpp
          src/conflict_db/dependent.cpp
          src/conflict_db/domain.cpp
          src/conflict_db/variable.cpp
          src/readers/proposition.cpp: Replaced
                __attribute__ ((section (".bss"))) with PUT_IN_BSS macro.
        * src/readers/l2test/l2test.dsp
          src/readers/l2run/l2run.dsp: Changed the debug program arguments to
                load the model files from the L2 regression directories. Also
                prepared the project for a release build.
        * include/transition/transitioned.h: Changed 'T_system &t_system' to
                'T_system* t_system' (X-37 requirement: Objects of reference
                type cannot be declared. It also made it easier to implement the
                Pooled class.)

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/to_l2/to_l2.cpp (print_initial): fixed header for
                no-debug-sections, must be 'i' not 'initial'

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/transition.cpp (pool): fixed typo

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (1): added recommendation to use l2_update

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (disable-verbose, disable-optimizer,
                disable-debug-sections): added

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * l2_update : added

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added configure options for reader-specific things.
        * configure.in (disable-verbose, disable-optimizer,
                disable-debug-sections): added
        * configure : regenerated
        * acconfig.h (DISABLE_OPTIMIZER, ENABLE_L2_DEBUG_SECTIONS,
                ENABLE_L2_VERBOSE): added
        * include/livingstone/gnu_conf.h.in : regenerated
        * include/livingstone/def_conf.h (ENABLE_L2_DEBUG_SECTIONS,
                ENABLE_L2_VERBOSE): added
        * include/readers/common.h (ENABLE_L2_VERBOSE,
                ENABLE_L2_DEBUG_SECTIONS): removed

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed reader classes for no-debug-sections ; this required lots
        of ifdefs for the chunk/pool data structures, so I took the
        opportunity to make a macro instead.
        * include/mba_utils/pooled.h (put_in_bss): added
        * src/readers/clause.cpp
          src/readers/enumeration.cpp
          src/readers/transition.cpp
          src/readers/variable.cpp (chunk, pool): added 'put_in_bss'
                attribute to make sure it ends up in BSS rather than text
                or data ; this was already done with an ifdef which is
                rather harder to read/update
                (dbg_*): put in ifdef ENABLE_L2_DEBUG_SECTIONS
        * src/readers/from_l2/from_l2.cpp (parse_one_transition): only
                declare dbg_name in an ifdef

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * tests/cb/scripts/* : removed ; they're included in cb.scr

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix for PR 1376
        * src/transition/tracker.cpp (truncate): propagate rather than
                installing candidate 0

2001-03-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.cpp (replaceVarInClause): removed unused
                variable 'id'

2001-03-21  Scott Christa  <schrista@arc.nasa.gov>
        * include/conflict_db/conflict.h: Added comment.
        * include/conflict_db/assignable.h
          include/conflict_db/assignment.h
          include/conflict_db/assumption.h
          include/conflict_db/dependent.h
          include/conflict_db/variable.h: Added lines required by the
                Memory_pool and Pooled classes. Also untabified and rearranged
                the access order to public, protected, and private as stated
                in the CTAS C++ Coding Standard.
        * src/conflict_db/conflict_db.cpp: Changed the dynamic memory
                allocation of the Assignable, Assumption, and Dependent
                classes to use the Pooled class.
        * src/conflict_db/domain.cpp: Removed an overloaded constructor that
                wasn't being used.
        * src/conflict_db/assignable.cpp
          src/conflict_db/assignment.cpp
          src/conflict_db/assumption.cpp
          src/conflict_db/dependent.cpp
          src/conflict_db/variable.cpp: Added lines required by the
                Memory_pool and Pooled classes. Also untabified the files.
        * src/transition/T_system.cpp: Changed the dynamic memory allocation
                of the Conflict class to use the Pooled class.

2001-03-20  Scott Christa  <schrista@arc.nasa.gov>
        * src/conflict_db/conflict.cpp
          include/conflict_db/conflict.h: Added lines required by the
                Memory_pool and Pooled classes. Also untabified the files.
        * src/conflict_db/conflict_db.cpp: Changed the dynamic memory
                allocation of the conflict class to use the Pooled class.
                Also untabified the file.

2001-03-20  James Kurien <jkurien@arc.nasa.gov>
        Upgraded optimizer to remove redundant variables.
        Ther's a PR to move this to an L2 modifier class.
	*include/readers/L2_file.h:
	Added deleteVar, deleteBackground
	*src/readers/L2_file.cpp
	Added class equivalence classes, compute equivalence
	classes, remove equivalent variables from L2_file object.

2001-03-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added explanation of state=si ; ugly so for now it's off by
        default.
        * include/debuggers/conflict_db_debug.h (print_assignment): made
                virtual, added indent arg (default 0)
        * src/debuggers/conflict_db_debug.cpp (print_assignment): added
                indent arg, print indent first
                (print_candidate): call print_assignment with indent

        * include/debuggers/T_system_debug.h (print_assignment,
                print_start_state_assignment, long_state_var): added
        * src/debuggers/T_system_debug.cpp (print_assignment,
                print_start_state_assignment): added
                (parse_cmd, listener_usage): added state-var-style

        * include/debuggers/ltms_debug.h
          src/debuggers/ltms_debug.cpp (get_indent_string): added

2001-03-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp (livType): throw argument error

2001-03-15  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changed error handling.  The new way allows for strings on the
        ground and no strings in flight.
        While I was at it, made errors thrown more descriptive /
        appropriate.
        * include/livingstone/L2_assert.h (L2_error): not instantiable
                (L2_error_enum): added
                (L2_fatal_error, L2_parse_model_error,
                 L2_parse_scenario_error, L2_optimizer_error,
                 L2_not_found_error, L2_disabled_error, L2_duf_error): added
                (L2_throw): added
                (L2_assert): rewritten to use L2_throw
        * include/mba_utils/MBA_string.h (ctor): added void* version that
                prints using %p
        * include/mba_utils/memory_pool.h (MBA_string, L2_error,
                L2_assert defn's): removed
                (includes): removed MBA_string; brought in by L2_assert
                (allocate): throw a resource error
                (deallocate): throw a duf error
                (name): return MBA_string
        * include/mba_utils/slist.h (size_type): unsigned int not signed long
                (insert): throw argument error
        * include/readers/L2_file.h (setProp): moved to cpp
        * include/readers/common.h (bounds_check_access,
                bounds_check_access_friend): added requisite comma
        * src/conflict_db/assignable.cpp (assign(int)): throw bounds error
        * src/conflict_db/assumption.cpp (ctor): throw argument error
        * src/conflict_db/candidate.cpp (add): nicer explanation, added comma
        * src/conflict_db/conflict_db.cpp (create_simple_constraint):
                throw argument error ; don't check indices are in range
                -- already done by get_prop -- ; don't check we didn't run
                out of memory -- already done my Memory_pool
        * src/conflict_db/domain.cpp (get_value_name): use L2_throw not
                L2_assert(false, ...)
        * src/conflict_db/variable.cpp (get_prop): throw bounds error
        * src/cover/cover_tracker.cpp (extend_candidates): throw disabled error
        * src/debuggers/L2_string_map.cpp (get_element_for_key): throw
                not-found error
                (get_name_of_prop): throw argument error
                (get_prop_by_name): throw not-found error
        * src/debuggers/L2_string_map_listener.cpp (destroying_container):
                throw fatal error
        * src/debuggers/conflict_db_debug.cpp (assign): throw
                parse-scenario error
                (find_variable, find_prop_index): throw not-found error
                (find_assignable): added the comma
                (split_assignment): throw parse-scenario error
        * src/debuggers/tracker_debug.cpp (parse_cmd): throw
                parse-scenario ; install uses install(int) rather than
                implementing it itself, prints error rather than throw xcp
        * src/readers/L2_file.cpp (allocEnums, allocVars, allocProps,
                allocClauses, allocBackground, allocTransitions): added comma
                (getProp): throw bounds error, don't cerr
                (setPosProp, setNegProp, setSameProp, setDiffProp): throw
                        argument error
                (setProp): added from header, throws bounds error
                (optimize): throw optimizer error
        * src/readers/from_xmpl/from_xmpl.cpp (convert_to_rank,
                find_enum, create_enum, find_variable,
                create_variable, find_or_create_clause, startElement):
                        comma and throw more descriptive error in some cases
        * src/readers/to_t_system/to_t_system.cpp (destroying_container):
                L2_throw rather than assert false
                (expandClause, createInitialState, findDomain, findVar):
                        comma and throw more descriptive error in some cases
        * src/tms/ptheory.cpp (add): throw argument error
        * src/transition/T_system.cpp (minimal_progress, full_progress,
                splice, Proto_constraint, create_present_assignable,
                create_present_command): throw more descriptive error,
                        don't check return value of allocation routines
                (get_command, get_observable): rewritten and throw bounds error
                (obs_enums_to_assignment): rewritten to use get_observable
        * src/transition/tracker.cpp (MIN_HISTORY_STRING): removed
                (ctor, get_progress_uses_full, set_progress_uses_full,
                 install): comma and throw more descriptive error in some cases
        * src/transition/transitioned.cpp (create_proto_assignment): throw
                not-found error

2001-03-15  Scott Christa  <schrista@arc.nasa.gov>
        * include/readers/clause.h
          include/readers/enumeration.h
          include/readers/proposition.h
          include/readers/transition.h
          include/readers/variable.h: GCC 2.7.2 preferred the virtual
                destructor to be in the public area of the class.
        * mba.wsp: Added a 'readers' project to the VxWorks' workspace.
        * src/readers/l2run/l2run.wpj
          src/readers/l2test/l2test.wpj: Removed the '-ansi' compiler option
                to allow the use of C++ comments in header files. Added the
                'readers' project to be linked with this project.
        * src/readers/readers.wpj: Project was added so that duplicate named
                source files could be built under a different directory.

2001-03-15  Will Taylor   <taylor@ptolemy.arc.nasa.gov>
	* include/jdk1.2: removed
	* include/jdk1.2/jni.h: removed
	* include/jdk1.2/jvmdi.h: removed
	* include/jdk1.2/jvmpi.h: removed
	* include/jdk1.2/solaris: removed
	* include/jdk1.2/solaris/jni_md.h: removed
	* include/jdk1.2/win32: removed
	* include/jdk1.2/win32/jni_md.h: removed

2001-03-15  Scott Christa  <schrista@arc.nasa.gov>
        * include/tms/clause.h
          include/tms/proposition.h: GCC 2.7.2 preferred the virtual
                destructor to be in the public area of the class.
        * src/readers/clause.cpp
          src/readers/enumeration.cpp
          src/readers/proposition.cpp
          src/readers/transition.cpp
          src/readers/variable.cpp: For GCC compilers, forced uninitialized
		data into the block storage space (BSS) so that it doesn't
                take up disk space.
        * src/transition/tracker.cpp (progress): Fixed a redefinition of
                default parameter error in VC++.
        * src/readers/xmpl2l2/xmpl2l2.cpp: Included <stdlib.h> for the exit
                function.

2001-03-14  Scott Christa  <schrista@arc.nasa.gov>
        * mba.dsw: Added dependencies to the l2test, l2run, and xmpl2l2
                projects.
        * src/transition/transition.dsp: Changed the directory to which
                things get compiled to.
        * src/readers/readers.dsp: Added new source files to the project.
        * src/conflict_db/assignment.cpp: Changed #ifdef VXWORKS to
                #ifdef  __GNUC__.
        * src/readers/l2run/l2run.cpp: Moved the static class variables
                into the main function to prevent crashes upon exit if
                the link order wasn't right.
        * src/readers/l2test/l2test.cpp: Regenerated.
        * src/conflict_db/domain.cpp
          include/conflict_db/domain.h: Added lines required by the
                Memory_pool and Pooled classes.
        * src/conflict_db/conflict_db.cpp: Changed the dynamic memory
                allocation of the Domain class to use the Pooled class.
        * src/tms/clause.cpp
          src/tms/proposition.cpp: For GCC compilers, forced uninitialized
                data into the block storage space (BSS) so that it doesn't
                take up disk space.

2001-03-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        Switched from using -D flags to using l2conf which is included
        in every file.
        * configure.in (AC_CONFIG_HEADER): added
        * configure : regenerated
        * acconfig.h
          include/livingstone/l2conf.h
          include/livingstone/gnu_conf.h.in
          include/livingstone/def_conf.h : added
        * DEVELOPERS (using configure scripts): updated for makefiles being
                obsolete ; added description of AC_DEFINE

        Added include <livingstone/l2conf.h> in every header file except
        those in:
          include/jdk1.2
          include/jdk1.3
          include/livdll
          include/realtime_api
          include/test

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Got rid of T_system::NO_COMMAND and requirement to have noCommand
        in the file; instead, we have a documented requirement that the
        first member of a command enumeration in l2 format be noCommand.
        This was the final hidden naming requirement, and allows running a
        stripped model.
        * doc/L2_refman/l2_file_format.txt (cookie): now L211
                (enum): mentioned the order must have noCommand first
        * include/readers/common.h (L2_READER_MAGIC): now L211
        * include/transition/T_system.h (NO_COMMAND): removed
        * src/transition/T_system.cpp (ctor): don't init NO_COMMAND
                (create_present_command): don't check for NO_COMMAND

        * src/readers/from_xmpl/from_xmpl.cpp (noCommand): added ; should
                        it be a static class member?
                (create_enum): put noCommand first

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.cpp (dtor): plugged memory leak

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed for DISABLE_FULL_PROGRESS
        * include/livingstone/L2_assert.h (L2_disabled_error): added
        * include/transition/tracker.h (get_progress_uses_full,
                set_progress_uses_full) : moved to cpp
        * src/transition/tracker.cpp (ctor): use set_p_u_f
                (get_progress_uses_full, set_progress_uses_full): fixed for
                        disabled min or full progress
        * src/debuggers/tracker_debug.cpp (parse_cmd progress): cerr, not
                assert
        * src/readers/l2run/l2run.cpp (main): put "l2run: " at the
                beginning of every line of error output ; fixed full
                progress was disallowed with DISABLE_MIN_PROGRESS
        * src/readers/l2test/Makefile.in (l2test.cpp): also change l2run to
                l2test
        * src/readers/l2test/l2test.cpp : regenerated

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (main): added printout of progress style
        * src/readers/l2test/l2test.cpp : regenerated

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added option --progress=[min|full]  (or -p) to choose the progress
        style.
        * src/readers/l2run/l2run.cpp (OPT_PROGRESS): added
                (options): added -p / --progress
                (main): added use_full_progress, case OPT_PROGRESS, call
                        to Tracker::set_progress_uses_full
        * src/readers/l2test/l2test.cpp : regenerated

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        Debugger changes to allow the changes wrought below.
        * include/debuggers/tracker_debug.h (progress): added
                (minimal_progress, full_progress): default to idle
        * src/debuggers/tracker_debug.cpp (parse_cmd): "progress"
                calls progress, not full_progress ;
                added "progress-style"
                (listener_usage): always compile in progress ;
                        added "progress-style"
                (progress): added

        * include/transition/tracker.h (get_progress_uses_full,
                set_progress_uses_full): added

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker.h (ctor): fixed comment typo,
                removed default arguments
        * include/cover/cover_tracker.h
          include/opsat/cbfs_tracker.h
          src/opsat/cbfs_tracker.cpp (ctor): added bool argument

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker.h (DEFAULT_PROGRESS_STYLE): added
                (ctor): added bool arg progress_uses_full
                (progress): no-arg version now has Assignment arg, default 0;
                        removed definition
                (progress_uses_full): added
        * src/transition/tracker.cpp (DEFAULT_PROGRESS_STYLE): added
                (ctor): added bool arg ; init progress_uses_full with it
                (progress): added definition calls full or min

2001-03-13  Benoit Hudson  <bhudson@arc.nasa.gov>
        XMPL reader now sets variable and enumeration IDs based on order
        in which we find them in the model file.
        * include/readers/from_xmpl.h (nenums_, nvars_, nclauses_): added
                (ctor): init them to zero
        * src/readers/from_xmpl/from_xmpl.cpp (create_enumeration,
                create_variable, find_or_create_clause): set ID
                (read): don't set ID for enum, var, clause ;
                        put each alloc/set grouping in its own scope

        * include/readers/clause.h
          include/readers/enumeration.h
          include/readers/variable.h (setID): removed

2001-03-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Allow stack-allocating enumeration, transition, and variable
        for to_l2; and bug-fix of previous:
        * include/readers/enumeration.h (dtor): made public
                (initialize): initialize enum_name_
        * include/readers/transition.h (dtor): made public
        * include/readers/variable.h (dtor): made public

2001-03-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reimplemented memory allocation scheme for the reader classes.

        * include/readers/common.h (includes): added memory_pool and pooled

        The method is:
                (ctor): removed with args, added no-arg do-nothing
                (make, initialize): added take place of ctor
                (free, destroy): added
                (dtor): added or rewritten as a call to destroy
                (pool, chunk): added
                (friend): added friendship to Memory_pool<X>
                and the top class inherits from Pooled

        Did exactly this and nothing else in:
        * include/readers/clause.h
          include/readers/enumeration.h
          include/readers/transition.h

        Same as above, except L2rProposition has pure virtual free in:
        * include/readers/proposition.h

        Adjust to the new scheme by changing 'new' to 'make' and 'delete'
        to 'free':
        * src/readers/from_l2/from_l2.cpp
        * src/readers/from_xmpl/from_xmpl.cpp

        * src/readers/L2_file.cpp (findOrCreateProp): same, and also don't
                        stack-allocate reversed_new_prop

        Finally, to define the static pools and chunks:
        * src/readers/Makefile.in (OBJECTS): added .o for following files
        * src/readers/clause.cpp
          src/readers/enumeration.cpp
          src/readers/proposition.cpp
          src/readers/transition.cpp
          src/readers/variable.cpp : added


2001-03-12  James Kurien <jkurien@arc.nasa.gov>
        * include/debuggers/T_system_debug.h,
	  src/debuggers/T_system_debug.cpp:
	Added find_discrepant_observations(), find_discrepant_commands(),
	and a "discrepancy" cmd to the debugger.

2001-03-12  James Kurien <jkurien@arc.nasa.gov>
        * include/mba_utils/memory_pool.h:
	  char* name() fixed to compile under VC++,
	  though it returns no info.


2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Switched reader names to MBA_string from char*.
        * include/readers/common.h (defines): removed commented-out or
                obsolete ones
                (includes): added MBA_string
                (bounds_check_access): added asserting with new
                        bounds-check error
        * include/readers/clause.h (includes): removed MBA_string
        * include/readers/enumeration.h (strdup): removed
                (enum_name_, member_name_, name, name(i)): made MBA_string
                (ctor): don't strdup
                (names): added
        * include/readers/transition.h (name_): made MBA_string
                (ctor): don't strdup
        * include/readers/variable.h (name_): made MBA_string
                (ctor): don't strdup

        * src/readers/from_l2/from_l2.cpp (parse_enums):
                create array of MBA_string, not const char*
        * src/readers/from_xmpl/from_xmpl.cpp (create_enum):
                create array of MBA_string, not const char*,
                just by not calling c_str()!

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/MBA_string.h (includes): added stdio
                (ctor): added signed and unsigned integer forms
        * include/livingstone/L2_assert.h (L2_bounds_error):
                more descriptive one now that we have MBA_string(int)
        * src/conflict_db/domain.cpp (get_value_name): assert
                rather than return null

2001-03-09  Scott Christa  <schrista@arc.nasa.gov>
        * src/realtime_api/realtime_api.dsp
          src/debuggers/debuggers.dsp: Changed the library output file to the
                lib directory.
        * src/readers/from_l2/from_l2.cpp: Changed NONE to NO_SECTION because
                of conflict with a VxWorks definition.
        * src/readers/l2test/l2test.wpj: Added a VxWorks project file to
                build l2test for the PowerPC.
        * src/readers/l2run/l2run.wpj: Added a VxWorks project file to build
                l2run for the PowerPC.
        * mba.wsp: Added a VxWorks workspace file for Livingstone projects.
        * Livingstone_Win.wpj: Removed.

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/L2_refman/l2_file_format.txt : added
        * src/readers/format.txt
          src/readers/Simple.hrn
          src/readers/Simple.ini
          src/readers/Simple.jmpl
          src/readers/Simple.l2
          src/readers/Simple.l2s
          src/readers/Simple.xmpl : removed

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (enable-count-allocated, enable-report-leaks,
                disable-dynamic-memory) : added
        * configure : regenerated
        * BUILD (enable-count-allocated, enable-report-leaks,
                disable-dynamic-memory) : added

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/memory_pool.h (allocate): print
                the name if out of memory
                (name): always included

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Clause and Proposition are now allocated from a Memory_pool.
        * include/tms/formula.h (includes): added pooled.h
                (class Formula): inherit from Pooled
        * include/tms/clause.h (includes): added memory_pool.h
                (make, free, initialize, destroy, pool, chunk):
                        added
                (ctor): no-arg added, with args removed
                (dtor): calls destroy if allocated
        * src/tms/clause.cpp (Clause::chunk, Clause::pool): added
                (ctor): renamed to initialize
                (dtor): renamed to destroy

        * include/tms/proposition.h (includes): added pooled, memory_pool
                (class Proposition): inherit from Pooled
                (make, free, initialize, destroy, pool, chunk):
                        added
                (dtor): calls destroy if allocated
        * src/tms/proposition.cpp (chunk, pool): added

        * src/tms/ptheory.cpp (dtor): use free, not operator delete
                (create_clause, create_proposition): use make not operator new
                (finish_destroying): use free, not operator delete

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Plugged two leaks: of assignments through truncate,
        and of variables (including assignments) through delete.
        All thanks to ENABLE_POOL_FIND_LEAKS.
        * src/conflict_db/assignable.cpp (dtor): use Assignment::free, not
                operator delete
        * src/conflict_db/conflict_db.cpp (accept_all): added
                (dtor): destroy all variables and domains

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/memory_pool.h (dtor): fixed compile error
                with ENABLE_POOL_FIND_LEAKS

2001-03-09  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignment.h (allocation functions):
                        moved to the top of the file, wrote comments
                (destroy): added clearing the lists

2001-03-09  Scott Christa  <schrista@arc.nasa.gov>
        * src\readers\l2test\l2test.dsp: Added a Microsoft VC++ project file
                to build the l2test executable.
        * src/readers/l2run/l2run.dsp: Added a Microsoft VC++ project file
                to build the l2run executable.
        * src/readers/xmpl2l2/xmpl2l2.dsp: Added a Microsoft VC++ project
                file to build the xmpl2l2 executable.
        * mba.dsw: Added the above projects to this Microsoft VC++ workspace
                file and removed the 'test' project because the l2test
                project takes its place.

                The executables are now created in the bin directory; this
                makes it compatible with the L2 regression test suite.

2001-03-08  Will Taylor   <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp: convert instances of
		"<< (tracker)" to "debug->print_candidates()":
		(findCandidatesJNI), (findFreshJNI), & (extendJNI)
	* src/debuggers/conflict_db_debug.cpp (print_candidate)
	* src/debuggers/tracker_debug.cpp (print_candidates) :
		indent second and successive lines of output

2001-03-08  Will Taylor   <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/LivingstoneEngine.h, src/livdll/livdll.cpp:
		convert uses of (get_name) to (get_var_name) in
		mapOverCandidateAssignmentsJNI,
		mapOverAttributeAssignmentsJNI, &
		mapOverAttributeNamesJNI

2001-03-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed split_equality from Conflict_db.
        * include/conflict_db/conflict_db.h
        * src/conflict_db/conflict_db.cpp (split_equality): removed

        * include/debuggers/conflict_db_debug.h (split_assignment,
                find_assignment(MBA_string)) : added
        * src/debuggers/conflict_db_debug.cpp (includes): added ctype
                (split_assignment, find_assignment(MBA_string)) : added

        * src/debuggers/tracker_debug.cpp (parse_cmd "progress" et al)
                use find_assignment(MBA_string)
        * src/transition/transitioned.cpp (Proto_transition ctor):
                use Conflict_db_debug::split_assignment

        * include/debuggers/T_system_debug.h
          src/debuggers/T_system_debug.cpp (find_current_command,
                find_current_observable) : take args by MBA_string not char*

2001-03-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker.h (read): removed declaration ;
                definition is long since gone

2001-03-07  Scott Christa  <schrista@arc.nasa.gov>
        * include/conflict_db/variable.h
          include/opsat/agenda_types.h
          include/opsat/cbfs_tracker.h
          include/readers/clause.h
          include/transition/tracker.h: Added virtual destructors.
        * include/readers/from_xmpl.h: Did some house keeping to make the
                source code look neat
        * include/conflict_db/conflict_db.h: Fixed a VC++ compiler error as
                follows: 'Variable_acceptor' : cannot access protected struct
                declared in class 'Conflict_db'.
        * include/mba_utils/pooled.h: Modified it to work under Microsoft
                VC++ and added new[] and delete[] operator overloading to
                prevent GCC from using them to dynamically allocate the
                class.
        * src/readers/l2run/l2run.cpp (strdup): Bad Scotty, forgot to add all
                the code and used parentheses instead of brackets for the new
                operator which caused invalid memory crashes in VxWorks.
        * src/readers/l2run/l2run.cpp: Changed the dynamic memory allocation
                to automatics to prevent crashes when it was freed with
                the delete operator. The crashes started right after the
                Memory_pool and Pooled classes were added.
        * src/readers/l2test/l2test.cpp : regenerated
        * src/conflict_db/assignable.cpp (Assignable): Replaced the new
                operator with "Assignment::make".
        * include/conflict_db/assignment.h
          src/conflict_db/assignment.cpp: Added lines required by the
                Memory_pool and Pooled classes.
        * Livingstone_Win.wpj: Modified it to work with version 2.0 of
                Livingstone.

2001-03-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h
          src/transition/T_system.cpp (name_at_time): removed
        * include/debuggers/L2_string_map.h (form_name_at_time): added
        * src/debuggers/L2_string_map.cpp (includes): added stdio
                (form_name_at_time): added

        * src/debuggers/T_system_debug.cpp (find_at_timestep): use
                new L2_string_map function rather than old T_system one

        * src/debuggers/L2_string_map_listener.cpp (progressed_variable,
                created_state_variable, created_mode_transition): use
                    new L2_string_map::form_name_at_time function rather
                    than doing it by hand.

2001-03-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (ctor): added id argument
                (get_id, id): added
                (get_time_step): moved, made const, added comment

        * src/conflict_db/variable.cpp (ctor)
          include/conflict_db/assignable.h
          src/conflict_db/assignable.cpp (ctor)
          include/conflict_db/assumption.h
          src/conflict_db/assumption.cpp (ctor)
          include/conflict_db/dependent.h (ctor)
          include/conflict_db/conflict_db.h
          src/conflict_db/conflict_db.cpp (create_assumption,
                        create_assignable, create_dependent)
          include/transition/transitioned.h
          src/transition/transitioned.cpp (ctor)
                : added id argument

        * include/transition/T_system.h
          src/transition/T_system.cpp (STATE_VAR_ID): added
                (create_present_dependent, create_present_assignable,
                 create_present_command, create_present_observable,
                 create_transitioned): added id argument

        * src/readers/to_t_system/to_t_system.cpp (createVariable):
                pass in the id from the model file

2001-03-07  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed Variable::name field, which also made most operator <<
        obsolete since variables can't print themselves anymore.
        Regression tests only change by a few newlines (where?)

        * include/conflict_db/variable.h (includes): removed MBA_string
                (forward-declare): removed ostream
                (ctor): removed 'name' argument
                (get_name, name, operator <<): removed
        * src/conflict_db/variable.cpp (ctor): removed name arg
                (operator<<): removed

        * include/conflict_db/assignable.h
          include/conflict_db/assumption.h
          include/conflict_db/dependent.h
          src/conflict_db/assignable.cpp
          src/conflict_db/assumption.cpp
                (ctor): removed 'name' argument

        * include/conflict_db/conflict_db.h
          src/conflict_db/conflict_db.cpp (create_assumption,
                create_assignable, create_dependent): removed 'name' argument

        * include/transition/T_system.h (create_present_dependent,
                create_present_assignable, create_present_command,
                create_present_observable, create_mode_transition):
                        removed 'name' argument
        * src/transition/T_system.cpp (minimal_progress): fixed a compile
                        problem; but we should remove that statement entirely
                (copy_in_past, create_state_var): don't create name
                (create_mode_transition, create_present_dependent,
                 create_present_assignable, create_present_observable):
                        removed 'name' argument
                (create_present_command): removed 'name' argument,
                        fixed error messages not to use the name

        * include/transition/tracker.h
          src/transition/tracker.cpp (operator <<): removed

        * include/conflict_db/assignment.h
          src/conflict_db/assignment.cpp
                (get_variable): added non-const
                (operator <<): removed

        * include/conflict_db/candidate.h
          include/conflict_db/conflict.h
          src/conflict_db/candidate.cpp
          src/conflict_db/conflict.cpp
                (operator <<): removed

        * include/debuggers/conflict_db_debug.h (forward-declare): added
                Assignment, Candidate
                (get_variable_value): added version with int index
                (print_assignment, print_candidate, print_conflict): added
        * src/debuggers/conflict_db_debug.cpp (includes): added candidate
                (get_variable_value): added version with index
                (print_conflicts, print_conflict(void)): use print_conflict
                        not operator<<
                (print_assignment, print_candidate, print_conflict): added

        * include/debuggers/T_system_debug.h (find_at_timestep): added
                non-string version, change string version to MBA_string
        * src/debuggers/T_system_debug.cpp (find_at_timestep):
                changed to MBA_string ; added new version
                (PrintVariable::operator()): don't call Variable::get_name
                (sort_db): added nasty hack for var_alpha_comp
                (var_alpha_comp): use sort_db to get the names
                (print_variable_values): don't call Variable::operator<<
                (print_transitioned): use print_assignment
                (print_proto_assignment): don't use get_name ; avoid get_domain
                (find_current_command, find_current_observable): don't use
                        get_name

        * include/debuggers/tracker_debug.h (print_candidates): added
        * src/debuggers/tracker_debug.cpp (parse_cmd): use print_candidates
                (PrintTimeVariableValue::operator()): don't call
                        Variable::get_name
                (dump): don't use string-based find_at_timestep
                (print_candidates): added

        * src/readers/to_t_system/to_t_system.cpp (createVariable):
                don't generate name except for create_transitioned

        * src/transition/transitioned.cpp (ctor): removed 'name' argument
                (create_transition_variable): don't create name
                (Proto_transition::create_proto_assignment): don't use
                        variable name in error reporting

2001-03-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h
          src/transition/T_system.cpp
                (cmd_enums_to_str, observe_enums_to_str) : removed

2001-03-07  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livingstone/version.c: updated to pre-2.1

2001-03-02  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added something I was sure I added a while ago:
        * BUILD (disable-min-progress, disable-full-progress): added

2001-03-02  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added optimize to xmpl2l2 ; changed from -o to -O for l2run/l2test
        * src/readers/l2run/l2run.cpp (options): use -O for optimize short name
        * src/readers/l2test/l2test.cpp : regenerated
        * src/readers/xmpl2l2/xmpl2l2.cpp (OPT_VERBOSE, OPT_OPTIMIZE): added
                (options): added -v/--verbose and -O/--optimize
                (main): added case OPT_VERBOSE, OPT_OPTIMIZE ; reordered
                        others ; added locals use_optimizer, verbose ;
                        print the filenames only if verbose, redid output

2001-03-02  James Kurien <jkurien@arc.nasa.gov>
	* src/readers/L2_file.cpp:  Fixed cut+paste error in optimize()

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Implemented history of 1.
        * src/conflict_db/conflict_db.cpp (destroy_variables): don't
                clobber insert_before
        * src/transition/tracker.cpp (MIN_HISTORY, MIN_HISTORY_LENGTH):
                reduced to just 1.  Now all inputs are correct, so we
                could just remove these and the check in the ctor.

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_l2/from_l2.cpp (parse_one_transition):
                cast away const!  Icky.

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (options): compile fix for
                disable-cover
        * src/readers/l2run/l2test.cpp : regenerated

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/L2_refman/truncate.html (truncate): added call to
                find-horizon-vars
                (find-horizon-vars): added
                (summarize-variables): use info from find-horizon-vars
                (remove-old-variables): fix NOW variable clauses
                        call finish-destroying
                (destroy-variables): don't call finish-destroying
                (Time complexity): redone; there were errors in the old
                (Further work): removed one place we could work on,
                        added a big one (min-progress interaction)

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed bug in min-progress & truncate where transition_clauses could
        keep dead clauses.
        * include/conflict_db/conflict_db.h
          src/conflict_db/conflict_db.cpp (destroy_variables): added
                bool arg whether to clean up TMS

        * include/transition/transitioned.h
          src/transition/transitioned.cpp (remove_destroyed_clauses):
                added

        * src/transition/T_system.cpp (remove_old_variables): tell C_db not
                to clean up ; clean up NOW mode variables ; clean up TMS

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl/from_xmpl.cpp (find_or_create_clause):
                add an explicit cast to const where needed

2001-03-01  James Kurien <jkurien@arc.nasa.gov>
        Enabled optimizer to modify the clauses in an L2_File object
	* include/readers/common.h : created bounds checker that
	    does returns a non-const object.
	* include/readers/transition.h :   Removed const storage of clauses.
	include/readers/clause.h:    Removed const from storage of
		clauses, added setProp_friend().
	* include/readers/L2_file.h, src/readers/L2_file.cpp:
	    Removed const from storage of clauses.  Changed
	    replacePropInClause to modify clause.

2001-03-01  Will Taylor   <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/LivingstoneEngine.h, src/livdll/livdll.cpp:
		add optimizeP arg to loadModelJNI and pass
		file stream arg to pack->file.optimize

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (summarize_variables):
                add new clause as a transition clause if appropriate;
                this allows progress to move the clause back in time

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker.h (observe): take value as signed,
                        not unsigned; negative means unassign
        * include/transition/T_system.h (observe): take value as signed,
                        not unsigned; negative means unassign
                (get_command, get_observable): added

        * src/transition/T_system.cpp (cmd_enums_to_assignment): use
                        get_command and get_assignment
                (get_command, get_observable): added
                (observe): take value as signed, not unsigned ; use
                        get_observable

2001-03-01  James Kurien <jkurien@arc.nasa.gov>	:
	Moved optimizer from L2_file_optimizable to L2_File
	* include/readers/L2_file.h: added optimize(), replaceVarInClause()
	* src/readers/L2_file.cpp: added optimize(), replaceVarInClause()
	* src/readers/L2_file_optimizable.cpp: deleted
	* include/readers/L2_file_optimizable.cpp: deleted
	* src/readers/Makefile.in: removed L2_file_optimizable.o
  	* src/livdll/livdll.cpp: changed references to L2_file_optimizable
	 to L2_file
   	* src/readers/l2run/l2run.cpp: changed references to
	 L2_file_optimizable to L2_file
   	* src/readers/l2test/l2test.cpp: regenerated

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed crashing on truncate (and hence progress) with zero
        candidates.
        * src/transition/T_system.cpp (create_state_var): assert non-zero
                number of states
        * src/transition/tracker.cpp (truncate): summarize based on start
                states if we have no candidates ; only install candidate 0
                if we have one.

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Allow changing where optimizer messages go.
        * include/readers/L2_file_optimizable.h (forward-declare): added
                        ostream
                (optimize, replaceVarInClause): added ostream arg
        * src/readers/L2_file_optimizable.cpp (includes): added ostream
                (verbose): added macro
                (replaceVarInClause, optimize): added ostream arg,
                        changed 'cout' to 'out' and only if verbose

        * src/readers/l2run/l2run.cpp (main): pass 'cout' in optimize call
        * src/readers/l2test/l2test.cpp : regenerated

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added min-progress with truncation.
        * include/transition/tracker.h
          src/transition/tracker.cpp (minimal_progress): added two versions

        * include/debuggers/tracker_debug.h (minimal_progress): renamed
                from min_progress for consistency
        * src/debuggers/tracker_debug.cpp (parse_cmd): rename min_progress
                (minimal_progress): call on Tracker no T_system, don't
                        need new_vars list

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        Only summarize the mode variables at or just past the horizon;
        creates fewer clauses in full-progress, and has some hope of
        working for min-progress.
        * include/transition/T_system.h (find_horizon_modes, horizon_modes):
                added
        * src/transition/T_system.cpp (remove_old_variables): fix previous
                        pointers of mode variables, empty out horizon_modes
                (summarize_variables): iterate only over the mode variables
                        at or just past the horizon
                (find_horizon_modes): added

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/transitioned.h (previous): removed
        * src/transition/transitioned.cpp (ctor): removed previous
                (create_transition_variable): don't set previous ; use
                        get_previous_dependent() instead of private var
                (add_idle_transitions): use get_previous() instead of
                        private var

2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (set_previous): maintain a linked
                list
        * include/conflict_db/dependent.h (get_previous_dependent): added

2001-03-01  James Kurien <jkurien@arc.nasa.gov>

        *  src/livdll/livdll.cpp :
	   If DISABLE_OPTIMIZER is not defined, the load model
	   JNI call reads into an L2_file_optimizable object instead
	   of an L2_file object.

 	   There is a local var use_optimizer that specifies whether
	   the model is optimized or not.  The API should be changed
	   to include this flag, or it should be made a global that
	   another API sets once per session.  Whichever is easier
	   for Stanley code is good.


2001-03-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp (livdll_package,
          Java_LivingstoneEngine_loadModelJNI): changed 'reader' member of
                livdll_package to slightly better name 'file'

2001-03-01  James Kurien <jkurien@arc.nasa.gov>

        *  src/readers/Makefile.in
           src/readers/l2run/l2run.cpp
           src/readers/l2test/l2test.cpp:
	   If DISABLE_OPTIMIZER is not defined,
	   there is now an --optimize option.  The reader
	   reads into an L2_file_optimizable object instead
	   of an L2_file object.  If --optimize is used,
	   L2_file_optimizable->optimize() is called before
	   the L2_file_optimizable object is moved into the
	   T_system.  Optimize currently just prints out the
	   changes it would make while optimizin.

2001-03-01  James Kurien <jkurien@arc.nasa.gov>
	*  src/readers/L2_file_optimizable.cpp :
	   Case problem in include file name was preventing compile

2001-02-28  James Kurien <jkurien@arc.nasa.gov>
	* include/readers/L2_file_optimizable.h :added
          src/readers/L2_file_optimizable.cpp : added
          An L2 intermediate object that can optimize the
	  model it is holding in memory.  This can then
	  be dumped into a T_system or written out using
	  and L2 writer.   This is a preliminary version
	  that needs some work still.

2001-02-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed one of 3 confusing 'timestep' values in T_system:
        * include/transition/T_system.h (history_full): rewrote comment
                (get_current_history_length): removed
                (current_history_length): removed
        * src/transition/T_system.cpp (ctor): remove current_history_length
                (history_full): rewritten

2001-02-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/livingstone.h
          include/livingstone/livingstone_debug.h
          src/livingstone/livingstone.cpp
          src/livingstone/livingstone_debug.cpp : removed

2001-02-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Versions : removed

2001-02-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (run_system): fixed to allow
                any-length lines of input
        * src/readers/l2test/l2test.cpp : regenerated

2001-02-27  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (assignMultipleJNI): fixed to
		allow assigns on any length;
	* src/conflict_db/candidate.cpp (<<): added endl

2001-02-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (run_system): fixed to allow
                any-length lines of input
        * src/readers/l2test/l2test.cpp : regenerated

2001-02-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h (assignment_was_truncated): removed
        * src/debuggers/T_system_debug.cpp (parse_cmd): removed truncated

2001-02-23  Benoit Hudson  <bhudson@arc.nasa.gov>
        Made search_termination const, which required making a few more
        things const.
        * include/debuggers/tracker_debug.h
          include/cover/cover_tracker_debug.h
          include/opsat/cbfs_tracker_debug.h
          src/opsat/cbfs_tracker_debug.cpp
                (search_termination): made const
        * include/opsat/cbfs_tracker.h
          include/opsat/opsat.h
                (get_cutoff_weight): made const, return by value not ref
        * include/transition/T_system.h (get_timestep, get_oldest_timestep,
                history_full, get_current_history_length): made const
        * include/transition/tracker.h (empty, size, get_timestep): made const
        * src/transition/T_system.cpp (history_full): made const

2001-02-23  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added search termination printout for CBFS; support for
        Cover is upcoming.

        * include/transition/tracker.h (includes): added termination.h
                (search_termination): added
        * include/cover/cover_tracker.h (search_termination): added
        * include/opsat/cbfs_tracker.h (get_max_candidates,
                get_candidate_count): made const
                (get_number_tracked): added
                (search_termination): made virtual, const, return
                        SearchTermination instead of unsigned

        * include/debuggers/tracker_debug.h (includes): added mba_string
                (search_termination, get_tracker): added
        * include/cover/cover_tracker_debug.h (search_termination): added,
                but it prints out we're unimplemented
        * include/opsat/cbfs_tracker_debug.h (search_termination,
                get_cbfs_tracker) : added
        * src/debuggers/tracker_debug.cpp (parse_cmd): print out
                search_termination
        * src/opsat/cbfs_tracker_debug.cpp (includes): removed stdlib,
                        added stdio
                (search_termination): added

        * include/transition/termination.h : added from opsat.h
        * include/opsat/opsat.h (get_max_candidates,
                get_candidate_count): made const
                (search_status, terminate_search): use SearchTermination
                        instead of Termination
                (Termination): removed
                (includes): added termination.h
        * src/opsat/opsat.cpp (terminate_search): return SearchTermination
                        instead of Termination

        * src/livdll/livdll.cpp (includes): added termination.h
                (getSearchTerminationJNI): removed CBFS code and replaced
                        with call to Tracker_debug::search_termination

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Shave a linear factor from the cost of truncating.
        * doc/L2_refman/truncate.html : updated for new
                remove-old-variables algorithm ; we shave O(n)
        * include/conflict_db/conflict_db.h
          src/conflict_db/conflict_db.cpp (destroy_variable): removed
                (Variable_acceptor, destroy_variables): added
        * src/transition/T_system.cpp (Old_variable_acceptor): added
                (remove_old_variables): use new algorithm for the variables
                        loop

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Rewrote some functions to avoid using engine strings.
        * include/debuggers/conflict_db_debug.h (assign, unassign) : takes
                        MBA_string
                (find_assignable): take MBA_string not by reference; added
                        bool arg whether to throw an exception
                (find_assignment): takes two MBA_string or added Assignable
                        and MBA_string version; added bool arg whether to
                        throw an exception
                (print_assignable_and_value): removed
                (print_variable_and_value): added
                (print_assignables): added
                (find_prop_index): added
                (find_variable, find_assignable): added bool arg whether to
                        throw an exception

        * src/debuggers/conflict_db_debug.cpp (assign, unassign): rewritten
                        to use new find_assignment
                (print_assumptions, print_assignables,
                 print_all_variable_values): use print_variable_and_value
                (parse_cmd): variables: use print_variable_and_value
                             assignables: use print_assignables
                (print_assignable_and_value): removed
                (print_variable_and_value): added
                (find_variable, find_assignable, find_assignment):
                        rewritten as above
                (find_prop_index): added

        * src/debuggers/tracker_debug.cpp (dump): changed from
                print_assignable_and_value to print_variable_and_value

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/hash_table.h (insert_duplicate): added
        * src/debuggers/L2_string_map.cpp (add_variable): use it

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/L2_string_map.cpp (add_variable): don't bother
                inserting zeroes into var2read

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed clause->component mapping.  It wasn't correctly done yet,
        and was expensive to (even incorrectly) maintain.
        * include/debuggers/L2_string_map.h (clause2whence,
                get_component_of_clause, add_clause, remove_clause) : removed
        * src/debuggers/L2_string_map.cpp (ctor): removed clause2whence init
                (get_component_of_clause, add_clause, remove_clause) : removed
        * src/debuggers/L2_string_map_listener.cpp (created_clause,
                destroying_clause) : ignore

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/debuggers/L2_string_map.h (prop2name, name2prop): removed
        * src/debuggers/L2_string_map.cpp (ctor): don't init prop2name
                (add_variable): don't add to prop2name, name2prop
                (get_name_of_prop, get_prop_by_name): rewritten not to use
                        the removed hash tables

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (create_state_var,
                summarize_conflicts): use push_front instead of push_back

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/conflict_db.cpp (create_assignable,
                create_assumption): use push_front instead of push_back

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/T_system_debug.cpp (print_variable_at_times):
                added case with no variable, prints earliest and current time

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix for PR 1355.
        * src/debuggers/conflict_db_debug.cpp (find_variable): return 0
                if not found (rather than throwing an exception)

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl/from_xmpl.cpp (find_or_create_clause):
                faster check for equality

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/from_xmpl/from_xmpl.cpp (find_enum): don't strdup

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/L2_refman/create_engine.html : added documentation for
                creating an L2 engine.

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added --disable-min-progress and --disable-full-progress
        * configure.in (disable-min-progress, disable-full-progress): added
        * configure : regenerated
        * BUILD (disable-min-progress, disable-full-progress): added

        * include/transition/T_system.h
          src/transition/T_system.cpp
          include/transition/tracker.h
          src/transition/tracker.cpp (minimal_progress, full_progress,
                progress): wrapped in ifdef

        * include/debuggers/tracker_debug.h (min_progress, full_progress):
                added
        * src/debuggers/tracker_debug.cpp (min_progress, full_progress):
                        added
                (listener_usage): only document min/full progress if they
                        are enabled
                (parse_cmd): call min/full_progress

2001-02-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added 'destroying_container' call to each listener, so it can know
        not to remove itself from the container if it outlasts it.
        * include/conflict_db/conflict_db_listener.h
          include/debuggers/L2_string_map_listener.h
          include/readers/to_t_system_listener.h
          include/tms/ptheory_listener.h
          include/transition/T_system_listener.h (destroying_container): added

        * include/conflict_db/conflict_db.h
          include/readers/to_t_system.h
          include/transition/T_system.h (dtor): added

        * src/conflict_db/conflict_db.cpp
          src/tms/ptheory.cpp
          src/transition/T_system.cpp (dtor): added call to destroying_container

        * src/readers/to_t_system/to_t_system.cpp (tms_listener): added
                        destroying_container
                (dtor): added, calls destroying_container

        * src/debuggers/L2_string_map_listener.cpp (destroying_container):
                added all versions

2001-02-22   Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (fullProgressJNI):
	Corrected typo, full-rogress => full-progress.

2001-02-22  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/l2test/l2test.cpp
          src/readers/l2run/l2run.cpp: Added a pseudo command line interface
                for VxWorks.

2001-02-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (history_full): use >=
        * src/transition/tracker.cpp (full_progress): truncate before,
                not after, progress

2001-02-21 James Kurien  <jkurien@arc.nasa.gov>
        * src/debuggers/t_system_debug.cpp,
	  src/debuggers/tracker_debug.cpp:
 	 Removed progress commands from t_system_debug.
	 It cannot progress, since it cannot truncate.
	 Ensured that all progress cmds are handled by
	 the tracker debugger, though min-progress
	 is currently just a pass-through to the non-truncating
	 t_system->min_progress().

2001-02-21 James Kurien  <jkurien@arc.nasa.gov>
	* include/livingstone/L2_assert.h
	Removed parens around exception in Benoit's
	L2_assert macro of 2001-02-17 below.  VC++
	does not like the parens around an object
	initializer.  When calling L2_assert
	the exception arg is usually an expression
	that initializes and exception object.

2001-02-21 James Kurien  <jkurien@arc.nasa.gov>
        * src/transition/T_system.cpp.
	Changed name of index in for loop so that
	two variables named i are not created in the same
	lexical scope. VC++ does not seem to create a new
	lexical scope to allow for(int i=0...)
	See similar note on 2001-02-05


2001-02-21  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/LivingstoneEngine.h, src/livdll/livdll.cpp:
		deleted progressJNI, & assignJNI;
		added minProgressJNI, & fullProgressJNI.
	* src/livdll/livdll.cpp:  (setTransitionVariableAtTimeJNI)
		changed assign access from tracker to debugger.

2001-02-20  Scott Christa  <schrista@arc.nasa.gov>
        * include/readers/from_xmpl.h
          src/readers/from_xmpl/from_xmpl.cpp: Matched the virtual function
                parameter list with that of the base class so that VC++ can
                override them correctly.
        * include/readers/enumeration.h: Prototyped 'strdup' because VxWorks
                does not have it in the 'string.h' file.
        * include/tms/clause.h
          include/tms/proposition.h
          src/tms/ltms.cpp: Fixed a VC++ warning. Note: there is a
                performance hit for converting integers to Boolean.
        * src/debuggers/tracker_debug.cpp
          src/tms/clause.cpp
          src/readers/to_t_system/to_t_system.cpp: Explicit type casting to
                avoid warnings in VC++. Has anybody done any boundary
                checking on these type conversions?
        * All .dsp files <- These are Microsoft VC++ project files.
          - Changed the run-time library to debug single-threaded to avoid
            crashes in the _ios.cpp file.
          - Enabled "Generate browse info" so that it's quicker to move
            around in the source code.
          - Removed unnecessary libraries that are not needed for linking.
          - Turned on lint checking (warning level 3).
        * src/test/test.dsp: Same as above with a different executable output
                file. With a little more work on this project file, it will
                work with the regression test without modification.

2001-02-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        In almost every file:
        - removed friend declarations to debuggers and readers, if possible
        - removed friend declarations to ostream operators
        - removed usage of non-flight classes if possible; these include
                iostream, MBA_string, debuggers, Domain, stdio.h
        - removed many operator<<
        Note iostreams remain almost everywhere because of readers and some
        mba_utils classes.

2001-02-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker_reader.h : removed

2001-02-18  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed 'hokey' functions.
        * include/conflict_db/assignable.h (forward-declare): added class LTMS
                (unassign): un-inlined
        * src/conflict_db/assignable.cpp (includes): added ltms
                (assign): use TMS directly
                (unassign): added from header file

        * include/conflict_db/assignment.h (includes): remove ltms, added
                        theory
                (forward-declare): added class Assumption
                (get_clause): added
                (assign, unassign): removed
        * src/conflict_db/assignment.cpp (includes): added clause

2001-02-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignment.h (set_other_values) : pass
                list argument by reference, not value

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Restricting access to Variable members, and some other changes:
        * include/conflict_db/variable.h (name, all_props): made private

        * include/conflict_db/assignable.h
          include/conflict_db/dependent.h (operator<<): removed

        * src/conflict_db/assignable.cpp (ctor): use begin_props instead of
                all_props directly ; don't iterate over the domain ;
                don't check domain size vs props size
                (operator<<) : removed
                added ID tag
        * src/conflict_db/dependent.cpp (operator<<) : removed
                added ID tag

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Assignable API cleanup:
        * include/conflict_db/assignable.h (assign): removed string version
                (ctor): removed obsolete comment
        * src/conflict_db/assignable.cpp (assign): removed string version

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Variable API cleanup:
        * include/conflict_db/variable.h (MAX_PROP_NAME_LEN,
                form_prop_name): removed

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Tracker API cleanup:
        * include/transition/tracker.h (progress): removed string version;
                        marked other versions deprecated and made them
                        simply call full_progress
                (full_progress): removed string, no-arg versions, added
                        Assignment* and {index,index} versions
        * src/transition/tracker.cpp (progress): removed all versions
                (full_progress): removed string, no-arg versions, added
                        Assignment* and {index,index} versions
        * src/debuggers/tracker_debug.cpp (parse_cmd): progress now
                parses its argument, calls full_progress


2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/L2_assert.h (L2_assert): turned into a macro
                to avoid creating L2_error objects if not necessary

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/variable.cpp (ctor): fixed minor performance bug
                in creating mutex clauses

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Redid memory allocation for Slist_item ; deleting lists is now much
        faster.
        * include/mba_utils/slist_item.h (comments): removed everything
                related to Resource
                (includes): removed resource.h
                (resource_get_next, resource_set_next, alloc_init_size,
                 alloc_incr_size, resource): removed
                (new, delete): rewritten
                (delete_list): added
        * include/mba_utils/slist.h (dtor): call erase
                (erase): use delete_list

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/ltms.h
          src/tms/ltms.cpp (move_support): pass clause list by reference

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/clause.cpp (ctor): added conditional compilation to
                remove the remove_duplicates calls

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/ptheory.cpp (add): use L2_assert rather than cerr

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changed the order of variables in the Conflict_db ;
            was NOW ... horizon ... t
            now t... horizon ... NOW
        This because appending is linear-time, whereas prepending is
        constant-time ; on the X-37 model, about half the time of creating
        variables was spent appending to the list!
        * doc/L2_refman/truncate.html (Data structures): changed note about
                time order assumption
        * include/conflict_db/conflict_db.h (set_new_variable_iterator):
                updated comment, changed var name
                (insert_after): renamed from insert_before
        * src/conflict_db/conflict_db.cpp (ctor): renamed insert_before
                (insert_variable): insert before
        * src/transition/T_system.cpp (remove_old_variables,
                create_state_var, summarize_variables, summarize_conflicts):
                        fixed for new time order, and documented the
                        assumption for time ordering in the code
                (conflict_has_old_active_assignments): document that it
                        doesn't depend on time order

        * include/mba_utils/slist.h (insert_before): added

2001-02-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/conflict_db_debug.cpp (parse_cmd, listener_usage):
                added command 'variables' to be able to observe the list
                in its internal order (used in debugging the next change).

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/variable.cpp (ctor): use push_front/reverse instead of
                push_back

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (summarize_variable) : use push_front
                instead of push_back for a slight savings

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        Optimized the TMS fringe; removing a clause on the fringe was O(n),
        now is O(1).  Plus, adding/removing are just an array access, no
        memory allocation.
        * include/tms/clause.h (fringe_index, get_fringe_index,
                set_in_fringe): added
        * include/tms/ltms.h (insert_into_fringe, remove_from_fringe):
                        moved to c file
                (class Fringe): added
                (fringe, volatile_fringe): made of type Fringe
        * include/tms/ptheory.h (set_in_fringe): removed

        * src/tms/ltms.cpp (class Fringe): added
                (insert_into_fringe, remove_from_fringe): moved from header
                        file; use class Fringe
                (get_fringe_clause): moved from bottom of file, use class
                        Fringe
                (put_in): assert not in fringe
                (finish_destroying, initialize_clauses): use class Fringe

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/to_t_system/to_t_system.cpp (vvslist_to_clause):
                use push_front and reverse rather than push_back,
                to run in O(n) rather than O(n^2)

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/conflict_db.cpp (includes): removed
                conflict_db_debug ; we still need the ptr in the h file,
                but we don't use it in this file anymore

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignable.h
          include/conflict_db/domain.h (friends): added T_system
        * include/transition/T_system.h (get_state_variable,
                create_state_var, state_var) : was Assignable, now Assumption
        * src/transition/T_system.cpp (create_state_var): create an
                        Assumption instead of an Assignable
                (install_new_state): sort the domain of the state_var

2001-02-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/L2_refman/truncate.html (summarize-conflicts)
          src/transition/T_system.cpp (summarize_conflicts): added check
                for conflicts that cannot be resolved anymore

2001-02-05 James Kurien  <jkurien@arc.nasa.gov>
          *  src/transition/T_system.cpp:
	  Fixed so that min_progress will work on
	  models that do not have to be optimized
	  because no commands are transmitted through
	  devices.  The circuit breaker model is an
	  example of this.  More work to do for
	  optimizing and min-progressing all models.

2001-02-05 James Kurien  <jkurien@arc.nasa.gov>
 	include/readers/from_xmpl.h
 	src/readers/from_xmpl/from_xmpl.cpp:
	Added error handling methods, so errors in parsing
	the XML files will be reported to stderr.

2001-02-15  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/proposition.h
          include/tms/clause.h (is_destroying): explicit cast to bool to
                avoid warning on VC60

2001-02-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        Changed listeners from one per class to n per class.
        * include/conflict_db/conflict_db.h
          include/readers/to_t_system.h
          include/tms/ptheory.h
          include/transition/T_system.h
                (set_listener): removed
                (add_listener, remove_listener): added
                (listener_): removed
                (listeners_): added

        * src/conflict_db/conflict_db.cpp
          src/tms/ptheory.cpp
          src/transition/T_system.cpp
                (*_record): iterate over the list
                (ctor): removed listener_

        * src/readers/to_t_system/to_t_system.cpp
                (record): iterate over the list
                (ctor): removed listener_
                (tms_listener::listen): now a list called listeners_
                (tms_listener::pass_on) : removed pass_on
                (tms_listener ctor): add_ rather than set_listener, don't
                        store pass_on
                (tms_listener dtor): remove_ rather than set_listener
                (created_clause, created_proposition,
                 destroying_proposition, destroying_clause): don't pass on
                (write): check listeners_.empty rather than listener_==0

                Unrelated:
                (var, cls): don't bother unioning
                (creating_from_variable): no longer a 1-bit bitfield

        * include/debuggers/L2_string_map_listener.h (file, tracker): added
                (dtor): added

        * src/debuggers/L2_string_map_listener.cpp (ctor) : store thefile,
                        thetracker ; use add_listener rather than
                        set_listener
                (dtor): added

2001-02-13  Scott Christa  <schrista@arc.nasa.gov>
        * src/readers/to_t_system/to_t_system.cpp: Changed the
          DISABLE_TO_T_SYS_LISTEN macro to DISABLE_TO_T_SYSTEM_LISTEN to be
          consistent with other DISABLE_TO_T_SYSTEM_LISTEN macros.

2001-02-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/to_t_system/to_t_system.cpp (createInitialState):
                changed a dynamic_cast to static_cast b/c VC++ chokes
                (run-time) on the dynamic_cast !

2001-02-12  Benoit Hudson  <bhudson@arc.nasa.gov>

	* Makefile.in (INSTALL_DIRS): added
		(install, uninstall): only recur in INSTALL_DIRS

2001-02-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (FEATURE_DIRS): initialize to former contents of
                        makelist
                (makefiles): removed all assignments to it, except
                        in enable-rti
                (enable-rti): warn of code rot
                (OUTPUT_ARG): set based on FEATURE_DIRS and
                        NOLIB_FEATURE_DIRS ; initialize to top-level
                        makefile
                (LIV_STRIPWS call): removed makefiles, FEATURE_DIRS
                (loop for SRCDIRS): removed former contents of makelist
        * configure : regenerated
        * makelist : removed

2001-02-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Cover and CBFS are now optional.
        * configure.in (disable-cover, disable-cbfs): added
                (making SRCDIRS): removed src/cover and src/opsat
        * configure : regenerated
        * BUILD (disable-cover, disable-cbfs): documented
        * makelist : removed src/cover and src/opsat

2001-02-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (includes, OPT_*, options, main)
          src/livdll/livdll.cpp (many) :
                allow conditional compilation to remove CBFS or Cover
                options and all the code associated with them.
        * src/readers/l2run/l2test.cpp : regenerated

2001-02-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/L2_string_map_listener.cpp
                (created_mode_transition) : realized that the 'mode'
                        argument is the NOW variable, whereas
                        modeTransition is in a previous timestep.  This
                        fixes a bug Will Taylor found.

2001-02-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Mechanism for removing dynamic memory allocation.
        * include/mba_utils/memory_pool.h
          include/mba_utils/pooled.h : added.

2001-02-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Implemented qsort rather than using C standard version, to avoid a
        difference between Linux, Solaris.  We're sorting ~5 items per
        component = ~200-1000 items, so speed barely matters.
        * src/readers/to_t_system/to_t_system.cpp (includes):
                        removed stdlib
                (compare_transitions): removed
                (x_cmp): added, based on above
                (x_find_pivot, x_partition, x_qsort, sort_transitions):
                        added ; based on CLR qsort pseudocode
                (write): call sort_transitions rather than C qsort

2001-02-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (Requirements): updated paths for Solaris 8 installation
                        at Ames.
                (enable-l2test et al): added note that l2test is on, others
                        off by default

2001-02-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/xmpl2l2/xmpl2l2.cpp (includes): added version.h
                (OPT_VERSION): added
                (options): added --version option
                (main): added OPT_VERSION

2001-02-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * VERSION : removed ; previous change makes it obsolete

2001-02-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/version.h (l2_build_time): removed
        * src/readers/l2run/l2run.cpp (OPT_VERSION): don't use l2_build_time
        * src/readers/l2test/l2test.cpp : regenerated

        * src/livingstone/version.c : added (no longer completely autogenerated)
        * src/livingstone/Makefile.in (version.c): depend only
                on ChangeLog ; use a script to update version.c
        * src/livingstone/update_version_c : added, executable

2001-02-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * makelist : added src/livingstone, needed for 2001-02-06 version
                number checkin

2001-02-06  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/to_t_system/to_t_system.cpp (write): unfreeze stream
                        for transition domains
                (expandClause): removed unused variable
                (createTransition): switch to compatible unfreezing

2001-02-06  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added a version number.
        * VERSION : updated to 'pre-2.0' ; we'll need to update it
                from now on
        * src/livingstone/Makefile.in : added
        * include/livingstone/version.h : added
        * configure.in (SRCDIRS): added src/livingstone
        * configure : regenerated
        * src/readers/l2run/l2run.cpp (includes): added version.h
                (OPT_VERSION): added
                (OPT_HISTORY, OPT_NSTATE_VALUES): incremented
                (options): added '--history' option
                (main/case OPT_VERSION): added
        * src/readers/l2test/l2test.cpp : regenerated

2001-02-06  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/L2_string_map_listener.cpp (created_variable,
                created_clause, progressed_variable,
                created_state_variable): remove arch-dependent code,
                        switch to MS version that works on Unix as well

2001-02-06  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/debuggers/L2_string_map.h (read2nowvar): added field
        * src/debuggers/L2_string_map.cpp (includes): removed strstream
                (ctor): added init for read2nowvar
                (get_now_variable): lookup from HT directly instead of
                        through name
                (add_variable): added inserting NOW variables

2001-02-06  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/debuggers/L2_string_map_listener.cpp (progressed_variable,
                created_state_variable): null-terminate the strings
                for new variables

2001-02-05 James Kurien  <jkurien@arc.nasa.gov>
        * src/readers/from_l2/from_xmpl.cpp:
	Put {  } around certain for loops that
	declare variables (ie  for (unsigned index=0 ...
	as Visual C++ does not consider the for
	loop as its own lexical scope.  GCC does,
	so in somecases, the same variable name is
	introduced in several for loops.  Putting
	the {} creates a new lexical scope for each.

2001-02-05 James Kurien  <jkurien@arc.nasa.gov>
	* src/readers/from_l2/from_l2.cpp:
	Put reference to errno inside #ifdef _MSC_VER.
	Visual C++ can use errno, but I haven't quite
	figured out how to link it in without causing
	any conflicts.

2001-02-05 James Kurien  <jkurien@arc.nasa.gov>
	* src/debuggers/L2_string_map*.cpp,
	  src/readers/to_t_system/to_t_system.cpp:
          API to strstream.freeze() is slightly different between
	  gcc and Visual C++. Put an #ifdef _MSC_VER around the
	  VisualC++ version of the calls.  This should go
	  away when we stop using strings internally anyways.

2001-02-05 James Kurien  <jkurien@arc.nasa.gov>
	* src/*/*.dsp:
	  Changed Visual C++ Project files to reflect that
	  debuggers are no longer part of the flight system
	  and their location has changed.  Does not build
	  yet.

2001-02-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (ctor): surrounded code for listener
                with ifdefs

2001-01-30  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (assignJNI, unassignJNI)
	  (getPropValueJNI, setTransitionVariableAtTime)
	  (variableValueAtTime): output error to cmd line,
	  as well as throw it.

2001-01-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * lib/.cvs-place-holder : reverted remove of 01-22, and filled it
                with info as to why we shouldn't remove it.

2001-01-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Bug fix in naming modeTransition variables.  Should make a better fix.
        * include/transition/T_system_listener.h (forward-declare): added
                        Assumption, Dependent
                (progressed_variable, created_state_variable): documented
                (created_mode_transition): added
        * include/transition/T_system.h (create_mode_transition): added
        * include/debuggers/L2_string_map_listener.h
                (created_mode_transition): added
        * src/debuggers/L2_string_map.cpp (includes): added
                conflict_db/variable, domain
                (add_variable): commented out old code, added new that uses
                        deprecated Domain structure
        * src/debuggers/L2_string_map_listener.cpp
                (created_mode_transition): added
        * src/transition/T_system.cpp (idle, full_progress transition case):
                don't record progressed_variable for create_mode_transition
                (create_mode_transition): added
        * src/transition/transitioned.cpp (create_transition): call
                T_system::create_mode_transition instead of create_assumption

2001-01-29  Will Taylor  <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (throw_error):
	  remove write to cmd line.

2001-01-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2test/.cvsignore : added

2001-01-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * makelist : added src/debuggers

2001-01-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reworked the debuggers / readers architecture

        Build system:
        * configure.in (--disable-old-reader): removed
                (enable_debuggers): added; no option to turn it off since
                        they're still required
                (building SUBDIRS): removed src/test
        * configure : regenerated
        * makelist : removed src/test
        * BUILD (Using it): mention l2run, don't mention hacking the
                LD_LIBRARY_PATH
                (enable-l2test): added
                (disable-old-reader): removed

        String map: lots of changes from barely-compiling v 1.1
        Just ignore the earlier checkin and count this as 'added'
        * include/debuggers/L2_string_map.h
          src/debuggers/L2_string_map.cpp
          src/debuggers/L2_string_map_listener.cpp : many changes

        Debuggers: moved to a separate directory; updated includes;
        added L2_string_map reference in ltms_debug and all ctors.
        This will allow disabling them all very easily.
        * include/conflict_db/conflict_db_debug.h
          include/tms/ltms_debug.h
          include/transition/T_system_debug.h
          include/transition/tracker_debug.h
          src/conflict_db/conflict_db_debug.cpp
          src/tms/ltms_debug.cpp
          src/transition/T_system_debug.cpp
          src/transition/tracker_debug.cpp : removed

        * include/debuggers/T_system_debug.h
          include/debuggers/conflict_db_debug.h
          include/debuggers/ltms_debug.h
          include/debuggers/tracker_debug.h
          src/debuggers/T_system_debug.cpp
          src/debuggers/conflict_db_debug.cpp
          src/debuggers/ltms_debug.cpp
          src/debuggers/tracker_debug.cpp : added

        Same updates as above ; but I didn't move them.  Can't decide
        how to effect the eventual possibility of removing either cover
        or cbfs, and the debuggers.
        * include/cover/cover_tracker_debug.h
          include/opsat/cbfs_tracker_debug.h

        Readers: removed the old one, touched up the new one.
        * include/transition/T_system_reader.h
          src/transition/T_system_reader.cpp : removed
        * include/readers/to_t_system.h
          src/readers/to_t_system/to_t_system.cpp (createInitialState): added
        * include/readers/to_t_system_listener.h (forward-declares):
                added all those we need

        Associated makefiles:
        * src/debuggers/Makefile.in (OBJECTS): added ltms_debug.o,
                conflict_db_debug.o, T_system_debug.o, tracker_debug.o
        * src/tms/Makefile.in (OBJECTS): removed ltms_debug.o
        * src/conflict_db/Makefile.in (OBJECTS): removed conflict_db_debug.o
        * src/transition/Makefile.in (OBJECTS): removed T_system_debug.o,
                 T_system_reader.o tracker_debug.o

        Drivers:
        * src/readers/l2run/l2run.cpp (includes): removed variable,
                        clause, to_t_system_listener, errno, fstream ;
                        added L2_string_map, L2_string_map_listener
                (hash_l2rvar, reader2var, find_variable,
                 hash_tsys_clause, clause_to_component, whence_clauses,
                 print_all_whence, l2run_listener, intialize_system): removed
                (map, l2, reader, writer, map_listener): added
                (run_system): removed 'whence', made static
                (main): don't set writer's listener, call
                        to_t_system::createInitialState
        * src/readers/l2test/l2test.cpp : regenerated
        * src/livdll/livdll.cpp (includes): removed livingstone,
                    livingstone_debug, opsat, conflict_db_debug ; added
                    L2_string_map, L2_string_map_listener, L2_file, from_xmpl,
                    to_t_system, tracker[_debug], cover_tracker[_debug],
                    cbfs_tracker[_debug]
                (livdll_package): added
                (fetchLivPointer): return livdll_package
                (fetchTracker, fetchDebugger): added
                (livType): throw an L2_error
                (fetchLivType): removed
                (*_allocate{CBFS,Cover}Engine): use livdll_package to
                    store all the parts we need in one pointer ; allocate
                    the debugger here as well ; don't allocate the listener
                    yet
                (*_allocate{CBFS,Cover}Engine): do nothing useful
                (*_deallocateEngine): delete the package all at once
                (*_loadModel): allocate the listener; stack-allocate the
                    reader/writer pair, read the model using them
                (others): update how they get their tracker/debugger
                    pointers ; switched a few to depend on debuggers rather
                    than obsolescent engine parsing functions

        Engine:
        * include/transition/T_system_listener.h (forward-declare): added
                Assignable
        * src/conflict_db/conflict_db.cpp ,
          src/transition/tracker.cpp (includes): updated conflict_db_debug
        * src/transition/transitioned.cpp (includes): updated
                T_system_debug
        * src/conflict_db/variable.cpp (includes): removed conflict_db_debug
                (ctor): tell db only when done initializing, don't set
                        proposition name
        * src/transition/T_system.cpp (idle,full_progress): added
                progressed_variable call for transitioned variables

2001-01-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp : added comment
        * src/readers/l2test/l2test.cpp : regnerated

2001-01-25  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added l2test, just like l2run but reads xmpl.  Not
        completely integrated yet (you need to hack Makefile),
        and thus not yet fully documented.  Should be better
        tomorrow or so.
        * src/readers/l2test/Makefile.in : added
        * src/readers/l2test/l2test.cpp : generated and added
        * configure.in (enable-l2test): added, default off
        * configure : regenerated

2001-01-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (main): added parsing comments,
                changed output for which search algorithm we're using
                (includes): added ctype for isspace

2001-01-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (options): changed --start-states
                to be --max-truncate

2001-01-25  Will Taylor    <taylor@ptolemy.arc.nasa.gov>
	* src/conflict_db/conflict_db_debug.cpp
	  (assign (char* assignment_str)):
	  added L2_assert calls for each cerr call.

2001-01-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h
          src/conflict_db/variable.cpp (get_value_index): added

2001-01-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/debuggers/L2_string_map.h
          include/debuggers/L2_string_map_listener.h
          src/debuggers/L2_string_map.cpp
          src/debuggers/L2_string_map_listener.cpp
          src/debuggers/Makefile.in : added

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>

	* include/transition/T_system.h,
	  include/transition/T_system_debug.h,
	  src/transition/T_system.cpp,
	  src/transition/T_system_debug.cpp:
	  Moved find_current_command, find_current_observation
	  and find_transitioned to T_system debugger.

	* include/conflict_db/conflict_db.h,
	  include/conflict_db/conflict_db_debug.h,
	  src/transition/conflict_db.cpp,
	  src/transition/conflict_db_debug.cpp:
	  Moved find_variable and find_assignable
	  to conflict_db_debugger.

	* src/transition/transitioned.cpp,
	  src/transition/T_system_reader.cpp,
	  src/livdll/livdll.cpp:
	  Modified to reflect above changes.
	  These files now contain dependencies
	  upon T_system having a debugger ptr,
	  which must be corrected.

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>
	* include/transition/T_system.h,
	  src/transition/T_system.cpp:
	Removed pairs that used to keep assignable
	variable->previous assignable variable
	mapping, as change below makes this
	unnecessary.

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>
	*  src/transition/T_system.cpp:
        Updated find_previous_variable to use
	variable->get_previous() rather than looking
	up the variable by name.

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>
	*  include/conflict_db/variable.h
	   src/conflict_db/variable.cpp :
	 Added Variable* variable->get_previous() and
 	 variable->get_previous(Variable*).  These are
 	 useful for superclasses of conflict_db that
	 want to track temporal relations between vars
	 (ie the transitions system).  They are not
	 used in the conflict_db.

2001-01-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/pair.h (includes): added ostream.h since it's
                needed for the operator << definition.

2001-01-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/candidate.h (id()): renamed to get_id
                (id_): renamed to id

2001-01-23  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/candidate.h (ctors, operator=): set id
                (id(), id_, global_id): added
        * src/conflict_db/candidate.cpp (global_id): added static symbol defn

2001-01-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/ltms.cpp (finish_destroying): fixed usage of
                unassign ; it's not recursive after all!  Removed
                a statement that magically made things worked because
                of my incorrect assumption.  This change changes the output
                of the cbfs-5-1000-2 test.

2001-01-22  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed for 2001-01-21  James Kurien, which removed create_clause,
        and 2001-01-22  James Kurien, which changed arguments to
        Transitioned::add_transition_clause_prototype
        * src/readers/l2run/l2run.cpp (initialize_system): changed
                to new create_clause syntax
        * src/readers/to_t_system/to_t_system.cpp (includes): added
                        transitioned.h
                (VarValueSign, vvslist_to_clause): added
                (createBackground): no need to record new clauses
                (expandClause): no need to return clauses ; switched to
                        new syntax
                (createTransition): updated for not needing the value name,
                        just its index ; plus, took the time to fix mem
                        leaks here

                (compare_transitions, hash_enum, hash_var): made static;
                        these changes were unrelated to the others

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>
	*  include/conflict_db/conflict_db.h,
	   src/conflict_db/conflict_db.cpp :
	 Removed conflict_db->find_proposition(name) methods.
	 Use conflict_db_debugger->find_proposition(name) instead.

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>
	*  src/livdll/livdll.cpp :
	 Modified to call conflict_db_debugger->find_proposition(name)
	instead of deprecated conflict_db->find_proposition(name)

2001-01-22  James Kurien  <jkurien@arc.nasa.gov>
	*  include/transition/transitioned.h,
	   src/transition/transitioned,
	   src/transition/T_system_reader.cpp:
         Prototype transitions are now created by specifying
	 the value index rather than value name.  Thus we
	 no longer need to look up the proposition that
	 goes with a "var=value" string.  Modified
	 reader to use the new constructor.

2001-01-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (hacking xerces path): fixed so we only add path once
        * configure : regenerated

2001-01-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * lib/.cvs-place-holder : removed ; we no longer need to ensure
                the directory is there.

2001-01-21  James Kurien  <jkurien@arc.nasa.gov>
        *  include/transition/transitioned.h,
	src/transition/T_system.cpp,
	src/transition/T_system_debug.cpp,
	src/transition/tracker.cpp:
	Cleaned up API to transition system.  No changes
	in function intended.

2001-01-21  James Kurien  <jkurien@arc.nasa.gov>
        *  include/transition/transitioned.h,
	   src/transition/transitioned.cpp :
 	  Commented out code that checks that all vars
	  mentioned by a transition exist before instantiating
	  the transition.  This is only needed in minimal
	  progress, as in full progress all variables are
	  created in the new time step before any transitions
	  are instantiated.  It was being called in full progress,
	  which was wasting time.  For minimal progress, James
	  Kurien is doing a redesign that will change this
	  code anyways.

2001-01-21  James Kurien  <jkurien@arc.nasa.gov>
        *  include/transition/T_system.h :
	   src/transition/T_system.h,
 	  Removed find_previous_variable(char* name)
          in favor of the existing method
    	  find_previous_variable(Variable& var)

2001-01-21  James Kurien  <jkurien@arc.nasa.gov>
        *   src/transition/T_system.cpp :
	Minor performance improvement.  In progress,
	previously we found & set the cmd we progressed
 	on, then iterated over all vars and set	each
	except the cmd.  Now we iterate all vars and
	set the cmd var as well.  This saves looking
	up the cmd var by name.

2001-01-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/starting/building_l2.html (Solaris): removed
                (Unix): added, basically a pointer to BUILD

2001-01-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (lib/* targets): use double-colon in order to avoid
                a warning

2001-01-17  James Kurien  <jkurien@arc.nasa.gov>
        *  include/transition/T_system.h
	   include/transition/T_system_debug.h
	   include/transition/T_system_reader.h
	   include/transition/transitioned.h
	   src/transition/T_system.cpp
	   src/transition/T_system_debug.cpp
	   src/transition/T_system_reader.cpp
	   src/transition/transitioned.cpp :
	 Previously, we stored state constraints as clauses.  When
	 we needed to introduce a new time step, we would
	 iterate over the propositions in each clause, then
	 find the proposition with the same name in the new
  	 time step.  Now we store the constraints as a list
	 of assignments to variables.  When we need to
	 instantiate the constraint in the new time step,
	 we find the corresponding variable in that time step,
   	 and create a constraint on its value.

	 Removed several methods that looked up previous propositions,
	 stored clauses in the T_system, and so on.

	 Added create_simple_constraint() to T_system.  It takes
	 an argument that specifies whether the constraint being
	 created is a state constraint, and thus must be copied
	 every time a new time step is created, or just a one-time
	 constraint the user wants to create in one time step or
	 on the initial state.

2001-01-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/MBA_string.h (String_value ctor): use memcpy
                instead of strcpy

2001-01-17  James Kurien  <jkurien@arc.nasa.gov>
        * src\transition\T_system_reader.cpp: Changed scratch variable
        usage to avoid differences in how GCC and VC++ treat a
	index defined within a for loop.  Related to change below.

2001-01-17  Scott Christa  <schrista@arc.nasa.gov>
        * src\transition\T_system_reader.cpp: Fixed a redefinition compiler
        error that would happen when compiling under GCC 2.7.2 or Microsoft
        Visual C++.

2001-01-15  Shirley Pepke <spepke@arc.nasa.gov>
	Added multiple observation function to RTI.
	* include/realtime_api/posix/livapi_rt.h
	* src/realtime_api/posix/livapi_rt.cpp

2001-01-14  James Kurien  <jkurien@arc.nasa.gov>
        * src/conflict_db/conflict_db.cpp:
	Changed create_simple_constraint so it no longer reverses the
	order of the constraint terms passed in.  Constraints created
	with create_clause and create_simple_constraint are now identical.
	(Duh).  This brings output into line with regression test.
        * src/transition/T_system.cpp :
	 Made several minor optimizations to expand_positive_var_equality
 	 and expand_negative_var_equality so as not to repeatedly add and
 	 remove items from the constraints being generated.  No change in
 	 functionality.

2001-01-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Reverted to pre-1.4 meaning of horizon (and history)
        * include/transition/T_system.h (get_horizon): add 1 to revert to
                        previous meaning of horizon
        * src/transition/tracker.cpp (MIN_HISTORY_LENGTH): upped to 2

2001-01-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed that l2run didn't get TMS events.
        * include/tms/ptheory.h (set_listener): return the old
        * src/readers/to_t_system/to_t_system.cpp (tms_listener):
                added ptheory and ptheory_listener pointers, so we
                pass on the tms listener calls and restore the pointer
                (write): removed calls to set_listener, added args
                         to tms_listener

2001-01-12  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added 'stats' command and printing the size of lots of things:
        * include/tms/ltms_debug.h (print_stats): renamed from 'stats'
        * include/conflict_db/conflict_db_debug.h
          include/transition/tracker_debug.h (print_stats): added

        * src/tms/ltms_debug.cpp (parse_cmd): added "stats"
                (print_stats): renamed from 'stats', changed format
        * src/conflict_db/conflict_db_debug.cpp (parse_cmd): added "stats"
                        and "cdb-stats"
                (listener_usage): document cdb-stats
                (print_stats): added
        * src/transition/tracker_debug.cpp (parse_cmd): added "stats" and
                        "tracker-stats"
                (listener_usage): document tracker-stats
                (print_stats): added

2001-01-11  James Kurien  <jkurien@arc.nasa.gov>
        * include/conflict_db/conflict_db.h,
           src/conflict_db/conflict_db.cpp:
	  Added create_simple_constraint.  This has the
	  same effect as create_clause, but is in terms
	  of variables and values rather than propositions.
	  Propositions should not appear in the conflict_db
	  interface.

2001-01-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/clause.h (set_supports): accept '0' as a legal argument
                (get_supports): added an assert
                (DESTROYING): added a flag
                (set_destroying, is_destroying): added
        * include/tms/proposition.h (set_destroying, is_destroying,
                DESTROYING): added
        * include/tms/ptheory.h (finish_destroying): added
        * include/tms/ltms.h (destroy_props, destroy_clause, destroy_prop):
                        removed
                (finish_destroying): added
        * include/conflict_db/variable.h (forward-declare): removed LTMS
                (leave_tms): removed LTMS arg

        * src/tms/clause.cpp (flag constants): turned into 1<<bit#, added
                        DESTROYING
                (ctor): initialize supports to NO_PROPOSITION since it
                        isn't intitialized when the clause is added
                (dtor): set fields to bizarre values for debugging
        * src/tms/proposition.cpp (flag constants): turned into 1<<bit#,
                        added DESTROYING
                (set_destroying): added
        * src/tms/ltms.cpp (remove_marked_from_list, finish_destroying):
                        added
                (unassign): add check for already-unassigned
                (destroy_clause, destroy_prop, destroy_props): removed
        * src/tms/ptheory.cpp (finish_destroying): added

        * src/conflict_db/variable.cpp (leave_tms): new algorithm ; removed
                        LTMS arg
        * src/conflict_db/conflict_db.cpp (destroy_variables): don't pass ltms

        * src/transition/T_system.cpp (remove_old_variables): call
                finish_destroying

        * doc/L2_refman/truncate.html (algorithms, time complexity):
                updated to the new algorithm for deletion

2001-01-11  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (printPropClausesJNI): revised
		to use LTMS_debug::pretty_print_clause to
	  	output clauses to Skunkworks command line.

2001-01-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (with-xerces): added check that it exists, avoiding
                a bizarre error message later
        * configure : regenerated

2001-01-10  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/LivingstoneEngine.h: updated for assignMultiJNI
	* src/livdll/livdll.cpp (assignMultiJNI): added
	* src/livdll/livdll.cpp (jni_prop_contains_string,
		jni_print_propositions, justifyPropositionJNI,
		cpropsJNI, printPropClausesJNI, printPropositionsJNI,
		variableValueAtTimeJNI, setTransitionVariableAtTimeJNI):
		Removed `DEBUGGER NOTE' items by using debugger pointer,
		rather than `tracker->get_t_system().debugger',
		to get to T_system_debug::find_at_timestep, and
		Conflict_db_debug::get_prop_name. Resolves PR #1270.

2001-01-09  Benoit Hudson  <bhudson@arc.nasa.gov>
        Comment from previous log is incorrect; something else was the
        matter in my local copy.  The only thing that was broken is:
        * src/readers/to_t_system/to_t_system.cpp (includes):
                        ptheory_listener instead of tms_listener
                (tms_listener): inherit from Ptheory_listener ;
                        members *_prop are now *_proposition

2001-01-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        Moved listening up to Ptheory from LTMS.
        Note this breaks the destroy_clause/prop calls, and as such the
        regression tests will now fail (and much else, as well).

        * include/tms/ltms.h (listener_, set_listener): removed
                (ctor): don't init listener_
                (forward-declare): removed LTMS_listener
                (create_clause, create_proposition): removed
        * include/tms/ltms_listener.h : removed
        * include/tms/ptheory.h (listener_, set_listener): added
                (forward-declare): added Ptheory_listener
        * include/tms/ptheory_listener.h : added

        * src/tms/ltms.cpp (ltms_record, create_clause,
                create_proposition): removed
                (destroy_clause, destroy_prop): remove ltms_record calls
        * src/tms/ptheory.cpp (ptheory_record): added
                (ctor): init listener_
        * src/tms/ltms_debug.cpp (includes): ptheory_listener instead of
                        ltms_
                (Listen_impl): inherit from Ptheory_listener
                (Listen_impl:: created_prop, destroying_prop): renamed to
                        fully spell out `proposition'

2001-01-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/tracker_debug.cpp (parse_cmd): init
                start_time and end_time to zero to squash an 'uninitialized
                variable' warning.

2001-01-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * DEVELOPERS (Checkin, Naming): added
        * README: added

2001-01-08  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (allocateCBFSEngine):
	* src/livdll/livdll.cpp (getSearchTerminationJNI):
	  call set_cutoff_weight to set cutoff weight parameter, and
	  use its value in search termination messages.
	* src/livdll/livdll.cpp (deallocateEngine):
	  call delete for the tracker and debugger engine pointers.

2001-01-04  James Kurien  <jkurien@arc.nasa.gov>
        * include/transition/transitioned.h,
	  src/transition/transitioned.cpp

2001-01-04  James Kurien  <jkurien@arc.nasa.gov>
	* include/tms/ltms_debug.h,
	  src/tms/ltms_debug.cpp,
	  src/transition/tracker_debug.cpp:
	  Added debugger function "time" that toggles
	  whether or not timing information is printed
	  when a command is run from the debugger.
	  Added debugger methods begin_timing() and
	  end_timing() that can be put around any
	  function to be timed.

2001-01-04  James Kurien  <jkurien@arc.nasa.gov>
	* include/transition/T_system.h,
	  src/transition/T_system.cpp:
          Present assignable variables now record their
	  counterparts in the previous time step.  This
	  reduces the need to search for variables by name.

2001-01-04  James Kurien  <jkurien@arc.nasa.gov>
	  I noticed a clean check out and build from the
   	  repository does not pass test cb.cover-10-2.
	  Tagged the src and regression tests with
          L2_1_4_2001_NOPASS.

2001-01-03  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (findCandidatesJNI):
	* src/livdll/livdll.cpp (getSearchTerminationJNI):
	  modified to call tracker->prune_inconsistent_candidates()
	  and tracker->find_fresh_candidates(), rather than
	  tracker->prune_and_search(), so that search/no-search
	  can be determined.

2001-01-03  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* src/livdll/livdll.cpp (APIENTRY DllMain): replaced
	  `#ifndef jni_under_unix' with `#ifdef WIN32'
	* src/livdll/Makefile.in: removed `DEFS += -Djni_under_unix';
	  replaced `-I${JNI_INCLUDES}/solaris \' with
	  `-I${JNI_INCLUDES}/@os_type@ \';
	  replaced `include/jdk1.2' with `include/jdk1.3'

2001-01-03  Will Taylor <taylor@ptolemy.arc.nasa.gov>
	* include/jdk1.3: updated jawt.h, jni.h, jvmdi, & jvmpi.h;
	* include/jdk1.3/solaris: added jawt_md, & jni_md.h
	* include/jdk1.3/linux: added jawt_md, & jni_md.h

2001-01-03  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h
          src/transition/T_system.cpp (NO_RANK): removed

2001-01-03  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fix backend for PR 1275.
        * include/transition/tracker.h (max_truncated_candidates): added
        * src/transition/tracker.cpp (ctor): set above
                (truncate): use above to cap number of candidates

2001-01-03  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/T_system_listener.h (created_state_variable): added
        * src/transition/T_system.cpp (create_state_var): call above
        * src/transition/T_system_debug.cpp (Listen_impl): define above,
                but also commented out the entire class for now.
                (ctor): commented out creating a listener, since it does
                    nothing for now.

2001-01-03  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (os_type): added for livdll/Makefile.in ;
                tested only under solaris, should work on linux,
                win32 (cygwin and mingw32) platforms, and irix.
        * configure : regenerated

2001-01-03  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (--with-profile): added
        * configure : regenerated
        * BUILD (--disable-old-reader): updated
                (--with-xerces, --with-xerces-lib, --with-Wall,
                 --with-Werror, --with-warnings): documented the changes
                        they cause
                (--with-profile): added

2000-12-21  Benoit Hudson  <bhudson@arc.nasa.gov>
        Redid the Start.State variable -- it's now 'time#state' and a new
        one is created for every horizon.  This simplifies truncation.

        * include/transition/T_system.h (START_STATE_TIME): removed
                (ctor): removed num_histories arg
                (get_num_histories, num_histories): removed
                (create_new_start_state, install_new_start_state,
                 start_state_var, new_start_state_clauses): removed 'start_'
                        from name
        * src/transition/T_system.cpp (START_STATE_TIME): removed
                (ctor): removed num_histories arg, don't init num_histories
                (remove_old_variables): don't check for START_STATE_TIME
                (create_new_start_state): removed
                (create_state_var): added
                (summarize_variables): use state_var not start_state_var,
                        don't check for START_STATE_TIME,
                        add clauses to new_clauses not new_start_state_clauses
                (summarize_conflicts): use state_var not start_state_var,
                        don't check for ai->get_variable()==state_var since
                        it won't
                (install_new_state): renamed from install_new_start_state,
                        renamed new_clauses

        Changes mandated by above:
        * src/conflict_db/candidate.cpp (truncate): got rid of special case
                for assignments[i]==state_eq_si since it's now always false
        * src/transition/tracker.cpp (ctor): remove num_histories arg from
                        T_system ctor call
                (truncate): ignore call if horizon predates oldest timestep
                        create new state var big enough for all candidates
                        changed naming to new setup
        * src/transition/tracker_debug.cpp (dump): changed naming
        * src/readers/l2run/l2run.cpp (initialize_system): remove nstates
                argument, call create_state_var rather than doing the work
                (main): fix call to initialize_system

        This is obsolescent, but for now...
        * include/transition/T_system_reader.h (START_STATE_NAME,
                START_STATE_OBJECT, START_STATE_DOMAIN_NAME): removed
        * src/transition/T_system_reader.cpp (START_STATE_NAME,
                START_STATE_OBJECT, START_STATE_DOMAIN_NAME); removed
                (START_STATE_VARIABLE): renamed to "0#state"
                (START_STATE_DEFAULT_NAME): renamed to "s0"
                (Init_reader::create_start_state): removed
                (Init_reader::startDocument): ask T_system to do the work
                (Init_reader::endDocument): nothing to do anymore
                (Init_reader::startElement): got rid of START_STATE_OBJECT

2000-12-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/conflict_db.h (set_new_variable_iterator,
                insert_after): added
        * src/conflict_db/conflict_db.cpp (ctor): initialize insert_after
                (insert_variable): insert after insert_after

2000-12-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/slist.h (insert): return value is void,
                behaviour at end of list is to push_back

2000-12-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * doc/L2_refman/truncate.html (summarize_variables): say that we
                don't summarize assumptions -- and shouldn't summarize
                dependents except those dependent on truncated variables
        * src/transition/T_system.cpp (summarize_variables): don't
                summarize assumptions

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD: added instructions for disable-shared
        * configure.in (enable-jni): made incompatible with disable-shared
        * configure: regenerated

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added support for PR1282: a static build without xmpl.

        * configure.in (--disable-shared): added
                (checking for CXXPIC, CXXSHARED): condition on enable-shared
                (checking for CXXRFLAG): condition on enable-shared or GCC
                (L2LIB, L2LIB_FILE): added
                (--enable-rti): made incompatible with disable-shared
        * configure: regenerated.

        * top.mk (L2LIB, L2LIB_FILE): added
        * bot.mk (install rule for libraries): removed .so requirement ;
                but I'm not convinced this rule has ever worked!
        * Makefile.in (LIB_TARGETS, LIB_INSTALL, install rule for livdll):
                use L2LIB_FILE rather than spelling it out
                (liblivdll.a rule): added
        * src/readers/l2run/Makefile.in
          src/readers/l2strip/Makefile.in
          src/readers/xmpl2l2/Makefile.in (DEPS): use L2LIB_FILE
                (TARGET rule): use -l$(L2LIB)
        * src/test/Makefile.in (L2TEST_L): use L2LIB
                (L2TEST_LIBS): spell it out instead of pattern
                (DEPS_L): removed
                (DEPS): spell it out instead of pattern


2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/rtapi.cpp (read_scenario): removed unused local
                (rt_input): fixed signed/unsigned compare

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Removed time step from TMS.
        * include/tms/clause.h (ctor): removed time argument
                (time_step, get_time_step, between): removed
        * src/tms/clause.cpp (ctor): removed time argument, don't set time_step
                (operator<<): don't print timestep

        * include/tms/proposition.h (ctor): removed time argument
                (get_time_step, between, time_step): removed

        * include/tms/ptheory.h (create_clause, create_proposition)
          include/tms/ltms.h (create_clause, create_proposition)
          src/tms/ptheory.cpp (create_clause, create_proposition)
          src/tms/ltms.cpp (create_clause, create_proposition)
          include/transition/T_system_reader.h (expand_negative_var_equality,
                 expand_positive_var_equality, expand_var_equalities,
                 parse_clause)
          src/transition/T_system_reader.cpp (parse_state_clauses,
                 expand_negative_var_equality, expand_positive_var_equality,
                 expand_var_equalities, parse_clause, Init_reader::startElement)
          src/conflict_db/assignable.cpp (ctor)
          src/conflict_db/variable.cpp (ctor)
          include/conflict_db/conflict_db.h (create_clause)
          src/transition/T_system.cpp (copy_in_past, summarize_variables)
          src/transition/transitioned.cpp (add_idle_transitions,
                Proto_transition ctor) :
                        All the same: removed time from an argument list
                        or a call.

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Implemented prototype implementation of mapping clause->component.
        * src/readers/l2run/l2run.cpp (includes): added readers/clause.h
                (comments before hash_l2rvar): added
                (find_variable): made static
                (hash_tsys_clause, clause_to_component, whence_clause,
                 print_all_whence): added
                (l2run_listener::created_clause): added 2 versions
                (run_system): added check for 'whence' command

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed listener messages created_clause and created_proposition.
        * include/tms/ptheory.h (create_clause, create_proposition):
                made virtual
        * include/tms/ltms.h (create_clause, create_proposition): added
        * src/tms/ltms.cpp (create_clause, create_proposition): added

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/variable.h (has_debug): added

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Created mechanism for associating why a clause was created with
        the clause.
        * include/readers/to_t_system.h (class tms_listener,
                internal_tms_listen) : added
        * include/readers/to_t_system_listener.h (created_clause): added
        * src/readers/to_t_system/to_t_system.cpp (class tms_listener): added
                (ctor): protect listener_ with defines
                (write): create & destroy internal_tms_listener if needed
                (createVariable, expandClause): deal with internal_tms_listener

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/to_t_system.h (set_listener): protected by
                 DISABLE_TO_T_SYS_LISTEN

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/ltms.h
          src/tms/ltms.cpp (add_summary_clause, add_support) : removed;
                these are for the old truncate algorithm.

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/to_t_system_listener.h : added
                Should have been added last night.

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/L2_file.h (dbg_*): clarified comment
                (dbg_clauses_, dbg_clauses()): added
                (allocClauses): added dbg argument
        * src/readers/L2_file.cpp (allocClauses): added dbg arg, store it

        * src/readers/from_l2/from_l2.cpp (parse_clauses),
          src/readers/from_xmpl/from_xmpl.cpp (read) : pass dbg arg to
                allocClauses
        * src/readers/to_l2/to_l2.cpp (print_clauses) : check dbg_clauses()

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.cpp (alloc_and_zero): added
                (alloc*): use alloc_and_zero so we don't forget to set the
                        count, alloc the array, or zero it out.  I had
                        forgotten the last one, which caused problems if a
                        parse error occured.

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added some support for debugging information for constraints
        (clauses other than mutex clauses).

        * src/readers/format.txt (clauses): added formatting for debugging info

        * include/readers/clause.h (L2rClause::toL2file): made virtual,
                        added bool argument whether to print debug info
                (L2rClause::has_debug): added
                (class dbg_L2rClause): added
        * src/readers/from_l2/from_l2.cpp (parse_clauses): parse debug info
                and create dbg_L2rClause if it's included
        * src/readers/from_xmpl/from_xmpl.cpp (find_or_create_clause):
                create dbg_L2rClause instead of L2rClause
        * src/readers/from_l2/from_l2.cpp (print_clauses): with debug info,
                name is 'dbg_clauses' ; print with debug info if included

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (includes): added cbfs
                (initialize_system): add arg for number of start states,
                        create start variable appropriately ;
                        name of start variable is "state", values are "s%d"
                (run_system): take any kind of tracker and tracker_debug
                (OPT_* constants, options): added lots of options to
                        set everything I know about that's user-settable
                (main): handle those options; main change is to create
                        either a CBFS_ or Cover_tracker.

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/assignable.cpp (ctor)
        * src/tms/ltms_debug.cpp (set_proposition_name) : fixed call to
                L2_assert must throw an L2_error, not const char* or MBA_string

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/options.cpp (find_long_option): fixed bug if we had
                an option whose name started the name of another option

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2run/l2run.cpp (hash_l2rvar, reader2var, find_variable,
                        class l2run_listener): added
                (includes): added to_t_system_listener, removed strstream
                (initialize_system): use indices, not names
                (OPT_HELP): fixed message about xmpl
                (writing to t_system): add a listener to writer

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/readers/to_t_system.h (listener_, set_listener): added
        * src/readers/to_t_system/to_t_system.cpp (record): added
                (ctor): initialize listener_ to null
                (createVariable): record to the listener

2000-12-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Moved weights to Assumption class from Assignable.
        * include/conflict_db/assignable.h (ctor): no longer takes weights
        * include/conflict_db/assignment.h (friend): added Assumption
                (ctor): default weight is zero
        * include/conflict_db/assumption.h (ctor): moved to cpp file

        * src/conflict_db/assignable.cpp (ctor): no longer takes weights;
                all code related to weights moved to Assumption ctor
        * src/conflict_db/assumption.cpp (ctor): added

        * src/conflict_db/conflict_db.cpp (create_assignable): don't
                pass in bogus weights

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/options.cpp (next_option): now handle short and
                long option arguments as per the normal Unix behaviour

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/xmpl2l2/xmpl2l2.cpp (OPT_HELP, OPT_OUTPUT, options,
                printUsage): added
                (main): rewritten to add the -o and -h options.

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (t_sys_record): added
                (ctor): initialize listener_ to 0
                (copy_in_past): Assignable and Dependent version record
                        the new variable with the listener

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignable.h (get_conflicts): return const-ref
                instead of copy
                (is_assigned, is_current): made const

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system_debug.h (listener): removed since
                there's no implementation

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Make the C_db listeners do something, and use them.  Massive
        speedup in progress (but Jim will make that obsolete soon anyway),
        but more important, the debuggers depend less on the variables
        having strings.

        * include/conflict_db/conflict_db_debug.h (includes): added
                        MBA_string, hash_table
                (var_has_name, get_var_name, find_variable, set_var_name,
                 remove_var_name, Var_iterator, Name_iterator, name2var,
                 var2name): added

        * src/conflict_db/conflict_db.cpp (find_variable): pass to
                debugger. This causes a 33% speedup.
        * src/conflict_db/conflict_db_debug.cpp
                (created_variable): make the name/var association
                (destroying_variable): destroy the association
                (ctor): initialize name2var and var2name
                (assign, unassign): use find_variable, and some style fixes
                (var_has_name, get_var_name, find_variable, set_var_name,
                 remove_var_name): added
        * src/transition/T_system_debug.cpp (find_at_timestep): use
                        superclass find_variable
                (variable_time_iterator): style fixes, use superclass
                        find_variable

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added Conflict_db_listener and T_system_listener ; use
        DISABLE_CDB_LISTEN and DISABLE_T_SYS_LISTEN to disable them.
        Note: these listeners don't do anything yet, and the T_system
        one doesn't even get invoked yet.

        * include/conflict_db/conflict_db.h (set_listener, listener_): added
        * include/conflict_db/conflict_db_listener.h : added
        * include/conflict_db/conflict_db_debug.h (class Listen_impl): added

        * include/transition/T_system.h (set_listener, listener_): added
        * include/transition/T_system_listener.h : added
        * include/transition/T_system_debug.h (class Listen_impl): added
                (ctor): moved definition to cpp file

        * src/conflict_db/conflict_db.cpp (cdb_record): added
                (ctor): initialize listener_
                (insert_variable, destroy_variable): record with listener
        * src/conflict_db/conflict_db_debug.cpp (includes): added
                        conflict_db_listener.h
                (class Listen_impl): added
                (ctor): set the db's listener
        * src/transition/T_system_debug.cpp (includes): added
                        T_system_listener.h
                (class Listen_impl): added
                (ctor): moved from header; set t_sys listener

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/ltms_debug.h
          src/tms/ltms_debug.cpp (line_size): removed

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/testmake : removed

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added support for truncating conflicts, probable fix for PR1289

        * doc/L2_refman/truncate.html (Algorithms): added
                truncating conflicts
                (Time Complexity): added bogus analysis of truncating
                conflicts -- assume other stuff dominates.

        * include/conflict_db/conflict_db.h (get_conflicts): moved,
                        changed return type to ConflictsType
                (ConflictsType): added
                (begin_conflicts, end_conflicts): updated return type
                (destroy_conflict): added
                (destroy_variable): added todo comment
                (conflicts): changed type to ConflictsType
        * src/conflict_db/conflict_db.cpp (destroy_conflict): added

        * include/transition/T_system.h (summarize_variables,
                summarize_conflicts, new_conflicts): added
        * src/transition/T_system.cpp (remove_old_variables): changed comment
                (conflict_is_old): added
                (remove_old_variables): added removing old conflicts
                (summarize): calls summarize_*
                (summarize_variables): renamed from summarize
                (summarize_conflicts): added
                (create_new_start_state): don't clear the list
                (install_new_start_state): added installing new conflicts,
                        clear the lists

        * src/transition/tracker.cpp (truncate): limit the number of
                candidates, as used to happen

2000-12-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp (many,many,many): un-inlined code to
                find an exception class and throw an exception; I missed
                these instances in 2000-12-02

2000-12-18  Shirley Pepke  <spepke@arc.nasa.gov>

	* include/opsat/opsat.h: defined cutoff_weight accessors
	* include/opsat/cbfs_tracker.h: added search parameter accessors

2000-12-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignable.h (dtor): added
                (assignments, conflicts): added comments about destruction
        * src/conflict_db/assignable.cpp (dtor): added destroying
                all assignments

2000-12-18  Shirley Pepke  <spepke@arc.nasa.gov>

	*src/reatime_api/posix/livapi_rt_debug.cpp: fixed premature exit
		of i/o stream thread by waiting for queue to signal
		finished in destructor
	*src/test/rtapi.cpp: removed bug i/o bug workaround since bug is
		fixed

2000-12-15  Shirley Pepke  <spepke@arc.nasa.gov>

	*src/test/rtapi.cpp: Can now set both input scenario file name
		and search parameters on command line of l2test-rt
		(bug fix)

2000-12-15  Scott Christa  <schrista@arc.nasa.gov>

        * include/mba_utils/resource.h: Replaced the dynamic memory
                allocation with a local variable.
        * include/opsat/binaryheap.h: Uncommented the 'delete' operators
                to free up dynamic memory allocation.

2000-12-14  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (--with-Wall): renamed to --without-Wall since it's
                the default
                (--with-Wall, --with-Werror, --without-warnings): removed
                    gcc-only part of the message since it doesn't add anything
        * configure : regenerated

2000-12-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        Added LTMS_listener ; use define DISABLE_LTMS_LISTEN to disable it.
        * include/tms/ltms_listener.h : created
        * include/tms/ltms.h (forward-declare): class LTMS_listener
                (ctor): init listener to none
                (set_listener): added
                (listener_): added
        * src/tms/ltms.cpp (includes): conditionally added ltms_listener
                (ltms_record): added
                (destroy_clause, destroy_prop): added call to listener

        * include/tms/ltms_debug.h (class Listen_impl, friend): added
                declarations.
        * src/tms/ltms_debug.cpp (includes): added ltms_listener
                (LTMS_debug::Listen_impl): added
                (ctor): set the listener -- TODO: memory leak currently
                (stats): added printout of # props debugger keeps
                (find_proposition): if not found, print class@address

2000-12-14  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed 2000-12-07  James Kurien <jkurien@arc.nasa.gov>, the
        prop->name HT.  Seems to speed the regression tests up by about
        3-5% by using the ptr as a hash function (not hashpjw on the string
        of the ptr in hex).
        * include/tms/ltms_debug.h (Name_ht_type): changed key to prop*
                (ctor): moved to cpp file
        * src/tms/ltms_debug.cpp (hash_prop_ptr): added
                (ctor): moved from header file

2000-12-13  James Kurien  <jkurien@arc.nasa.gov>
       * src/livdll/livdll.cpp: now prints out args passed to L2 engine

2000-12-13  James Kurien  <jkurien@arc.nasa.gov>

	* include/conflict_db/assumption.h,
	  include/conflict_db/variable.h,
	  include/transition/T_system.h,
	  include/transition/transitioned.h
	  src/livdll/livdll.cpp,
  	  src/transition/T_system.cpp
	  src/transition/transitioned.cpp:
	  Progression of transition constraints now uses
	  variables and indices rather than string names of
	  variables and values.

	* src/conflict_db/Makefile.in,
	  src/conflict_db/assumption.cpp: Added

	* src/transition/T_system_debug.cpp
	  include/transition/T_system_debug.h :
	  Changed the way transitions are printed out

2000-12-13  Shirley Pepke  <spepke@arc.nasa.gov>

	*cpp/bot.mk: installs share/rti_user in the user workspace
	*src/test/Makefile.in: added userfcns.cpp and userfcns_debug.cpp
		as DATATARGETS
 	*src/test/l2test-rt.mk.in: various changes to compile userfcns.cpp
		and userfcns_debug.cpp in user workspace
	*src/realtime_api/userfcns.cpp,userfcns_debug.cpp: moved to
		src/test/rti_user (temporary fix only)

2000-12-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/tracker.cpp (MIN_HISTORY_LENGTH): decreased to 1

2000-12-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (tags-links): fixed rule so we don't die if the last
                link command fails

2000-12-11  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (remove_old_variables, summarize):
                assume ordering of variables by time.  This reduces
                the number of variables we have to look at.  I could still
                do better by storing the start of the horizon and the start
                of the created variables.

2000-12-08  James Kurien  <jkurien@arc.nasa.gov>
	* src/tms/ltms_debug.cpp:  Removed infinite loop from << method.

2000-12-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/Makefile.in : updated the comments

2000-12-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system_debug.cpp (parse_cmd): added oldest-time
                (listener_usage): added oldest-time

2000-12-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        The promised more intelligent fix:
        * src/transition/T_system.cpp (summarize): reverted previous change
                (remove_old_variables): set oldest_timestep to the timestep
                        of the oldest variable not being removed

2000-12-08  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/transition/T_system.cpp (summarize): added setting
                oldest_timestep, which should close PR 1281 -- although
                this should be done more intelligently later.

2000-12-08  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h (truncate_history): removed --
                        it's no longer used as of 2000-12-01.
        * src/transition/T_system.cpp (truncate_history): removed

2000-12-08  Shirley Pepke <spepke@arc.nasa.gov>

	* src/test/rtapi.cpp: added usage and argument checking

2000-12-07  Shirley Pepke <spepke@arc.nasa.gov>

	* src/rtapi.cpp: instantiates debug liv object (temp necessary)
	* include/enumapi.h,time_delays.h: moved to src/test
	* src/test/l2test-rt.mk.in: added optional RTI_USER_INCLUDE directory var
	* src/realtime_api/livapi_rt.cpp, livapi_rt_debug.cpp: uncommented
		Will's uncommunicated commenting of necessary function calls
		(I love working in circles)
	* src/liv_utils/api_gen.cpp, api_scr.cpp: instantiate debug liv object

2000-12-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/Makefile.in (LIBINSTALL): removed
                This fixes L2-engine-config/1280, but it means
                a 'make install' in src/test doesn't install the
                libraries that the binaries need.

2000-12-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (liblivrti.so): added rule to recur into
                src/realtime_api
        * src/test/Makefile.in (L2TEST_RT_C, L2TEST_RT_MAKE): added
                (CPPFLAGS): removed ../../include/test
                (L2TEST_RT_O): removed
                (l2test-rt): changed rule: now uses l2test-rt.mk
                (DEPS_L): added -llivrti
                (l2test-rt.mk.in): don't add top/bot.mk

2000-12-07  James Kurien <jkurien@arc.nasa.gov>
	Created table for proposition->name mapping,
	getting rid of linear search.
	* include/tms/ltms_debug.h,
	 src/tms/ltms_debug.cpp :
	  Proposition->name table is currently
	implemented with mba_utils/hash_table.h, which
	only allows string keys.  Currently coverting pointers
	to strings [ugly, yes).  This will get the
	build going, and I will implement a proper table
	look up.  mba_utils causes a conflict with the STL
	map class, or that could be used in the debugger.

2000-12-07  Benoit Hudson  <bhudson@arc.nasa.gov>
        Put RTI in its own library.
        * src/realtime_api/Makefile.in (TARGET, LIBTARGET): added
                (DEPS): added.  These changes create a new library.
        * src/test/l2test-rt.mk.in : essentially rewritten
        * configure.in (enable-rti): don't change libs; add to NOLIB
        * configure: regenerated
        * BUILD (enable-rti): updated to talk of the new library, and that
                the option doesn't change livdll.

2000-12-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (FEATURE_DIRS, NOLIB_FEATURE_DIRS): no longer
                AC_SUBST'd
        * configure: regenerated

2000-12-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2strip/.cvsignore ,
          src/readers/l2run/.cvsignore ,
          src/readers/xmpl2l2/.cvsignore ,
          src/realtime_api/posix/.cvsignore ,
          src/livdll/.cvsignore : added

2000-12-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (enable-l2reader): removed
                (enable-l2run, enable-l2strip, enable-xmpl2l2): added

2000-12-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/livingstone_debug.h (ctor): reordered
                initializers

2000-12-04  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers: reordered the directory.  Now, each file is in
                its own directory so we can include just what we need.
                The include files are in include/readers.
                l2test was renamed to l2run to avoid a clash with
                src/test/.  All the source files were modified to update
                the names of variables; change l2-> to l2. b/c we switched
                to using a reference from a *const ; and change from
                official-sounding class names to ones that match the
                filename.
        * src/readers/l2run/l2run.cpp : removed capability of reading
                xmpl.

        * configure.in (enable-l2run, enable-l2strip, enable-xmpl2l2):
                added
                (disable-old-reader); moved to be with the other reader code
                (enable-l2reader): removed
        * configure: regenerated

2000-12-04  James Kurien <jkurien@mail.arc.nasa.gov>
        * include/conflict_db/conflict_db_debug.cpp :
	  Made db (the db being debugged) protected so
	  subclass debuggers can peek at it.
	* src/transition/tracker_debug.cpp:
          Cleaned up the output format of dump method

2000-12-04  James Kurien <jkurien@mail.arc.nasa.gov>
	* src/opsat/cbfs_tracker_debug.cpp
	  src/transition/tracker_debug.cpp:
	  Moved "extend" command into cbfs tracker, since
	  the cover tracker doesn't support it.

2000-12-04  Scott Christa  <schrista@arc.nasa.gov>

        * include/livingstone/livingstone_debug.h: Fixed a memory leak by
                replacing the dynamic memory allocation with a local
                variable.

2000-12-02  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2test.cpp (main): fixed check for an extension;
                I was triggering on a relative path ('../../tests/cb/cb')
                and thus refusing to load xmpl.

2000-12-02  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/l2test.cpp (main, run_system): create
                the debugger before parsing, pass it in to run_system;
                required b/c of hack with debugger in Conflict_db
        * src/readers/from_xmpl.cpp (includes): added math.h and stdlib.h ,
                        removed T_system ; this file is now independent
                        from core L2
                (convert_to_rank): added, copied from T_system_reader
                (startElement): call convert_to_rank

2000-12-02  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/livdll.cpp
            (throw_error): added
            (vsnprintf): added for the sake of Win32
            (Java_LivingstoneEngine_assignJNI,
             Java_LivingstoneEngine_unassignJNI,
             Java_LivingstoneEngine_getPropValueJNI,
             Java_LivingstoneEngine_mapOverPropositionStringsJNI,
             Java_LivingstoneEngine_mapOverAttributeNamesJNI,
             Java_LivingstoneEngine_getTimeStepJNI,
             Java_LivingstoneEngine_mapOverAttributeNamesJNI,
             Java_LivingstoneEngine_listenerUsageJNI,
             Java_LivingstoneEngine_parseCmdJNI,
             Java_LivingstoneEngine_justifyPropositionJNI,
             Java_LivingstoneEngine_variableValueAtTimeJNI,
             Java_LivingstoneEngine_printPropClausesJNI
                ) : fixed calls to get_variable_value, fixed memory
                leak of 150 bytes in almost every function for
                error-reporting and moved common code to throw_error,
                removed a few redundant checks (now that truncated
                variables are removed), use MBA_string

2000-12-02  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system_debug.cpp (print_variable_values):
                take Conflict_db_debug by reference; we were deallocating it!


2000-12-02  Benoit Hudson  <bhudson@arc.nasa.gov>
        Unsuccessful attempt to fix bug with 'values' command, under
        the assumption we were deallocating a string incorrectly.

        * include/conflict_db/conflict_db.h (get_variable_value): removed
        * include/conflict_db/conflict_db_debug.h (get_variable_value):
                return MBA_string
        * include/tms/ltms_debug.h (get_prop_name): return MBA_string
        * src/conflict_db/conflict_db.cpp (get_variable_value): removed
        * src/conflict_db/conflict_db_debug.cpp (get_variable_value):
                return MBA_string, assert we find the '='
        * src/tms/ltms_debug.cpp (prop_contains_string, print_proposition):
                fix call to get_prop_name
        * src/transition/T_system.cpp (find_previous_proposition):
                fix call to get_prop_name

2000-12-01  Benoit Hudson  <bhudson@arc.nasa.gov>
        New truncate algorithm.  Documentation upcoming, and optimization
        as well.

        * include/conflict_db/candidate.h (truncate) : added
        * src/conflict_db/candidate.cpp (truncate): added

        * include/conflict_db/conflict_db.h (destroy_variable): added
                (variables): now private
        * src/conflict_db/conflict_db.cpp (destroy_variable) : added

        * include/transition/T_system.h (get_horizon): added
                (summarize, remove_old_variables): added
                (constrain_from_start_state_value, remove_theory): removed
        * src/transition/T_system.cpp (summarize, remove_old_variables):
                        added
                (constrain_from_start_state_value, remove_theory): removed

        * include/transition/tracker.h (truncate): changed semantics
                of the argument
        * src/transition/tracker.cpp (truncate): rewritten
                (truncate_candidate): removed
                (truncate_if_needed): call truncate with horizon, not depth

        * src/transition/tracker_debug.cpp (parse_cmd): added optional
                horizion argument to truncate
                (listener_usage): added documentation of truncate

2000-12-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/ltms_debug.cpp (print_clause): fixed printing '!'
                in front of positive props

2000-12-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/conflict_db_debug.cpp (get_variable_value):
                remember to strip off the 'var=' part of the proposition


2000-12-01  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/conflict_db.h (VarHtType, varHt): removed
                (VariablesType, variables): added
                (begin_variables, end_variables, size): use new names
                (insert_variable): removed definition, removed arg name,
                        made private -- only Variable::Variable can call it

                unrelated:
                (find_variable, find_assignable): use const MBA_string&

        * src/conflict_db/conflict_db.cpp (create_assumption): don't insert
                        the new variable
                (find_variable): use const MBA_string&, iterate through the
                        list rather than doing an HT lookup (bad!)
                (find_assignable): use const MBA_string&
                (insert_variable): moved from header; removed name argument,
                        append to variables list
                (restore, save, reset_datum): use VariablesType
        * src/conflict_db/conflict_db_debug.cpp (print_all_variable_values):
                use VariablesType
        * src/conflict_db/variable.cpp (ctor): don't pass name in
        * src/transition/T_system.cpp (remove_theory): use VariablesType
        * src/transition/T_system_debug.cpp (time_variable_iterator):
                use VariablesType

2000-11-29  James Kurien  <jkurien@arc.nasa.gov>

	*	src/conflict_db/domain.cpp,
		include/conflict_db/domain.h get_value_name(index) :
		Added ability to look up the name of the iTh member
	        of a domain.
	* 	include/conflict_db/assignable.h
		include/conflict_db/assignment.h
		include/conflict_db/variable.h
		src/conflict_db/assignable.cpp
		src/conflict_db/assignment.cpp
		src/conflict_db/conflict_db_debug.cpp
		src/livdll/livdll.cpp
		src/livdll/livdll.plg
		src/transition/T_system.cpp :
	Assignments no longer have names.  One index into the domain of
	the assignments variable to find the name of the value an
	assignment represents.

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (get_value): added
        * src/conflict_db/variable.cpp (get_value): added

        * src/conflict_db/conflict_db_debug.cpp (get_variable_value):
                use Variable::get_value

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/conflict_db.h (variables): added
                (insert_variable): add to variables as well

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/conflict_db.h (find_domain): removed
        * src/conflict_db/conflict_db.cpp (find_domain): removed,
                fixed 'depricated' s.b. 'deprecated'

        * src/transition/T_system_reader.cpp (create_attribute_from_mof):
                call find_domain on the debugger, not the t_system

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/conflict_db_debug.cpp (get_variable_value):
                use variable's propositions to avoid a string lookup

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (begin_props, end_props):
                renamed from props_% to match the naming convention
        * src/transition/T_system.cpp (splice): fixed call to above

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/conflict_db.cpp (get_variable_value):
                just pass the call off to the debugger

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h ,
          src/transition/T_system.cpp (convert_to_rank): removed
        * src/transition/T_system_reader.cpp (convert_to_rank): moved
                from T_system

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (props_size, props_begin,
                props_end): added
        * src/transition/T_system.cpp (splice): use new variable
                functions to obviate need to do a lookup by string

2000-11-30  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (get_prop): added
        * src/conflict_db/variable.cpp (get_prop): added -- but it's
                brain-dead: a linear search!
        * src/transition/T_system.cpp (install_new_start_state):
                call get_prop instead of synthesizing the name and looking
                it up

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/variable.h (friend operator <<): no more mister
                        nice guy
                (get_name const) : added
        * src/conflict_db/variable.cpp (operator <<): use get_name

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/assignable.cpp (ctor): d'oh!  A typo slipped in...

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (all_props): made protected,
                commented the field
        * src/conflict_db/assignable.cpp (ctor): put checks for correct
                        sorting into an ifndef NDEBUG ; changed checks for
                        correct length to be based on size() call, which
                        looks cleaner, is probably slower ; use the
                        list of propositions from Variable rather than
                        a find_proposition.

2000-11-29  Scott Christa  <schrista@arc.nasa.gov>

        * include/transition/tracker_reader.h: Fixed a memory leak by
                replacing the dynamic memory allocation with a local
                variable.
        * include/livingstone/livingstone.h: Modified the class constructor
                to work with the changes in the Tracker_reader class.

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>
        Moved remove_theory to T_system and variables from LTMS.

        * include/conflict_db/variable.h (includes): removed
                include of domain.h, substituted forward-declarations
                (leave_tms): added
                (all_props): added (but subclasses don't use it yet)
        * src/conflict_db/variable.cpp (constructor): removed local
                all_props -- use member var instead
                (leave_tms): added

        * include/tms/ltms.h (remove_theory): removed
                (add_summary_clause, destroy_props): updated comment
        * src/tms/ltms.cpp (remove_theory): removed

        * include/transition/T_system.h (remove_theory): added
        * src/transition/T_system.cpp (truncate_history): call
                T_system::remove_theory instead of calling
                LTMS::remove_theory
                (remove_theory): added

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (CLEANFILES): added
                (clean): remove the CLEANFILES, not ./lib

2000-11-29  James Kurien  <jkurien@arc.nasa.gov>
      * include/conflict_db/conflict_db_debug.h,
 	include/conflict_db/domain.h,
  	src/conflict_db/conflict_db.cpp,
 	src/conflict_db/conflict_db_debug.cpp,
 	src/conflict_db/domain.cpp

	: Removed name data member and get_name() method from the
 	domain class.  We can still look up a domain by name via
 	a hash table in the conflict_db.  In flight, we should be
 	able to specify that a variable is of the iTh domain without
 	needing its name, so the hash table can eventually
        be moved to the debugger.

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/T_system.cpp (convert_to_rank(float)) :
                changed algorithm to be less ad-hoc :
                    give an error if p>1,
                    don't just cast to round: remember to add something
                        to avoid numerical problems (like around 3)

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/ptheory_reader.cpp
          include/tms/ptheory_reader.h
          include/tms/theory_reader.h
          src/test/test-db.cpp
          src/test/tms-test.cpp  : removed

        * src/tms/Makefile.in (OBJECTS): removed ptheory_reader.o

2000-11-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/ltms.h (remove_clause, add_clause): renamed to ...
                (take_out, put_in): clearer names
                also reindented a section that had lost all indentation
        * include/tms/ptheory.h (remove_clause, add_clause): renamed to ...
                (take_out, put_in): clearer names

        * src/tms/ltms.cpp (add_clause, remove_clause): renamed to
                (take_out, put_in)
                (put_in, destroy_clause): renamed a function call
        * src/tms/ptheory.cpp (add_clause, remove_clause): renamed to
                (take_out, put_in)
                (create_clause, add, remove): renamed a function call


2000-11-29  James Kurien  <jkurien@arc.nasa.gov>
	* include/opsat/binaryheap.h,
	  include/opsat/agenda_types.h:
	  Made < and > operators const, to agree with
	  < and > operators in Conflict_db/assignable.h
     	  This fixes compilation on pickier compilers than gcc.

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * .cvsignore : removed libtool; added g++ and gcc ;
                added installation directories (bin, lib, ...)

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/.cvsignore
          src/cover/.cvsignore
          src/liv_utils/api_gen/.cvsignore
          src/liv_utils/api_scr/.cvsignore
          src/mba_utils/.cvsignore
          src/opsat/.cvsignore
          src/readers/.cvsignore
          src/realtime_api/.cvsignore
          src/test/.cvsignore
          src/tms/.cvsignore
          src/transition/.cvsignore : added ; they ignore Makefile,
                and either `objects' or the targets being built


2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (Requirements): removed reference to pre-existing
                makefiles.  They're gone now.

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/conflict_db/Makefile
          src/cover/Makefile
          src/liv_utils/api_gen/Makefile
          src/liv_utils/api_scr/Makefile
          src/livdll/Makefile
          src/livingstone/Makefile
          src/mba_utils/Makefile
          src/opsat/Makefile
          src/realtime_api/Makefile
          src/test/Makefile
          src/tms/Makefile
          src/transition/Makefile
                removed from CVS; these are now generated by autoconf.


2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/livdll/Makefile.in (all, default): removed
                also removed a confusing comment.

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/tms/proposition.h (friend_begin_positive,
                friend_end_positive, friend_begin_negative,
                friend_end_negative) : added -- used in the ltms
        * include/tms/ltms.h (destroy_props): added
                (remove_theory): added todo comment
                (destroy_clause, destroy_prop): added
                (delete_clause): removed
        * src/tms/ltms.cpp (destroy_props): added
                (destroy_clause, destroy_prop): added
                (delete_clause): removed
                (remove_theory): call destroy_props

2000-11-28  James Kurien  <jkurien@arc.nasa.gov>
	* include/conflict_db/assignable.h
 	include/conflict_db/conflict_db.h
 	include/conflict_db/conflict_db_debug.h
 	src/conflict_db/assignable.cpp src/conflict_db/conflict_db.cpp
	src/conflict_db/conflict_db_debug.cpp
 	src/transition/T_system.cpp src/transition/T_system_debug.cpp
 	src/transition/tracker.cpp src/transition/transitioned.cpp :
	Removed string-based methods for finding an assignment from
	the assignable and conflict_db classes and put them in
	Conflict_db_debug

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignable.h (is_inconsistent, is_in_conflict,
                resolves_conflict, ): made const
                (operator<<): removed friendship with class Assignment

2000-11-28  James Kurien  <jkurien@arc.nasa.gov>
    * include/tms/ltms_debug.h:
	Fixed constructor to not use "static_cast", which
	was causing a core dump under gcc.


2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/slist.h (contains): made const

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>
        * include/conflict_db/assignment.h (ctor): take string by const ref
                (name): changed to be actual MBA_string and not reference
                (name, weight): made private
        * src/conflict_db/assignment.cpp (operator<<) : use accessors
                instead of directly reading the ivars

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/assignment.h (ctor): reordered initializers

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (Requirements: gcc): removed option (a), to use
                    the gcc in ~bhudson/bin -- it's no longer needed
                    since the makefiles add the rpath to libstdc++
                (Requirements: gmake): got rid of useless and probably
                    inaccurate detail
                (Using it): got rid of references to test_debug ;
                    got rid of instructions to build it seperately since
                    it's automatically built.
                (enable-apigen, enable-rti, disable-jni,
                 disable-exceptions, enable-l2reader,
                 disable-old-reader) : describe effect on library
                (with-xerces): 'should' became 'must'

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * bot.mk (DATAINSTALL): added
                (datadir/% rule): added
                ([un]install): depend on [un]install-data
                ([un]install-data): added
        * src/test/Makefile.in (install, data-install, uninstall,
                data-uninstall, rtapi.cpp rules,
                datadir/l2test-rt.mk rule): removed
                (DATATARGET): added

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * bot.mk (DEF_CLEANFILES): added `objects'

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (NOLIB_FEATURE_DIRS): added
                (enable_apigen, enable_l2reader): use NOLIB_FEATURE_DIRS
                        rather than FEATURE_DIRS
                (SUBDIRS): added
                Also added comments of FEATURE_DIRS et al.
        * configure: regenerated

        * Makefile.in (BIN_TARGETS, BIN_INSTALL, DATA_TARGETS,
                DATA_INSTALL): removed
                (SUBDIRS): changed hard-coded src/test to configure-time
                        @SUBDIRS@
                (LIB_INSTALL): added
                (l2test targets, rtapi.cpp target, l2test-rt.mk targets):
                        removed
                ([un]install): depend on [un]install-here
                ([un]install-here): added
                (install): recur into $(SUBDIRS)
                (tags): echo the ln -s line before actually doing it

        * DEVELOPERS: updated to reflect new info

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/Makefile.in (uninstall, data-uninstall): added

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/Makefile.in (CLEANFILES): removed l2test from list,
                since it's automatically added by virtue of being the TARGET

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/Makefile.in (LIBTARGET, TARGET, DEPS): removed

2000-11-28  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/cover/cover.cpp (printConflicts): #if 0'd out

2000-11-24 James Kurien  <jkurien@arc.nasa.gov>
 * include/conflict_db/conflict_db.h,
    include/tms/ltms.h,
    include/tms/ltms_debug.h,
    include/tms/proposition.h,
    include/tms/ptheory.h,
    include/tms/theory.h,
    src/conflict_db/conflict_db.cpp,
    src/test/tms-test.cpp,
    src/tms/ptheory.cpp,
    src/tms/ptheory_reader.cpp,
    src/transition/T_system.cpp :
	 Removed name member from Conflict_db and tms, since it is not used.
	 Removed unneeded inclusions of MBA_string.h

2000-11-24 James Kurien  <jkurien@arc.nasa.gov>
 * include/conflict_db/conflict_db.h,
 	include/tms/ltms.h,
	include/tms/ltms_debug.h,
	include/tms/proposition.h,
	include/tms/ptheory.h,
	include/transition/T_system_debug.h,
	src/conflict_db/assignable.cpp,
	src/conflict_db/conflict_db.cpp,
	src/conflict_db/conflict_db_debug.cpp,
	src/conflict_db/variable.cpp,
        src/livdll/livdll.cpp,
        src/tms/ltms_debug.cpp,
        src/tms/proposition.cpp,
        src/tms/ptheory.cpp,
        src/transition/T_system.cpp,
        src/transition/T_system_debug.cpp:
	Removed the use of strings (both MBAsting and char*)
	from the LTMS, with the exception of the LTMS_debug class.
	Propositions no longer have string names.  The LTMS_debug
	class can be used to associate a name with a prop.  This
	is currently done for all props created by the Conflict_db.
	We temporarily have a dependence of the Conflict_db
	upon the Conflict_db_debug class, which inherits the
	LTMS_debug class, so we can continue to find props by
	their names.  The need to do so should be eliminated
	before flight.


2000-11-20  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (DATA_TARGETS, DATA_INSTALL): added, with rules for each
                (install): added prereq DATA_INSTALL

2000-11-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/l2test-rt.mk.in: added
        * src/test/Makefile.in (install): depend on data-install
                (data-install): added
                (datadir/rtapi.cpp): added
                (datadir/l2test-rt.mk, l2test-rt.mk): added
        * top.mk (datadir): added

2000-11-17  James Kurien  <jkurien@arc.nasa.gov>

        * include/transition/clause.h, ltms.h, proposition.h:
	  made a number of methods that can only be called by
	  the ltms protected rather than public, to clean up the
	  public API.  Made ltms a friend of clause and proposition.

2000-11-15  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/tracker_debug.h (ctor): reordered
                to avoid a warning

2000-11-08  James Kurien  <jkurien@arc.nasa.gov>
	* include/tms/LTMS_debug.h, src/tms/LTMS_debug.cpp,
	  src/tracker/tracker_debug.cpp :
 	 Added an iterator in the LTMS debugger that applies
	 a callback object to every clause.  Reimplemented
	 cclauses as an example of how to use the iterator.
	 In tracker_debug, dump() was changed to use
	 the iterator.  dump() still needs work.

	* src/conflict_db/conflict_db_debug.cpp,
	  include/conflict_db/conflict_db_debug.h:
 	  Added a method to pretty print an assignable variable
 	  and its current assignment, since we often do that.

2000-11-07  Benoit Hudson  <bhudson@arc.nasa.gov>

        * Makefile.in (src/test/l2test, ${bindir}/l2test):
                made phony to force recurring into them at
                the top-level.

2000-11-06  James Kurien  <jkurien@arc.nasa.gov>

	* include/*/*debug.h and  src/*/*debug.c :
	Made it so each debugger inherits from the debugger
	for the system layer below it, allowing each debugger
	to access the functionality of the lower level debuggers.

2000-11-06  James Kurien  <jkurien@arc.nasa.gov>

        * src/test/test.dsp  and src/livingstone/livingstone.dsp:
	  Ensured that ENABLE_ORIGINAL_XMPL_READER is defined
	  when compiler under Windows, so XMPL reader on Windows
	  is compiled.


2000-10-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD (enable-l2reader, disable-old-reader): added
                without-warnings et al: fixed typo

2000-10-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (--disable-old-reader): added
        * configure: regenerated
        * include/transition/T_system_reader.h
          src/transition/T_system_reader.cpp:
                put all the code in ifdefs to allow disabling it

2000-10-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/Makefile.in (l2test_files): use l2test.o rather
                than l2test.cpp
        * src/readers/l2test.cpp (include stdlib): added; how did it
                compile before?

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>
        Came up with an obvious but much better framework for intialization
        than what I'd implemented earlier today:
        * src/readers/format.txt (initial): added
        * src/readers/Simple.l2 Simple.l2s (initial): added

        * src/readers/variable.h (initial_, setInitial, intitial()): added
        * src/readers/to_l2.h (print_initial): added
                (include common.h): moved inside ifdef
        * src/readers/to_l2.cpp (write): added call to print_initial
                (print_initial): added
        * src/readers/from_xmpl.cpp (startElement): added
                support for <assign eq="var=value"> tag
                (read): added reading '.ini' file ;
                        fixed an inappropriate variable name (copy-paste bug)
        * src/readers/from_l2.h (didInitial_, parse_initial,
                was_initial_parsed): added
                (ctor): initialize didInitial_ false
        * src/readers/from_l2.cpp (section_names): added initial section ;
                put the long names in ifdef debug sections
                (read): added case for initial
                (parse_initial): added

        * src/readers/l2test.cpp (InitialAssignment, ini, num_ini, setup_ini,
                get_ini, init_from_xmpl, init_from_l2): removed
                (initialize_system): read from l2, not the ini junk
                (main): removed call to init_from_{xmpl,l2}


2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.h (getVar_friend): return 0 if not found

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/option.{cpp,h}: created;
                it provides a option parser for mainlines, much like
                getopt
        * src/readers/l2test.cpp (init_from_l2):
                only print a piece of info if verbose
                (initialize_system): same; needs to get L2 as well for that
                (OPT_*, options, noptions): added
                (main): added options parsing using option; added printing
                        out the options just before running, like in the
                        original l2test
        * src/readers/Makefile.in (l2test_files): added option.o

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/.cvsignore : created

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/L2_file.h (ctor): initialize isVerbose_ to false
                (setVerbose): added
        * src/readers/from_l2.cpp (parse_enums, parse_variables,
                parse_one_transition): feretted out a few places where
                        verbose information was being printed out regardless
                        of whether it was requested

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        Added initialization files:
        * src/readers/l2test.cpp (initialize_system):
                    fixed domain_names and state_var names to match
                    what the T_system implicitely assumes ;
                    don't prompt the user; depend on the ini structure instead
                (InitialAssignment, ini, num_ini, setup_ini, get_ini,
                 init_from_xmpl, init_from_l2): added
                (main): create tracker that doesn't truncate, since that's
                        buggy ; added calls to init_from_{xmpl,l2} ;
                        put the xmpl reading in an ifdef to allow disabling it ;
                        moved call to initialize_system



2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        Added support for variable=variable constraints, which is necessary to
        deal with modules and most components (just not the Simple one I'd
        tested on).
        * src/readers/format.txt (propositions):
                changed format to accomodate equalities and inequalities
                between variables
        * src/readers/Simple.l2 Simple.l2s (propositions):
                updated to new format
        * src/readers/L2_file.h (forward-declare): added PropVar{Value,Var}
                (*_props_): added fields for equalities and inequalities
                        (as 'same' and 'diff' to avoid typos)
                (constructor): initialized those fields to zero ;
                        also initialized all counts to zero, fixing a bug
                        in the destructor on illegal input
                (getProp): moved out-of-line to L2_file.cpp
                (get*Prop): added
                (getProp_friend): removed
                (n*props): added
                (nprops): take account of new fields
                (allocProps): arguments to initialize new fields
                (set{Pos,Neg}Prop): take argument as L2rPropVarValue*
                (set{Same,Diff}Prop): added
                (setProp): take account of new fields
        * src/readers/L2_file.cpp (allocProps): new arguments
                (getProp): added
                (set{Pos,Neg}Prop): take argument as L2rPropVarValue*,
                        added assertions on type
                (set{Same,Diff}Prop): added
        * src/readers/from_l2.h (parse_one_prop): added an argument
                (parse_one_transition): fixed comment
        * src/readers/from_l2.cpp (include common.h): moved inside ifdef
                (parse_one_prop): added 'equality' argument,
                        interpret second integer as var or value
                        depending on it; create appropriate
                        L2rProposition subclass.
                (parse_propositions): changed the reading of counts
                        to accomodate new format, including new
                        counts for [in]equalities ; added reading
                        [in]equalities
        * src/readers/from_xmpl.h (find_variable) : added
                flag to allow failing non-fatally
                (find_or_create_prop): changed interpretation and type
                        of argument 4
        * src/readers/from_xmpl.cpp (include common.h): moved inside ifdef
                (create_enum, find_enum_member, create_variable):
                        using new L2_error ctor
                (find_variable): only throw an exception on not found
                        if 'fatal' is set ; use new L2_error ctor
                (find_or_create_prop): arg 4 is uninterpreted, so
                        search for an enum_member or a variable that
                        it matches ; use new proposition operator ==
                (characters): don't interpret valuename
                (read): split the propositions into the 4 groups
        * src/readers/proposition.h (L2rProposition): made abstract
                by making ctor be protected; ostream functions be =0
                (L2rPropVarVar): added
                (L2rPropVarValue): added, most of the code from original
                        L2rProposition
                (operator==): added
        * src/readers/to_l2.cpp (print_propositions): added {same,diff} props
        * src/readers/to_t_system.h (include common.h): moved inside ifdef
                (ctor) out-of-line
                (domainHT, varHT, dHTit, vHTit, findVar, findDomain): added
                (expandClause): added
                (create*): made void, throwing exceptions
        * src/readers/to_t_system.cpp (include common.h): moved inside ifdef
                (hash_enum, hash_var): added
                (ctor): added
                (write): calls to create* are now void ;
                        using findVar to find the mode variables
                (createDomain, createVariable): add new object in its hash
                        table; return void
                (createBackground): potentially add several clauses by using
                        expandClause
                (expandClause): deal with equalities/inequalities
                (createTransition): return void
                (findDomain, findVar): added

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/readers/Makefile.in : rewritten to actually compile incrementally

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/conflict_db/variable.h (form_prop_name): created
                new version that takes two MBA_string and returns one

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h
          src/transition/T_system.cpp (create_present_dependent):
                now returns the new variable; needed by the reader
                (create_present_command): use the new L2_error constructor
                        to avoid strdup (not found on VxWorks)

2000-10-24  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/L2_assert.h (constructors):
                added MBA_string constructor since that's the internal
                representation anyway ; added a comment that a
                resource error for out-of-memory will likely not work
                (especially if we throw from new anyway!)

2000-10-23  Shirley Pepke  <spepke@arc.nasa.gov>

	Miscellaneous minor rtapi modifications:
	* include/realtime_api/L2_queue.h: new L2_queue interface def class
	* include/realtime_api/posix/guardedqueue.h and include/realtime_api/
		posix/guardedqueue.cpp: GuardedQueue now inherits L2_queue
		interface and DataGuard functionality has been absorbed
	* include/realtime_api/posix/dataguard.h deleted
	* include/realtime_api/posix/livingstone_dispatcher.h and src/
		realtime_api/posix/livingstone_dispatcher.cpp: GuardedQueue
		pointer member changed to L2_queue
	* include/realtime_api/userfcns.{h,cpp}: moved function definitions
		out of header file
	* src/realtime_api/Makefile.in: added userfcns.cpp

2000-10-18  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/Variable (constructor):
                fixed the problem of creating each mutex clause and its
                contrapositive ; also added some comments

2000-10-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        Squashing more warnings:
        * include/mba_utils/slist_item.h : removed a friend declaration
                that gcc sometimes warned about being useless, after
                discovering we actually never need it at all
        * src/mba_utils/hash_table.cpp (hashpjw): get rid of a warning
                about if(g=...) by computing g before using it as a
                condition

2000-10-17  Benoit Hudson  <bhudson@arc.nasa.gov>

        Rethought the new file format:
        * src/readers/reader.{cpp,h} , src/readers/reader_main.cpp ,
          src/readers/parser.{cpp,h} , src/readers/writer.{cpp,h} :
                removed
        * src/readers/L2_file.{cpp,h},
          src/readers/from_l2.{cpp,h} , src/readers/from_xmpl.{cpp,h} ,
          src/readers/to_l2.{cpp,h}   , src/readers/to_t_system.{cpp,h} ,
          src/readers/l2strip.cpp, src/readers/xmpl2l2.cpp,
          src/readers/l2test.cpp :
                added
        * src/readers/Makefile.in: entirely rewritten
        * src/readers/Simple.{l2,l2s}: regenerated using new converters
        * src/readers/clause.h (toOStream): use unsigned rather than size_t,
                (toL2file): added
        * src/readers/common.h (ENABLE_L2_VERBOSE): added,
                (ENABLE_L2_DEBUG_SECTIONS): renamed from WITH_DEBUG_SECTIONS
                (bounds_check_access): use L2_assert
        * src/readers/enumeration.h (hasDebug): changed condition
                (toL2file): added
        * src/readers/proposition.h (toL2file): added
                (parser.h): no longer included
        * src/readers/transition.h (toL2file): added
                (class dbg_L2rTransition): changed condition
        * src/readers/variable.h (toL2file): added
                (class dbg_L2rVariable): changed condition
                (parser.h): no longer included

2000-10-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        * BUILD: generalized section "Real-Time Interface" into
                "Extra features" ; thus documenting all the enable
                and with options (except --enable-l2reader)

2000-10-17  Benoit Hudson  <bhudson@arc.nasa.gov>
        * src/readers/writer.h: added

2000-10-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        Fixed all but two types of warnings:
        * include/conflict_db/domain.h
          include/conflict_db/assignment.h
          include/cover/cover_tracker.h
          include/livingstone/livingstone_debug.h
          include/tms/proposition.h
          include/transition/T_system_debug.h
          include/transition/tracker_debug.h
          include/transition/tracker_reader.h
          src/conflict_db/conflict_db.cpp
          src/tms/ptheory.cpp
          src/opsat/cbfs_tracker.cpp
          src/opsat/opsat.cpp
          src/tms/clause.cpp
          src/transition/transitioned.cpp
                Silenced warning about order of intializers in the
                constructor: changed order of initializations to match
                declaration, or vice-versa, and/or put some initializations
                in the constructor, and made sure base constructor call
                goes first.

        * include/mba_utils/resource.h (deallocate): cast the
                argument to delete[] as a char* to avoid a warning
                that void* is `not a pointer to an object'

        * include/mba_utils/slist_item.h (operator new) :
                throw bad_alloc rather than return 0, if that's legal
        * aclocal.m4 (LIV_CXX_THROW_BADALLOC): added
        * configure.in : added call to LIV_CXX_THROW_BADALLOC
        * configure: regenerated

        * include/opsat/agenda_types.h (operator new):
                throw bad_alloc rather than return 0, if that's legal;
                changed order of declarations to match initialization

        * include/tms/ltms_debug.h (constructor):
                changed order of initializations to match declaration;
                (ifdef GCC): removed
                (include list_parser): removed
                reformatted (for indentation)

        * src/conflict_db/variable.cpp (constructor):
                put most initializations in the constructor body,
                changed name of arguments to not shadow names of members,
                removed unused variables

        * src/mba_utils/Makefile.in (OBJECTS):
                removed list_parser.o as it's not actually needed for livdll
        * src/tms/ltms_debug.cpp (listener): removed unused List_parser
                variable, which was the only use of list_parser.o in the
                program;
                (print_clause): removed unused variables it_end, it_begin

        * src/transition/T_system_reader.cpp (constructors):
                reordered as above;
                (T_system_reader::expand_var_equality,
                 T_system_reader::Model_reader::endElement):
                    removed unused variables

        * src/transition/T_system.cpp (constructor): reordered;
                (cmd_enums_to_assignment, observe, obs_enums_to_assignment):
                        silenced signed/unsigned compare
                (copy_in_past): commented out unused var (there's some
                        commented-out debug code that uses it)
                (create_present_command): throw a nicer exception,
                        with the name of the error

        * src/transition/tracker.cpp (truncate): removed unused variables





2000-10-16  Benoit Hudson  <bhudson@arc.nasa.gov>
        * include/mba_utils/MBA_string.h (MBA_string(str,len,str,len),
                operator+): added Java-like concatenation with '+'

2000-10-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        Added write capability and cleaned a few things up:
        * src/readers/writer.cpp : added
        * src/readers/Makefile.in (headers): removed variable
                (parser): no longer depends on headers
                (READER_FILES): added to make l2test_reader depend on livdll
                (writer, WRITER_FILES): added target and variable
                (CLEANFILES): added writer
        * src/readers/Simple.l2 : generated by writer rather than by hand
        * src/readers/clause.h (clauseID_): added,
                (L2rClause): added id argument,
                (setID, id): added
                (format_for_tms): use props_[i] rather than prop(i)
                (toOStream_long): also print the id
                (toOStream): made void
        * src/readers/enumeration.h (setID): added
                (hasDebug): added
                (toOStream): made void
        * src/readers/format.txt (observed, modes, commands):
                format is now 1 line -- a list of varID
        * src/readers/parser.cpp (parse_one_prop, parse_clauses): added id
                argument to prop and clause constructors ; using
                toOStream_long
                (parse_var_modifier): updated to new format, which is
                        slightly simpler to parse
        * src/readers/proposition.h (propID_): added
                (L2rProposition): added id argument
                (setID, id): added
                (toOStream_long): added
                (toOStream): made void
        * src/readers/transition.h (toOStream): made void ;
                removed some inaccurate comments & dead code
        * src/readers/variable.h (setID): added
                (toOStream): made void

2000-10-16  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/readers/reader.cpp: removed some includes, replaced them
                with a minimal (?) subset ;
                removed some dead code

2000-10-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/L2_assert.h (L2_assert):
                abort rather than exit if there are no exceptions

2000-10-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/transition/T_system.h (create_transitioned): made
                public
        * src/readers/*: created
        * configure.in (--enable-l2reader): added
        * configure: regenerated

2000-10-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/livingstone_debug.h (listener):
                added check for end-of-file or read error

2000-10-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        Added a Domain constructor:
        * src/conflict_db/conflict_db.cpp,
          include/conflict_db/conflict_db.h (create_domain),
          src/conflict_db/domain.cpp,
          include/conflict_db/domain.h (Domain):
                added versions that take an MBA_string and a list of values

2000-10-13  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/transition/transitioned.cpp (TRANSITIONED_DEBUG):
                don't undefine, thus letting the makefile define it
                (Proto_transition::instantiate): fixed cerrs that were
                        broken

2000-10-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * bot.mk: removed implicit rule for compiling .cc since
                we don't have any of those; added rule for compiling
                .ii from .cpp

2000-10-05  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD: more clarifications for Irix (step 3) due to Al Globus

2000-10-03  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD: added clarifications about building on Irix.

2000-09-29  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/mba_utils/utils.h (bool typedefs): removed
        * BUILD: removed comment to manually remove the just-removed
                typedefs


2000-09-28  Shirley Pepke <spepke@arc.nasa.gov>

	Configuration script changes to build api utilities for rtapi.
	* configure.in: added "enable-apigen" option to generate Makefiles
		and build in src/liv_utils directories
	* configure: regenerated
	* src/liv_utils/api_gen: Makefile.in created
	# src/liv_utils/api_scr: Makefile.in created

2000-09-28  Shirley Pepke <spepke@arc.nasa.gov>

	*src/realtime_api/posix/livapi_rt.cpp, livingstone_dispatcher.cpp,
		guardedqueue.cpp,threadobject.cpp and
		include/realtime_api/posix/dataguard.h :
		added some error checking

2000-09-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        Fixed make in top-level not rebuilding changed files.
        * Makefile.in (phony-target, src/%/objects): new targets
                (${loc_libdir}/liblivdll.so): now depends on
                        @SRCDIR_OBJECTS@
                (SRCDIRS): renamed from LIBDIRS, now gotten entirely from
                        configure
        * configure.in (SRCDIRS, SRCDIR_OBJECTS): added
        * configure: regenerated

2000-09-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * DEVELOPERS: updated

2000-09-27  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (--with-Wall): added -Wno-non-virtual-dtor after
                -Wall
        * configure: regenerated

2000-09-26  Shirley Pepke <spepke@ptolemy.arc.nasa.gov>
	Realtime API
	*livapi_rt_debug.h, .cpp: added additional debugging output
	*livapi_rt.h, .cpp, timeout_handlers.cpp: moved timer task functionality
		to livapi files. Timeout handlers are now really just that
		(still specified in timeout_handlers.cpp)

2000-09-26  Benoit Hudson  <bhudson@arc.nasa.gov>
        SGI port
        * BUILD: added special Irix instructions.
        * configure.in (CXXRFLAG): added irix case
                (XERCES_PLATFORM): added irix case, added IRIX define
                        (since xerces otherwise is unusable)
        * configure: regenerated

2000-09-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        Added sorting variables by name in T_system_debug
        * include/transition/T_system_debug.h (print_all_variables): added
                (print_variables_at_time): renamed from
                        print_variable_values for symmetry with
                        print_variable_at_times
        * src/transition/T_system_debug.cpp (var_alpha_comp): added
                (accept_var_at_time, accept_all): added
                (print_variable_values): added
                (T_system_debug::print_variables_at_time): renamed
                (T_system_debug::parse_cmd): switched to using
                        print_variable_values everywhere applicable

2000-09-26  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/cover/Makefile.in (LIBTARGET, TARGET, DEPS): removed -- I
                missed this one in 2000-09-20

2000-09-25  Scott Christa  <schrista@arc.nasa.gov>

        * include/mba_utils/hash_table.h: Fixed a memory leak.
        * src/conflict_db/assignable.cpp: Fixed a signed/unsigned mismatch
                warning and fixed a function from returning an unsigned
                integer to returning a boolean.
        * src/transition/t_system.cpp: Fixed 3 signed/unsigned mismatch
                warnings.

2000-09-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * include/livingstone/L2_assert.h (L2_assert): added #ifdef
                to choose whether to turn off exception handling
        * configure.in (--disable-exceptions): added
        * configure: regenerated

2000-09-25  Benoit Hudson  <bhudson@arc.nasa.gov>

        * bot.mk: reverted change of 2000-09-21
                (changed all $< (a GNU-ism) to $?)

2000-09-14  James Kurien <jkurien@arc.nasa.gov>

    * tms/ltms.cpp:    Updated debug output. No functionality change.
    * transition/T_system.cpp
      transition/tracker.cpp : Fixed history length check so now
	a history of two (current time plus 1 previous time step)
        can be used.

2000-09-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/tms/clause.cpp (operator<<): added spaces between
                propositions, for legibility

2000-09-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/conflict_db/GNUmakefile
          src/cover/GNUmakefile
          src/livdll/GNUmakefile
          src/livingstone/GNUmakefile
          src/mba_utils/GNUmakefile
          src/opsat/GNUmakefile
          src/realtime_api/GNUmakefile
          src/test/GNUmake.in
          src/test/GNUmakefile
          src/tms/GNUmakefile
          src/transition/GNUmakefile
                removed all of these
        * BUILD: removed references to the GNUmakefiles

2000-09-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * makerecur: fixed getting a 'no such directory' when make fails

2000-09-22  Benoit Hudson  <bhudson@arc.nasa.gov>

        * aclocal.m4 (LIV_STRIPWS): added
        * top.mk (LDFLAGS): added (set by configure)
        * configure.in (EXTRA_CXX_FLAGS): removed
                (EXTRA_CXXFLAGS, EXTRA_LIBS, EXTRA_LDFLAGS): added ;
                added -R to get libstdc++.so under gcc ;
                better printing of the flags
                (config_dgb): prettier script than the old one-liner;
                    it should always be commented-out except for debugging
                (AC_PATH_PROG calls): added the if-not-found argument,
                    which deals with fully qualified names
                (--without-warnings): fixed comment, put last rather than
                    first in the list so it overrides -Wall
                (xerces g++ hack): turned g++ into a script, with the -R
                    flag, can't tell if that actually works; added gcc link
                (on output): strip the output variables of ugly whitespace
        * configure: regenerated


2000-09-21  Benoit Hudson  <bhudson@arc.nasa.gov>

        * BUILD: added a comment that you must use GNU make.
        * makerecur: changed -C to two cd's, in an attempt to support a
                Sun make build
        * Makefile.in, bot.mk: changed all $< (a GNU-ism) to $?
                which happens to be equivalent -- and work for Sun make
                -C switches still exist

2000-09-20  Benoit Hudson  <bhudson@arc.nasa.gov>
        Moved xerces into the CVS repository in a reasonable spot.
        Allowed changing version and position of xerces.
        Removed all the code for building the little libraries.

        * BUILD (Requirements): changed (1) to checking out the xerces
                module ; changed (2) to say Sun CC doesn't work and
                nothing else has been tested.

        * Makefile.in
                (XERCES_SO): moved to configure.in and top.mk
                (LIB_INSTALL): replaced by a pattern where it was used
                (BIN_TARGETS, BIN_INSTALL): added l2test
                (xerces): added phony target to build libxerces
                (several small .so's -- opsat et al): removed
                (${loc_libdir}/liblivdll.so): removed Sun template hack,
                        replaced xerces-c1_2 with $(XERCES)
                (*/l2test): added rules that punt to src/test/Makefile.in
                (xerces-clean): replace XERCESCROOT with XERCESENV
                (install): added BIN_INSTALL to the list
                (comments): several lines of '#' added

        * configure.in
                (VERSION): removed
                (SUNCC_TEMPLATE_HACK): removed, it's not necessary
                (checking for Sun CC flags): added -lC to LIBS
                (--with-xerces): added, sets XERCESCROOT
                (--with-xerces-lib): added, sets XERCES
                (--with-Wall, --with-Werror, --with-warnings): added
                (XERCESCROOT): now set by --with-xerces
        * configure: regenerated

        * top.mk (CPPFLAGS): added xerces include path
                (DEP_XERCES, DEP_XERCES_INSTALLED): removed
                (XERCES, XERCES_SO): added

        * src/opsat/Makefile.in, src/realtime_api/Makefile.in,
          src/tms/Makefile.in src/transition/Makefile.in
                (DEPS, CPPFLAGS, LIBTARGET, TARGET): removed

        * src/test/Makefile.in (CPPFLAGS): removed
                (L2TEST_L, L2TEST_RT_L): added -l$(XERCES)
                (DEPS_L): replaced xerces-c1_2 with $(XERCES)


2000-09-19  Benoit Hudson  <bhudson@arc.nasa.gov>
        Main change: liblivdll.so holds everything except xerces;
        we no longer build lots of little libraries.  The one library
        holds the rti and jni if requested by the --enable options.

        * BUILD (Requirements): removed the path from CC and CXX to the Sun
                        compiler
                (Instructions): prefix is now recommended to be `pwd`
                        added explanation of --prefix
                (Using It): added description make -C src/test install
                        removed LD_LIBRARY_PATH if prefix is `pwd`
                (Real-Time Interface): added section

        * Makefile.in
                (LIB_TARGETS): renamed from ALL_LIB_TARGETS,
                        renamed livjni back to livdll
                (LIB_INSTALL): renamed from ALL_LIB_INSTALL,
                        renamed livjni back to livdll
                (LIBDIRS): removed src/livdll (which is the JNI)
                (SUBDIRS): added src/test (so we clean it by default)
                (install, all): depends on LIB_TARGETS
                (livdll targets): renamed from liblivjni (since it
                        no longer necessarily has the JNI)
                (${loc_libdir}/liblivdll.so): added SUNCC_TEMPLATE_HACK,
                        albeit incorrectly.  SunCC works now (!) for the
                        stand-alone but not in stanley.
                (%/liblivdll.so target): removed the soft-link hack
        * configure.in
                (SUNCC_TEMPLATE_HACK): added, not yet used (see above)
                (EXTRA_CXX_FLAGS): for Sun CC, changed -instance=static to
                        -ptr${top_srcdir}
                (--enable-rti): removed check requiring Sun CC,
                        append to rather than set FEATURE_DIRS
                (--enable-jni): added; append src/livdll to FEATURE_DIRS
                        if enabled
        * makelist: removed src/livdll (it's now in FEATURE_DIRS)
        * configure: regenerated

        * src/test/Makefile.in (TARGET, BINTARGET): added as l2test
                (CLEANFILES): added all the targets
                (l2test-jni, L2TEST_JNI_O, L2TEST_JNI_L, L2TEST_JNI_LIBS):
                        removed
                (L2TEST_L, L2TEST_RT_L): shortened to just -llivdll
                (install: DEPS): removed
                (DEPS_L): shortened to -llivdll -lxerces-c1_2
                (BININSTALL): removed

2000-09-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * bot.mk (installing in bindir): removed reference to libtool that
                happened not to make any difference

2000-09-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/test/Makefile.in
                Fixed the make install rule to actually make everything
                compile and work.
                (BININSTALL): added l2test-jni and l2test-rt
                (LIBINSTALL): added
                (DEPS_L): added
                (DEPS): removed the extra copy of livjni

2000-09-19  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in (LIV_CXX_STREAM_WITHASSIGN check): removed
                (EXTRA_CXX_FLAGS) Added -mt flag to Sun CC compilation
                (enable-rti): added for Sun CC only
                (makefiles): renamed from sed_out; used for adding
                        makefiles for features
                (FEATURE_DIRS): added
                NOTE: I'm committing these changes right after noticing
                a Sun CC bug with the -instance=static implementation,
                which I'm about to fix.  So Sun CC compilation fails.
        * makelist: removed src/realtime_api and src/realtime_api/posix,
                now handled by FEATURE_DIRS in configure.in
        * aclocal.m4 (LIV_DEREFF): added helper for the next two
                (LIV_ARG_ENABLE, LIV_ARG_WITH): added wrappers around
                   AC_ARG_ENABLE/AC_ARG_WITH

        * configure: regenerated

        * Makefile.in (LIBDIRS): added @FEATURE_DIRS@
                (${loc_libdir}/liblivrti.so, ${libdir}/liblivrti.so): added
                (${loc_libdir}/liblivjni.so): depend on xerces in
                        loc_libdir, not libdir
        * src/realtime_api/Makefile.in (liblivrti.so): renamed from
                librealtime_api.so
        * src/test/Makefile.in (OBJECTS): removed
                (DEPS): updated -- currently too much
                made the 3 tests each use their own *_O *_L and *_LIBS
                variables
                (L2TEST_RT_L): realtime_api renamed to livrti
                (l2test-rt): added LIBS rather than -lpthread
        * top.mk (LINKLIB, LINKEXEC): added CXXFLAGS and LDFLAGS to the
                command-line


2000-09-14  James Kurien <jkurien@arc.nasa.gov>
        * include/conflict_db/assignment.h :  Now all assignments of the
                same value refer to the same value name, rather than each
                creating a separate copy of the string

 	*include/conflict_db/conflict_db.h
	 include/transition/T_system.h
	 include/transition/transitioned.h
	 src/conflict_db/assignable.cpp src/conflict_db/conflict_db.cpp
	 src/transition/T_system.cpp src/transition/transitioned.cpp :
             Cleaned up usage of find_variable and find_proposition to make
             it clear that they are being used to find a var or prop at the
             previous timestep (the one just behind the "now" timestep).
             We can now optimize looking up variables at that timestep.  No
             change is functionality was intended.


	* cpp/src/livingstone/livingstone.dsp
	  cpp/src/test/test.dsp
	  cpp/src/transition/transition.dsp :
              Fixed the Visual C++ project files so that the release build
              works.  It's about 10 times faster than the debug build.
              There's still a lot of algorithmic optimization do be done.

	* cpp/src/test/test-mof.cpp
 	  cpp/src/test/test.dsp:
	     Added a function in test-mof that runs L2 without the need for
	     external parameters or input from STDIN.  This makes it easier
	     to run the MS Visual C++ profiler.   The new code is commented
	     out with #ifdef MBA_PROFILE.

2000-09-13  James Kurien <jkurien@arc.nasa.gov>
	* include/conflict_db/conflict_db.h
	  include/conflict_db/conflict_db_debug.h
	  src/conflict_db/conflict_db.cpp
	  src/conflict_db/conflict_db_debug.cpp
	  src/transition/T_system_reader.cpp :
           Removed conflict_db->assign(string) and replaced its one usage
           with a call to assignable->assign(string).  This leaves one less
           string API to kill later.   Also created a findDomain in
           conflict_db_debug and noted the use of  conflict_db->findDomain
           in the non-flight model reader should  be fixed to point to the
           debugger, or findDomain should be put in the reader and
           referenced by the debugger.


2000-09-13  James Kurien <jkurien@arc.nasa.gov>
	* include/conflict_db/assignable.h
          src/conflict_db/assignable.cpp:  Added method to return the index
          of the value the assignable variable is assigned to.  This allows
          us to assign another variable in a similar way without using
          strings.   This is a part of an effort to remove/reduce the usage
          of strings in the core engine.

	* include/transition/transitioned.h
	  src/transition/transitioned.cpp :
            Changed variable name to make is clearer we are currently
            working with variable names rather than variables.  The code
            should be upgraded to work with variable objects directly.


2000-09-13  James Kurien <jkurien@arc.nasa.gov>
	* src/tms/ltms_debug.cpp : Fixed props and clauses commands.
	      Before they were named cprops and cclauses.  They had
	      been changed over but not correctly.
	* include/conflict_db/conflict_db_debug.h
	  include/tms/ltms_debug.h
	  src/conflict_db/conflict_db_debug.cpp :
	     Changed pointer to the object being debugged to
	     a reference, since the object cannot be null.

2000-09-13  James Kurien <jkurien@arc.nasa.gov>

        * include/conflict_db/conflict_db_debug.h
	  include/livingstone/livingstone_debug.h
	  include/tms/ltms_debug.h
	  include/transition/T_system_debug.h
	  include/transition/tracker_debug.h
	  src/conflict_db/conflict_db_debug.cpp
	  src/tms/ltms_debug.cpp
	  src/transition/T_system_debug.cpp
	  src/transition/tracker_debug.cpp : Changed so that the
	      debuggers all use a reference to the output stream
	      rather than each creating an ostream_with_assign
	      that is assigned to the output stream.  Previously
	      I had changed the debuggers to that each debugger
	      contains the lower level debugger rather than a
	      pointer to it.

2000-09-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * ChangeLog: created

2000-09-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * src/realtime_api/Makefile.in
          src/realtime_api/posix/Makfile.in : added
        * makelist: added above two directories to the list
        * src/test/Makefile.in (l2test-rt): written for real (was a dummy)
                (L2TEST_RT_O, L2TEST_RT_L, L2TEST_RT_LIBS): added

2000-09-12  Benoit Hudson  <bhudson@arc.nasa.gov>

        * configure.in: don't recur into xerces if --no-recursion is
                specified
        * configure: regenerated

