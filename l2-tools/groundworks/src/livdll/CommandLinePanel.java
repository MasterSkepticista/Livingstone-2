// 
// * See the file "l2-tools/disclaimers-and-notices.txt" for 
// * information on usage and redistribution of this file, 
// * and for a DISCLAIMER OF ALL WARRANTIES. 
// 

/*
 * CommandLinePanel.java
 *
 * Created on September 11, 2002, 3:20 PM
 */

package livdll;

/**
 *
 * @author  stephen
 */
public class CommandLinePanel extends javax.swing.JPanel {
    
    private LivingstoneEngine engine = new LivingstoneEngine();
    
    /** Creates new form CommandLinePanel */
    public CommandLinePanel() throws L2Exception {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        jTextPane1.setFont(new java.awt.Font("Courier New", 0, 12));
        jTextPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextPane1KeyTyped(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPane1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    private void jTextPane1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPane1KeyTyped
        // Add your handling code here:
        int end = jTextPane1.getDocument().getLength();
        jTextPane1.setCaretPosition(end);
        if(evt.getKeyChar() == '\n') {
            try {
                int start = end - 2;
                while(start > 0 && jTextPane1.getDocument().getText(start,1).charAt(0) != '\n' ) {
                    start--;
                }
                String line = jTextPane1.getDocument().getText(start,end-start).trim();
                boolean worked = engine.parseCmd(new livdll.LivingstoneCommand(line));
            } catch(Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jTextPane1KeyTyped
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) throws L2Exception {
        javax.swing.JFrame frame = new javax.swing.JFrame();
        frame.getContentPane().add(new CommandLinePanel(), java.awt.BorderLayout.CENTER);
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                System.exit(0);
            }
        });
        frame.pack();
        frame.show();
    }
    
    protected void appendLine(String line) {
        javax.swing.text.Document doc = jTextPane1.getDocument();
        javax.swing.text.AttributeSet att = jTextPane1.getCharacterAttributes();
        int index = doc.getLength();
        try {
            doc.insertString(index, line, att);
        } catch(javax.swing.text.BadLocationException e) {}
    }
    
}
