package LivingstoneCorba;


/**
* LivingstoneCorba/LivingstoneEventListenerOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LivingstoneCorba.idl
* Thursday, April 20, 2006 4:53:49 PM PDT
*/

public interface LivingstoneEventListenerOperations 
{
  void start ();

  // void setScenarioTrace(ScenarioTrace trace)
  void reportVariables (LivingstoneCorba.LivingstoneAttributeReport attributes);
  void newState (float time, int stateID, String transition, LivingstoneCorba.LivingstoneAssignmentReport assignments);
  void viewState (float time, int stateID, String transition, LivingstoneCorba.LivingstoneAssignmentReport assignments);
  void asynchronousMsg (short state, String msg);

  //void mapOver(Object parent, int depth, MapOverClosure arg);
  void finish ();
  void startReplay ();
  void finishReplay ();

  // OUT
  void gotCandidates (int num);

  //	void gotCurrentHistory(History);
  void gotInstallCandidate (int index);
  void gotAssignment (String monitor);
  void gotProgress (String command);

  // return list of schematic modules, loadable by Stanley
  String getModules ();

  // load Stanley schematic module for use by metaDot
  void loadModule (String moduleName);

  // return list of workspaces, loadable by Stanley
  String getWorkSpaces ();

  // load Stanley workspace for use by getModules, loadModule
  void loadWorkSpace (String workspace);

  // Open Stanley to desired instance & dialog
  void metaDot (String nodeClassType, String instanceName, String dialogType, String modeName);

  // return list of instance names of the requested class type
  String getInstances (String nodeClassType, String componentInstanceName);
} // interface LivingstoneEventListenerOperations
