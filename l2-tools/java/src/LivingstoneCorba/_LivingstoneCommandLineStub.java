package LivingstoneCorba;


/**
* LivingstoneCorba/_LivingstoneCommandLineStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LivingstoneCorba.idl
* Thursday, April 20, 2006 4:53:49 PM PDT
*/

public class _LivingstoneCommandLineStub extends org.omg.CORBA.portable.ObjectImpl implements LivingstoneCorba.LivingstoneCommandLine
{

  public void command (String command)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("command", true);
                $out.write_string (command);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                command (command        );
            } finally {
                _releaseReply ($in);
            }
  } // command

  public String getHistoryTimes () throws LivingstoneCorba.LivingstoneException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getHistoryTimes", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:LivingstoneCorba/LivingstoneException:1.0"))
                    throw LivingstoneCorba.LivingstoneExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getHistoryTimes (        );
            } finally {
                _releaseReply ($in);
            }
  } // getHistoryTimes

  public void enableGUIUpdate ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("enableGUIUpdate", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                enableGUIUpdate (        );
            } finally {
                _releaseReply ($in);
            }
  } // enableGUIUpdate

  public void disableGUIUpdate ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("disableGUIUpdate", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                disableGUIUpdate (        );
            } finally {
                _releaseReply ($in);
            }
  } // disableGUIUpdate


  // commands separated by \n
  public void warpCommands (String commands)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("warpCommands", true);
                $out.write_string (commands);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                warpCommands (commands        );
            } finally {
                _releaseReply ($in);
            }
  } // warpCommands

  public void release ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("release", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                release (        );
            } finally {
                _releaseReply ($in);
            }
  } // release


  // this should be called finalize
  public void addLivingstoneEventListener (LivingstoneCorba.LivingstoneEventListener listener) throws LivingstoneCorba.LivingstoneException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addLivingstoneEventListener", true);
                LivingstoneCorba.LivingstoneEventListenerHelper.write ($out, listener);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:LivingstoneCorba/LivingstoneException:1.0"))
                    throw LivingstoneCorba.LivingstoneExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addLivingstoneEventListener (listener        );
            } finally {
                _releaseReply ($in);
            }
  } // addLivingstoneEventListener

  public void removeLivingstoneEventListener (LivingstoneCorba.LivingstoneEventListener listener) throws LivingstoneCorba.LivingstoneException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeLivingstoneEventListener", true);
                LivingstoneCorba.LivingstoneEventListenerHelper.write ($out, listener);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:LivingstoneCorba/LivingstoneException:1.0"))
                    throw LivingstoneCorba.LivingstoneExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeLivingstoneEventListener (listener        );
            } finally {
                _releaseReply ($in);
            }
  } // removeLivingstoneEventListener

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:LivingstoneCorba/LivingstoneCommandLine:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _LivingstoneCommandLineStub
