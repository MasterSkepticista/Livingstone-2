package gov.nasa.arc.l2tools.io.jmpl;

// $ANTLR 2.7.0: "antlr/jmpl.g" -> "JmplLexer.java"$
public interface JmplTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int PRIVATE_KEYWORD = 4;
	int PUBLIC_KEYWORD = 5;
	int ATTRIBUTE_TYPE_KEYWORD = 6;
	int ATTRIBUTE_TYPE_KEYWORD_FLAT = 7;
	int COMPONENT_TYPE_KEYWORD = 8;
	int COMPONENT_TYPE_KEYWORD_FLAT = 9;
	int EXTENSION_KEYWORD = 10;
	int STATE_VECTOR_KEYWORD = 11;
	int STATE_VECTOR_KEYWORD_FLAT = 12;
	int RELATION_KEYWORD = 13;
	int NOMINAL_TRANSITION_KEYWORD = 14;
	int FAILURE_TRANSITION_KEYWORD = 15;
	int IFF_KEYWORD = 16;
	int IF_KEYWORD = 17;
	int ELSE_KEYWORD = 18;
	int SWITCH_KEYWORD = 19;
	int CASE_KEYWORD = 20;
	int CONTEXT_KEYWORD = 21;
	int ATTRIBUTE_TYPE = 22;
	int ATTRIBUTE_TYPE_VALUE = 23;
	int COMPONENT_TYPE = 24;
	int EXTENSION_CLAUSE = 25;
	int CT_ATTRIBUTE_TYPE = 26;
	int RELATION = 27;
	int NOMINAL_TRANSITION = 28;
	int TRANSITION_COST = 29;
	int FAILURE_TRANSITION = 30;
	int FAILURE_PROBABILITY = 31;
	int STATE_VECTOR = 32;
	int VARIABLE = 33;
	int EXPRESSION = 34;
	int MODIFIERS = 35;
	int CTE_LIST = 36;
	int EMPTY_STATEMENT = 37;
	int IF_STATEMENT = 38;
	int IFF_STATEMENT = 39;
	int SWITCH_STATEMENT = 40;
	int CASE_GROUP = 41;
	int STATEMENT_LIST = 42;
	int LOGICAL_OR_EXPRESSION = 43;
	int LOGICAL_AND_EXPRESSION = 44;
	int LOGICAL_NEGATION_EXPRESSION = 45;
	int LOGICAL_EQUALITY_EXPRESSION = 46;
	int LOGICAL_INEQUALITY_EXPRESSION = 47;
	int CONSTRAINT_INVOCATION = 48;
	int QUALIFIED_NAME = 49;
	int FROM_VECTOR = 50;
	int TO_VECTOR = 51;
	int NOTHING_FOR_STATE_VAR = 52;
	int IDENT = 53;
	int LCURLY = 54;
	int RCURLY = 55;
	int SEMI = 56;
	int COMMA = 57;
	int EQUALS = 58;
	int STRING_LITERAL = 59;
	int DOT = 60;
	int LBRACK = 61;
	int RBRACK = 62;
	int LPAREN = 63;
	int RPAREN = 64;
	int STAR = 65;
	int PLUS = 66;
	int NUM_INT = 67;
	int CHAR_LITERAL = 68;
	int NUM_FLOAT = 69;
	int COLON = 70;
	int LOR = 71;
	int DOR = 72;
	int LAND = 73;
	int DAND = 74;
	int LNOT = 75;
	int BANG = 76;
	int DEQUALS = 77;
	int NOT_EQUALS = 78;
	int WS = 79;
	int SL_COMMENT = 80;
	int ML_COMMENT = 81;
	int ESC = 82;
	int HEX_DIGIT = 83;
	int VOCAB = 84;
	int EXPONENT = 85;
	int FLOAT_SUFFIX = 86;
}
